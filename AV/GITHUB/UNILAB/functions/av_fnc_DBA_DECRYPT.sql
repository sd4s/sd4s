--H:\GITHUB-WORK\Apollo-Unilab\packages\CXSAPILK_body.pls (55 hits)

create or replace FUNCTION DBA_DECRYPT  (A_INPUT_RAW      IN      RAW ) RETURN varchar2
IS
--aanroep: select dba_decrypt(setting_name) from ctlicsecid; 
--
--Het ENcrypt-proces:
--1)Eerst wordt VARCHAR omgezet naar RAW. 
--2)Vervolgens wordt deze waarde GE-ENCRYPT.
--3)De ENCRYPTED-versie wordt geinsert in tabel CTLICSECID !!
--
--Voor DEcrypt omgekeerde route bewandelen:
--
L_DECRYPTED_RAW               RAW(32767);
--
CURSOR L_VDATABASE_CURSOR IS
SELECT *
FROM SYS.V_$DATABASE
WHERE ROWNUM = 1;
L_VDATABASE_REC L_VDATABASE_CURSOR%ROWTYPE;
--
CURSOR L_VDATAFILE_CURSOR IS
SELECT NAME
FROM SYS.V_$DATAFILE
ORDER BY FILE# ASC;
L_VDATAFILE_REC L_VDATAFILE_CURSOR%ROWTYPE;
--
A_DECRYPTED_DATA                 VARCHAR2(2000);
L_LENGTH_FILENAME                number;
L_ACTUAL_LENGTH                  NUMBER;
L_ENCRYPTION_KEY                 VARCHAR2(100);
L_ENCRYPTION_KEY_NORMAL          VARCHAR2(100);
--
BEGIN
  DBMS_OUTPUT.ENABLE(1000000);
  --INPUT = RAW-data uit tabel CLICSECID
  --
  --HET MAKEN VAN ENCRYPTION KEY KOMT UIT: CXSAPILK.INITENCRYPTIONKEY
  OPEN L_VDATABASE_CURSOR;  
  FETCH L_VDATABASE_CURSOR
  INTO L_VDATABASE_REC;
  CLOSE L_VDATABASE_CURSOR;
  L_ENCRYPTION_KEY        := L_VDATABASE_REC.NAME || TO_CHAR(L_VDATABASE_REC.CREATED, 'DDMMYYYYHH24MISS');
  L_ACTUAL_LENGTH := LENGTHB(L_ENCRYPTION_KEY);
  DBMS_OUTPUT.PUT_LINE('encryption-key: '||l_encryption_key||' length: '||l_actual_length);
  --
  L_ACTUAL_LENGTH := LENGTHB(L_ENCRYPTION_KEY);
      IF L_ACTUAL_LENGTH < 24 THEN
         FOR L_VDATAFILE_REC IN L_VDATAFILE_CURSOR LOOP
            L_LENGTH_FILENAME := LENGTHB(L_VDATAFILE_REC.NAME);
            IF L_LENGTH_FILENAME+L_ACTUAL_LENGTH > 24 THEN
               L_ENCRYPTION_KEY := L_ENCRYPTION_KEY||SUBSTRB(L_VDATAFILE_REC.NAME,1,24-L_ACTUAL_LENGTH);
            ELSE
               L_ENCRYPTION_KEY := L_ENCRYPTION_KEY||L_VDATAFILE_REC.NAME;
            END IF;
            L_ACTUAL_LENGTH := LENGTHB(L_ENCRYPTION_KEY);
            EXIT WHEN L_ACTUAL_LENGTH >=24;
         END LOOP;
      END IF;
  L_ENCRYPTION_KEY_NORMAL := UTL_RAW.SUBSTR(UTL_RAW.CAST_TO_RAW(L_ENCRYPTION_KEY),1,24); 
  --ENCRYPTION VANUIT CXSAPIL.ENCRYPT
  --SYS.DBMS_OBFUSCATION_TOOLKIT.DES3ENCRYPT
  --           (INPUT     => UTL_RAW.CAST_TO_RAW(SUBSTRB(RPAD( A_INPUT_STRING, L_NEW_LENGTH, CHR(0)),1,L_NEW_LENGTH)),
  --            KEY       => P_ENCRYPTION_KEY,
  --            ENCRYPTED_DATA => A_ENCRYPTED_DATA,
  --            WHICH            => '1' );
  --HET DECRYPTEN KOMT UIT: CXSAPILK.DECRYPT
  SYS.DBMS_OBFUSCATION_TOOLKIT.DES3DECRYPT
        (INPUT          => A_INPUT_RAW,
         KEY            => l_ENCRYPTION_KEY_NORMAL,
         DECRYPTED_DATA => L_DECRYPTED_RAW,
         WHICH          => '1');
  --ALS DATA DECRYPT IS HEBBEN WE DE RAW-DATA. DEZE VERVOLGENS NOG OMZETTEN NAAR VARCHAR2       
  --IF l_ENCRYPTION_KEY = l_ENCRYPTION_KEY_NORMAL THEN
  --    DBMS_OUTPUT.PUT_LINE(SUBSTR('Decrypt input:#'||A_INPUT_RAW||'#(1)',1,200));
  --    DBMS_OUTPUT.PUT_LINE(SUBSTR('Decrypt ouput:#'||RTRIM(UTL_RAW.CAST_TO_VARCHAR2(L_DECRYPTED_RAW), CHR(0) )||'#(1)',1,200));
  --ELSE
  --    DBMS_OUTPUT.PUT_LINE(SUBSTR('Decrypt input:#'||A_INPUT_RAW||'#(2)',1,200));
  --    DBMS_OUTPUT.PUT_LINE(SUBSTR('Decrypt ouput:#'||RTRIM(UTL_RAW.CAST_TO_VARCHAR2(L_DECRYPTED_RAW), CHR(0) )||'#(2)',1,200));
  --END IF;
  A_DECRYPTED_DATA := RTRIM(UTL_RAW.CAST_TO_VARCHAR2(L_DECRYPTED_RAW), CHR(0) );
  --A_DECRYPTED_DATA :=  L_ENCRYPTION_KEY ||'-'||L_ENCRYPTION_KEY_NORMAL;
  --
  RETURN A_DECRYPTED_DATA;
END DBA_DECRYPT;
/
