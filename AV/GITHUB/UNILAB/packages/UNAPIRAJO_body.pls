PACKAGE BODY unapirajo AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVEJOFROMARCHIVE
(A_JOURNAL_NR IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   
   DELETE FROM UAUTJOURNAL
    WHERE JOURNAL_NR = A_JOURNAL_NR;
   DELETE FROM UAUTJOURNALRQ
    WHERE JOURNAL_NR = A_JOURNAL_NR;
   DELETE FROM UAUTJOURNALLOG
    WHERE JOURNAL_NR = A_JOURNAL_NR;
   DELETE FROM UAUTJOURNALDETAILS
    WHERE JOURNAL_NR = A_JOURNAL_NR;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVEJOFROMARCHIVE;




FUNCTION COPYJOTOARCHDB
(A_JOURNAL_NR IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   
   INSERT INTO UAUTJOURNAL
      (JOURNAL_NR, DESCRIPTION, CURRENCY, CURRENCY2, JOURNAL_TP, JOURNAL_SS,
      CALC_TP, TOTAL1, TOTAL2, DISC_ABS1, DISC_ABS2, DISC_REL, GRAND_TOTAL1,
      GRAND_TOTAL2, TAX1, TAX2, TAX_REL, GRAND_TOTAL_AT1, GRAND_TOTAL_AT2, ACTIVE,
      ALLOW_MODIFY, INVOICED, INVOICED_ON, INVOICED_ON_TZ, DATE1, DATE1_TZ, DATE2,
      DATE2_TZ, DATE3, DATE3_TZ, LAST_UPDATED, LAST_UPDATED_TZ, WHO, COMMENTS,
      INCLUDE_REANAL)
   SELECT  JOURNAL_NR, DESCRIPTION, CURRENCY, CURRENCY2, JOURNAL_TP, JOURNAL_SS,
      CALC_TP, TOTAL1, TOTAL2, DISC_ABS1, DISC_ABS2, DISC_REL, GRAND_TOTAL1,
      GRAND_TOTAL2, TAX1, TAX2, TAX_REL, GRAND_TOTAL_AT1, GRAND_TOTAL_AT2, ACTIVE,
      ALLOW_MODIFY, INVOICED, INVOICED_ON, INVOICED_ON_TZ, DATE1, DATE1_TZ, DATE2,
      DATE2_TZ, DATE3, DATE3_TZ, LAST_UPDATED, LAST_UPDATED_TZ, WHO, COMMENTS,
      INCLUDE_REANAL
   FROM UTJOURNAL
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UAUTJOURNALRQ
      (JOURNAL_NR, RQ, RQSEQ)
   SELECT        JOURNAL_NR, RQ, RQSEQ
   FROM UTJOURNALRQ
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UAUTJOURNALLOG
      (CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, JOURNAL_NR, ERROR_LEVEL,
      ERROR_MSG)
   SELECT  CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, JOURNAL_NR, ERROR_LEVEL,
      ERROR_MSG
   FROM UTJOURNALLOG
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UAUTJOURNALDETAILS
      (JOURNAL_NR, RQSEQ, SEQ, OBJECT_TP, OBJECT_VERSION, RQ, SC, PG, PGNODE,
      PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, PA, PANODE, ME, MENODE,
      REANALYSIS, DESCRIPTION, QTITY, PRICE, DISC_ABS, DISC_REL, NET_PRICE, ACTIVE,
      ALLOW_MODIFY, LAST_UPDATED, LAST_UPDATED_TZ, AC_CODE)
   SELECT  JOURNAL_NR, RQSEQ, SEQ, OBJECT_TP, OBJECT_VERSION, RQ, SC, PG, PGNODE,
      PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, PA, PANODE, ME, MENODE,
      REANALYSIS, DESCRIPTION, QTITY, PRICE, DISC_ABS, DISC_REL, NET_PRICE, ACTIVE,
      ALLOW_MODIFY, LAST_UPDATED, LAST_UPDATED_TZ, AC_CODE
   FROM UTJOURNALDETAILS
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVEJOFROMARCHIVE(A_JOURNAL_NR);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYJOTOARCHDB;

FUNCTION ARCHIVEJOTODB
(A_JOURNAL_NR IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYJOTOARCHDB(A_JOURNAL_NR, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYJOTOARCHDB(A_JOURNAL_NR, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyJoToArchDB#return='||TO_CHAR(L_RET_CODE)||' for journal_nr='||A_JOURNAL_NR;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveJoToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVEJOTODB;

FUNCTION COPYJOFROMARCHDB
(A_JOURNAL_NR IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   
   INSERT INTO UTJOURNAL
      (JOURNAL_NR, DESCRIPTION, CURRENCY, CURRENCY2, JOURNAL_TP, JOURNAL_SS,
      CALC_TP, TOTAL1, TOTAL2, DISC_ABS1, DISC_ABS2, DISC_REL, GRAND_TOTAL1,
      GRAND_TOTAL2, TAX1, TAX2, TAX_REL, GRAND_TOTAL_AT1, GRAND_TOTAL_AT2, ACTIVE,
      ALLOW_MODIFY, INVOICED, INVOICED_ON, INVOICED_ON_TZ, DATE1, DATE1_TZ, DATE2,
      DATE2_TZ, DATE3, DATE3_TZ, LAST_UPDATED, LAST_UPDATED_TZ, WHO, COMMENTS,
      INCLUDE_REANAL)
   SELECT  JOURNAL_NR, DESCRIPTION, CURRENCY, CURRENCY2, JOURNAL_TP, JOURNAL_SS,
      CALC_TP, TOTAL1, TOTAL2, DISC_ABS1, DISC_ABS2, DISC_REL, GRAND_TOTAL1,
      GRAND_TOTAL2, TAX1, TAX2, TAX_REL, GRAND_TOTAL_AT1, GRAND_TOTAL_AT2, ACTIVE,
      ALLOW_MODIFY, INVOICED, INVOICED_ON, INVOICED_ON_TZ, DATE1, DATE1_TZ, DATE2,
      DATE2_TZ, DATE3, DATE3_TZ, LAST_UPDATED, LAST_UPDATED_TZ, WHO, COMMENTS,
      INCLUDE_REANAL
   FROM UAUTJOURNAL
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UTJOURNALRQ
      (JOURNAL_NR, RQ, RQSEQ)
   SELECT        JOURNAL_NR, RQ, RQSEQ
   FROM UAUTJOURNALRQ
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UTJOURNALLOG
      (CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, JOURNAL_NR, ERROR_LEVEL,
      ERROR_MSG)
   SELECT  CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, JOURNAL_NR, ERROR_LEVEL,
      ERROR_MSG
   FROM UAUTJOURNALLOG
   WHERE JOURNAL_NR = A_JOURNAL_NR;
   INSERT INTO UTJOURNALDETAILS
      (JOURNAL_NR, RQSEQ, SEQ, OBJECT_TP, OBJECT_VERSION, RQ, SC, PG, PGNODE,
      PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, PA, PANODE, ME, MENODE,
      REANALYSIS, DESCRIPTION, QTITY, PRICE, DISC_ABS, DISC_REL, NET_PRICE, ACTIVE,
      ALLOW_MODIFY, LAST_UPDATED, LAST_UPDATED_TZ, AC_CODE)
   SELECT  JOURNAL_NR, RQSEQ, SEQ, OBJECT_TP, OBJECT_VERSION, RQ, SC, PG, PGNODE,
      PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, PA, PANODE, ME, MENODE,
      REANALYSIS, DESCRIPTION, QTITY, PRICE, DISC_ABS, DISC_REL, NET_PRICE, ACTIVE,
      ALLOW_MODIFY, LAST_UPDATED, LAST_UPDATED_TZ, AC_CODE
   FROM UAUTJOURNALDETAILS
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVEJOFROMDB(A_JOURNAL_NR);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYJOFROMARCHDB;

FUNCTION RESTOREJOFROMDB
(A_JOURNAL_NR IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYJOFROMARCHDB(A_JOURNAL_NR, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYJOFROMARCHDB(A_JOURNAL_NR, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyJoFromArchDB#return='||TO_CHAR(L_RET_CODE)||' for journal_nr='||A_JOURNAL_NR;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreJoFromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTOREJOFROMDB;

FUNCTION REMOVEJOFROMDB
(A_JOURNAL_NR IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   

   DELETE FROM UTJOURNAL
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   DELETE FROM UTJOURNALRQ
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   DELETE FROM UTJOURNALLOG
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   DELETE FROM UTJOURNALDETAILS
   WHERE JOURNAL_NR = A_JOURNAL_NR;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVEJOFROMDB;

FUNCTION ARCHIVEJOTOFILE
(A_JOURNAL_NR IN VARCHAR2)
RETURN NUMBER IS
   
   CURSOR L_UTJOURNAL_CURSOR (A_JOURNAL_NR IN VARCHAR2) IS
      SELECT * FROM UTJOURNAL WHERE JOURNAL_NR=A_JOURNAL_NR;

   CURSOR L_UTJOURNALRQ_CURSOR (A_JOURNAL_NR IN VARCHAR2) IS
      SELECT * FROM UTJOURNALRQ WHERE JOURNAL_NR=A_JOURNAL_NR;

   CURSOR L_UTJOURNALLOG_CURSOR (A_JOURNAL_NR IN VARCHAR2) IS
      SELECT * FROM UTJOURNALLOG WHERE JOURNAL_NR=A_JOURNAL_NR;

   CURSOR L_UTJOURNALDETAILS_CURSOR (A_JOURNAL_NR IN VARCHAR2) IS
      SELECT * FROM UTJOURNALDETAILS WHERE JOURNAL_NR=A_JOURNAL_NR;

BEGIN
   L_SQLERRM := NULL;
   UNAPIRA.L_EXCEPTION_STEP :='utjournal'||'journal_nr='||A_JOURNAL_NR;
   FOR L_REC IN L_UTJOURNAL_CURSOR(A_JOURNAL_NR) LOOP
      UNAPIRA3.L_PUTTEXT := 'utjournal' || L_SEP ||
      L_REC.JOURNAL_NR || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.CURRENCY || L_SEP || L_REC.CURRENCY2 || L_SEP ||
      L_REC.JOURNAL_TP || L_SEP || L_REC.JOURNAL_SS || L_SEP ||
      L_REC.CALC_TP || L_SEP || L_REC.TOTAL1 || L_SEP || L_REC.TOTAL2 || L_SEP ||
      L_REC.DISC_ABS1 || L_SEP || L_REC.DISC_ABS2 || L_SEP ||
      L_REC.DISC_REL || L_SEP || L_REC.GRAND_TOTAL1 || L_SEP ||
      L_REC.GRAND_TOTAL2 || L_SEP || L_REC.TAX1 || L_SEP || L_REC.TAX2 || L_SEP ||
      L_REC.TAX_REL || L_SEP || L_REC.GRAND_TOTAL_AT1 || L_SEP ||
      L_REC.GRAND_TOTAL_AT2 || L_SEP || L_REC.ACTIVE || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.INVOICED || L_SEP ||
      TO_CHAR(L_REC.INVOICED_ON,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.INVOICED_ON_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE1,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE1_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LAST_UPDATED,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LAST_UPDATED_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHO || L_SEP || L_REC.COMMENTS || L_SEP ||
      L_REC.INCLUDE_REANAL;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utjournalrq'||'journal_nr='||A_JOURNAL_NR;
   FOR L_REC IN L_UTJOURNALRQ_CURSOR(A_JOURNAL_NR) LOOP
      UNAPIRA3.L_PUTTEXT := 'utjournalrq' || L_SEP ||
      L_REC.JOURNAL_NR || L_SEP || L_REC.RQ || L_SEP || L_REC.RQSEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utjournallog'||'journal_nr='||A_JOURNAL_NR;
   FOR L_REC IN L_UTJOURNALLOG_CURSOR(A_JOURNAL_NR) LOOP
      UNAPIRA3.L_PUTTEXT := 'utjournallog' || L_SEP ||
      L_REC.CLIENT_ID || L_SEP || L_REC.APPLIC || L_SEP || L_REC.WHO || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.JOURNAL_NR || L_SEP || L_REC.ERROR_LEVEL || L_SEP ||
      L_REC.ERROR_MSG;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utjournaldetails'||'journal_nr='||A_JOURNAL_NR;
   FOR L_REC IN L_UTJOURNALDETAILS_CURSOR(A_JOURNAL_NR) LOOP
      UNAPIRA3.L_PUTTEXT := 'utjournaldetails' || L_SEP ||
      L_REC.JOURNAL_NR || L_SEP || L_REC.RQSEQ || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.OBJECT_TP || L_SEP || L_REC.OBJECT_VERSION || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.SC || L_SEP || L_REC.PG || L_SEP ||
      L_REC.PGNODE || L_SEP || L_REC.PP_KEY1 || L_SEP || L_REC.PP_KEY2 || L_SEP ||
      L_REC.PP_KEY3 || L_SEP || L_REC.PP_KEY4 || L_SEP ||
      L_REC.PP_KEY5 || L_SEP || L_REC.PA || L_SEP || L_REC.PANODE || L_SEP ||
      L_REC.ME || L_SEP || L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.QTITY || L_SEP ||
      L_REC.PRICE || L_SEP || L_REC.DISC_ABS || L_SEP ||
      L_REC.DISC_REL || L_SEP || L_REC.NET_PRICE || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      TO_CHAR(L_REC.LAST_UPDATED,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LAST_UPDATED_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.AC_CODE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

UNAPIRA3.U4DATAPUTLINE( ' ');

RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveJoToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVEJOTOFILE;

BEGIN
   L_SEP := UNAPIRA.P_INTERNAL_SEP;
END UNAPIRAJO;