PACKAGE BODY unapirach AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

CURSOR L_ALLCHGK_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   DECODE(SUBSTR(TABLE_NAME,1,6),'UTCHGK',1, 2) TABLE_ORDER1,
   LENGTH(TABLE_NAME) TABLE_ORDER2
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'CH'
   AND (TABLE_NAME LIKE 'UTCHGK%')
   ORDER BY 2 ASC, 3 ASC, 1 ASC;

CURSOR L_ALLCHCUSTOM_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   LENGTH(TABLE_NAME) TABLE_ORDER1
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'CH'
   AND TABLE_NAME LIKE 'AT%'
   ORDER BY 2 ASC, 1 ASC;

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVECHFROMARCHIVE
(A_CH IN VARCHAR2)
RETURN NUMBER IS
BEGIN
 
 FOR L_TABLE_REC IN L_ALLCHGK_TABLES_CURSOR LOOP
  L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
  L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
        'WHERE ch=:a_ch';
  BEGIN
   DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
   DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
   L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
  EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE <> -942 THEN
    L_SQLERRM := SUBSTR(SQLERRM,1,200);
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);
    L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
    LOGERROR ('RemoveChFromArchive',L_SQLERRM);





   END IF;
  END;
  DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
 END LOOP;

   
   FOR L_TABLE_REC IN L_ALLCHCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
        'WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
         WHEN OTHERS THEN
            IF SQLCODE <> -942 THEN
               L_SQLERRM := SUBSTR(SQLERRM,1,200);
               LOGERROR ('RemoveChFromArchive',L_SQLERRM);
               L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
               LOGERROR ('RemoveChFromArchive',L_SQLERRM);
            END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;

   

   DELETE FROM UAUTCH
   WHERE CH = A_CH;

   DELETE FROM UAUTCHAU
   WHERE CH = A_CH;

   DELETE FROM UAUTCHHS
   WHERE CH = A_CH;

   DELETE FROM UAUTCHHSDETAILS
   WHERE CH = A_CH;

   DELETE FROM UAUTCHDP
   WHERE CH = A_CH;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVECHFROMARCHIVE;




FUNCTION COPYCHTOARCHDB(A_CH IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
L_STEP VARCHAR2(255) ;
BEGIN
   
   L_STEP := 'uautch->utch' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautch' ||
   UNAPIRA.LISTALLCOLUMNS('utch', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utch', 'NO_BRACKETS', '1') ||
   ' FROM utch' ||
   ' WHERE ch = '''||A_CH||'''';
   L_STEP := 'uautchau->utchau' ;
   INSERT INTO UAUTCHAU
      (CH, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        CH, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTCHAU
   WHERE CH = A_CH;
   L_STEP := 'uautchhs->utchhs' ;
   INSERT INTO UAUTCHHS
      (CH, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  CH, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UTCHHS
   WHERE CH = A_CH;
   L_STEP := 'uautchhsdetails->utchhsdetails' ;
   INSERT INTO UAUTCHHSDETAILS
      (CH, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        CH, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTCHHSDETAILS
   WHERE CH = A_CH;
   L_STEP := 'uautchdp->utchdp' ;
   INSERT INTO UAUTCHDP
      (CH, DATAPOINT_SEQ, MEASURE_SEQ, X_VALUE_F, X_VALUE_S, X_VALUE_D,
      X_VALUE_D_TZ, DATAPOINT_VALUE_F, DATAPOINT_VALUE_S, DATAPOINT_LABEL,
      DATAPOINT_MARKER, DATAPOINT_COLOUR, DATAPOINT_LINK, Z_VALUE_F, Z_VALUE_S,
      DATAPOINT_RANGE, SQC_AVG, SQC_AVG_RANGE, SQC_STD_DEV, SQC_STD_DEV_RANGE,
      SPEC1, SPEC2, SPEC3, SPEC4, SPEC5, SPEC6, SPEC7, SPEC8, SPEC9, SPEC10, SPEC11,
      SPEC12, SPEC13, SPEC14, SPEC15, RULE1_VIOLATED, RULE2_VIOLATED,
      RULE3_VIOLATED, RULE4_VIOLATED, RULE5_VIOLATED, RULE6_VIOLATED,
      RULE7_VIOLATED, ACTIVE)
   SELECT  CH, DATAPOINT_SEQ, MEASURE_SEQ, X_VALUE_F, X_VALUE_S, X_VALUE_D,
      X_VALUE_D_TZ, DATAPOINT_VALUE_F, DATAPOINT_VALUE_S, DATAPOINT_LABEL,
      DATAPOINT_MARKER, DATAPOINT_COLOUR, DATAPOINT_LINK, Z_VALUE_F, Z_VALUE_S,
      DATAPOINT_RANGE, SQC_AVG, SQC_AVG_RANGE, SQC_STD_DEV, SQC_STD_DEV_RANGE,
      SPEC1, SPEC2, SPEC3, SPEC4, SPEC5, SPEC6, SPEC7, SPEC8, SPEC9, SPEC10, SPEC11,
      SPEC12, SPEC13, SPEC14, SPEC15, RULE1_VIOLATED, RULE2_VIOLATED,
      RULE3_VIOLATED, RULE4_VIOLATED, RULE5_VIOLATED, RULE6_VIOLATED,
      RULE7_VIOLATED, ACTIVE
   FROM UTCHDP
   WHERE CH = A_CH;

   
   FOR L_TABLE_REC IN L_ALLCHGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyChToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyChToArchDB',L_SQLERRM);




         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   FOR L_TABLE_REC IN L_ALLCHCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyChToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyChToArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyChToArchDB',L_SQLERRM);
         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVECHFROMARCHIVE(A_CH);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYCHTOARCHDB;

FUNCTION ARCHIVECHTODB
(A_CH IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYCHTOARCHDB(A_CH, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYCHTOARCHDB(A_CH, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyChToArchDB#return='||TO_CHAR(L_RET_CODE)||' for ch='||A_CH;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveChToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVECHTODB;

FUNCTION COPYCHFROMARCHDB(A_CH IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
L_STEP VARCHAR2(255) ;
BEGIN
   

   EXECUTE IMMEDIATE
   'INSERT INTO utch' ||
   UNAPIRA.LISTALLCOLUMNS('utch', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utch', 'NO_BRACKETS', '1') ||
   ' FROM uautch' ||
   ' WHERE ch = '''||A_CH||'''';

   INSERT INTO UTCHAU
      (CH, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        CH, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTCHAU
   WHERE CH = A_CH;

   INSERT INTO UTCHHS
      (CH, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  CH, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UAUTCHHS
   WHERE CH = A_CH;

   INSERT INTO UTCHHSDETAILS
      (CH, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        CH, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTCHHSDETAILS
   WHERE CH = A_CH;

   INSERT INTO UTCHDP
      (CH, DATAPOINT_SEQ, MEASURE_SEQ, X_VALUE_F, X_VALUE_S, X_VALUE_D,
      X_VALUE_D_TZ, DATAPOINT_VALUE_F, DATAPOINT_VALUE_S, DATAPOINT_LABEL,
      DATAPOINT_MARKER, DATAPOINT_COLOUR, DATAPOINT_LINK, Z_VALUE_F, Z_VALUE_S,
      DATAPOINT_RANGE, SQC_AVG, SQC_AVG_RANGE, SQC_STD_DEV, SQC_STD_DEV_RANGE,
      SPEC1, SPEC2, SPEC3, SPEC4, SPEC5, SPEC6, SPEC7, SPEC8, SPEC9, SPEC10, SPEC11,
      SPEC12, SPEC13, SPEC14, SPEC15, RULE1_VIOLATED, RULE2_VIOLATED,
      RULE3_VIOLATED, RULE4_VIOLATED, RULE5_VIOLATED, RULE6_VIOLATED,
      RULE7_VIOLATED, ACTIVE)
   SELECT  CH, DATAPOINT_SEQ, MEASURE_SEQ, X_VALUE_F, X_VALUE_S, X_VALUE_D,
      X_VALUE_D_TZ, DATAPOINT_VALUE_F, DATAPOINT_VALUE_S, DATAPOINT_LABEL,
      DATAPOINT_MARKER, DATAPOINT_COLOUR, DATAPOINT_LINK, Z_VALUE_F, Z_VALUE_S,
      DATAPOINT_RANGE, SQC_AVG, SQC_AVG_RANGE, SQC_STD_DEV, SQC_STD_DEV_RANGE,
      SPEC1, SPEC2, SPEC3, SPEC4, SPEC5, SPEC6, SPEC7, SPEC8, SPEC9, SPEC10, SPEC11,
      SPEC12, SPEC13, SPEC14, SPEC15, RULE1_VIOLATED, RULE2_VIOLATED,
      RULE3_VIOLATED, RULE4_VIOLATED, RULE5_VIOLATED, RULE6_VIOLATED,
      RULE7_VIOLATED, ACTIVE
   FROM UAUTCHDP
   WHERE CH = A_CH;
   
   FOR L_TABLE_REC IN L_ALLCHGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyChFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyChFromArchDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLCHCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyChFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyChFromArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyChFromArchDB',L_SQLERRM);
         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVECHFROMDB(A_CH);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYCHFROMARCHDB;

FUNCTION RESTORECHFROMDB
(A_CH IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYCHFROMARCHDB(A_CH, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYCHFROMARCHDB(A_CH, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyChFromArchDB#return='||TO_CHAR(L_RET_CODE)||' for ch='||A_CH;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreChFromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTORECHFROMDB;

FUNCTION REMOVECHFROMDB
(A_CH IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   
   FOR L_TABLE_REC IN L_ALLCHGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveChFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveChFromDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLCHCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE ch=:a_ch';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_ch', A_CH);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveChFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveChFromDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;

   

   DELETE FROM UTCH
   WHERE CH = A_CH;

   DELETE FROM UTCHAU
   WHERE CH = A_CH;

   DELETE FROM UTCHHS
   WHERE CH = A_CH;

   DELETE FROM UTCHHSDETAILS
   WHERE CH = A_CH;

   DELETE FROM UTCHDP
   WHERE CH = A_CH;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVECHFROMDB;

FUNCTION ARCHIVECHTOFILE
(A_CH            IN VARCHAR2)
RETURN NUMBER IS

CURSOR L_UTCH_CURSOR (A_CH IN VARCHAR2) IS
   SELECT * FROM UDCH WHERE CH=A_CH;

CURSOR L_UTCHAU_CURSOR (A_CH IN VARCHAR2) IS
   SELECT * FROM UTCHAU WHERE CH=A_CH;

CURSOR L_UTCHHS_CURSOR (A_CH IN VARCHAR2) IS
   SELECT * FROM UTCHHS WHERE CH=A_CH;

CURSOR L_UTCHHSDETAILS_CURSOR (A_CH IN VARCHAR2) IS
   SELECT * FROM UTCHHSDETAILS WHERE CH=A_CH;

CURSOR L_UTCHDP_CURSOR (A_CH IN VARCHAR2) IS
   SELECT * FROM UTCHDP WHERE CH=A_CH;

BEGIN
   L_SQLERRM:=NULL;
   UNAPIRA.L_EXCEPTION_STEP :='utch' ||'ch='||A_CH;
   FOR L_REC IN L_UTCH_CURSOR(A_CH) LOOP
      UNAPIRA3.L_PUTTEXT := 'utch' || L_SEP ||
      L_REC.CH || L_SEP || L_REC.CY || L_SEP || L_REC.CY_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.CHART_TITLE || L_SEP ||
      L_REC.X_AXIS_TITLE || L_SEP || L_REC.Y_AXIS_TITLE || L_SEP ||
      L_REC.Y_AXIS_UNIT || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.CH_CONTEXT_KEY || L_SEP || L_REC.DATAPOINT_CNT || L_SEP ||
      L_REC.DATAPOINT_UNIT || L_SEP || L_REC.XR_MEASUREMENTS || L_SEP ||
      L_REC.XR_MAX_CHARTS || L_SEP || L_REC.SQC_AVG || L_SEP ||
      L_REC.SQC_STD_DEV || L_SEP || L_REC.SQC_AVG_RANGE || L_SEP ||
      L_REC.SQC_STD_DEV_RANGE || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGN_CF || L_SEP || L_REC.CY_CALC_CF || L_SEP ||
      L_REC.VISUAL_CF || L_SEP || L_REC.VALID_SQC_RULE1 || L_SEP ||
      L_REC.VALID_SQC_RULE2 || L_SEP || L_REC.VALID_SQC_RULE3 || L_SEP ||
      L_REC.VALID_SQC_RULE4 || L_SEP || L_REC.VALID_SQC_RULE5 || L_SEP ||
      L_REC.VALID_SQC_RULE6 || L_SEP || L_REC.VALID_SQC_RULE7 || L_SEP ||
      L_REC.XR_SERIE_SEQ || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.CH_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS || L_SEP || L_REC.AR1 || L_SEP || L_REC.AR2 || L_SEP ||
      L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP || L_REC.AR5 || L_SEP ||
      L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP || L_REC.AR8 || L_SEP ||
      L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP || L_REC.AR11 || L_SEP ||
      L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP || L_REC.AR14 || L_SEP ||
      L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP || L_REC.AR17 || L_SEP ||
      L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP || L_REC.AR20 || L_SEP ||
      L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP || L_REC.AR23 || L_SEP ||
      L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP || L_REC.AR26 || L_SEP ||
      L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP || L_REC.AR29 || L_SEP ||
      L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP || L_REC.AR32 || L_SEP ||
      L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP || L_REC.AR35 || L_SEP ||
      L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP || L_REC.AR38 || L_SEP ||
      L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP || L_REC.AR41 || L_SEP ||
      L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP || L_REC.AR44 || L_SEP ||
      L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP || L_REC.AR47 || L_SEP ||
      L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP || L_REC.AR50 || L_SEP ||
      L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP || L_REC.AR53 || L_SEP ||
      L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP || L_REC.AR56 || L_SEP ||
      L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP || L_REC.AR59 || L_SEP ||
      L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP || L_REC.AR62 || L_SEP ||
      L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP || L_REC.AR65 || L_SEP ||
      L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP || L_REC.AR68 || L_SEP ||
      L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP || L_REC.AR71 || L_SEP ||
      L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP || L_REC.AR74 || L_SEP ||
      L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP || L_REC.AR77 || L_SEP ||
      L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP || L_REC.AR80 || L_SEP ||
      L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP || L_REC.AR83 || L_SEP ||
      L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP || L_REC.AR86 || L_SEP ||
      L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP || L_REC.AR89 || L_SEP ||
      L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP || L_REC.AR92 || L_SEP ||
      L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP || L_REC.AR95 || L_SEP ||
      L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP || L_REC.AR98 || L_SEP ||
      L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP || L_REC.AR101 || L_SEP ||
      L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP || L_REC.AR104 || L_SEP ||
      L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP || L_REC.AR107 || L_SEP ||
      L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP || L_REC.AR110 || L_SEP ||
      L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP || L_REC.AR113 || L_SEP ||
      L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP || L_REC.AR116 || L_SEP ||
      L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP || L_REC.AR119 || L_SEP ||
      L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP || L_REC.AR122 || L_SEP ||
      L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP || L_REC.AR125 || L_SEP ||
      L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP || L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utchau' ||'ch='||A_CH;
   FOR L_REC IN L_UTCHAU_CURSOR(A_CH) LOOP
      UNAPIRA3.L_PUTTEXT := 'utchau' || L_SEP ||
      L_REC.CH || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utchhs' ||'ch='||A_CH;
   FOR L_REC IN L_UTCHHS_CURSOR(A_CH) LOOP
      UNAPIRA3.L_PUTTEXT := 'utchhs' || L_SEP ||
      L_REC.CH || L_SEP || L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utchhsdetails' ||'ch='||A_CH;
   FOR L_REC IN L_UTCHHSDETAILS_CURSOR(A_CH) LOOP
      UNAPIRA3.L_PUTTEXT := 'utchhsdetails' || L_SEP ||
      L_REC.CH || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utchdp' ||'ch='||A_CH;
   FOR L_REC IN L_UTCHDP_CURSOR(A_CH) LOOP
      UNAPIRA3.L_PUTTEXT := 'utchdp' || L_SEP ||
      L_REC.CH || L_SEP || L_REC.DATAPOINT_SEQ || L_SEP ||
      L_REC.MEASURE_SEQ || L_SEP || L_REC.X_VALUE_F || L_SEP ||
      L_REC.X_VALUE_S || L_SEP ||
      TO_CHAR(L_REC.X_VALUE_D,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.X_VALUE_D_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.DATAPOINT_VALUE_F || L_SEP || L_REC.DATAPOINT_VALUE_S || L_SEP ||
      L_REC.DATAPOINT_LABEL || L_SEP || L_REC.DATAPOINT_MARKER || L_SEP ||
      L_REC.DATAPOINT_COLOUR || L_SEP || L_REC.DATAPOINT_LINK || L_SEP ||
      L_REC.Z_VALUE_F || L_SEP || L_REC.Z_VALUE_S || L_SEP ||
      L_REC.DATAPOINT_RANGE || L_SEP || L_REC.SQC_AVG || L_SEP ||
      L_REC.SQC_AVG_RANGE || L_SEP || L_REC.SQC_STD_DEV || L_SEP ||
      L_REC.SQC_STD_DEV_RANGE || L_SEP || L_REC.SPEC1 || L_SEP ||
      L_REC.SPEC2 || L_SEP || L_REC.SPEC3 || L_SEP || L_REC.SPEC4 || L_SEP ||
      L_REC.SPEC5 || L_SEP || L_REC.SPEC6 || L_SEP || L_REC.SPEC7 || L_SEP ||
      L_REC.SPEC8 || L_SEP || L_REC.SPEC9 || L_SEP || L_REC.SPEC10 || L_SEP ||
      L_REC.SPEC11 || L_SEP || L_REC.SPEC12 || L_SEP || L_REC.SPEC13 || L_SEP ||
      L_REC.SPEC14 || L_SEP || L_REC.SPEC15 || L_SEP ||
      L_REC.RULE1_VIOLATED || L_SEP || L_REC.RULE2_VIOLATED || L_SEP ||
      L_REC.RULE3_VIOLATED || L_SEP || L_REC.RULE4_VIOLATED || L_SEP ||
      L_REC.RULE5_VIOLATED || L_SEP || L_REC.RULE6_VIOLATED || L_SEP ||
      L_REC.RULE7_VIOLATED || L_SEP || L_REC.ACTIVE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   
   
   UNAPIRA.L_EXCEPTION_STEP :='ArchiveChCustomToFile#ch='||A_CH;
   L_RET_CODE := UNAPIRA3.ARCHIVECHCUSTOMTOFILE(A_CH);
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'ArchiveChCustomToFile return='||L_RET_CODE||'for ch '||A_CH;
      RAISE STPERROR;
   END IF;

   UNAPIRA3.U4DATAPUTLINE( ' ');

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveChToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVECHTOFILE;

BEGIN
   L_SEP:=UNAPIRA.P_INTERNAL_SEP;
END UNAPIRACH;