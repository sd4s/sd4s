PACKAGE BODY unapirarq AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

CURSOR L_ALLRQGK_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   DECODE(SUBSTR(TABLE_NAME,1,6),'UTRQGK',1, 3) TABLE_ORDER1,
   LENGTH(TABLE_NAME) TABLE_ORDER2
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'RQ'
   AND TABLE_NAME LIKE 'UTRQGK%'
   ORDER BY 2 ASC, 3 ASC, 1 ASC;

CURSOR L_ALLRQCUSTOM_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   LENGTH(TABLE_NAME) TABLE_ORDER1
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'RQ'
   AND TABLE_NAME LIKE 'AT%'
   ORDER BY 2 ASC, 1 ASC;

CURSOR L_RQ_SAMPLES_CURSOR(A_RQ VARCHAR2) IS
   SELECT SC
   FROM UTRQSC
   WHERE RQ = A_RQ
   ORDER BY SEQ;

CURSOR L_RQSC_ONLY_USED_BY_RQ_CURSOR(A_RQ VARCHAR2) IS
   SELECT SC
   FROM UTRQSC
   WHERE RQ = A_RQ
   MINUS
   SELECT SC
   FROM UTRQSC
   WHERE RQ <> A_RQ
   AND SC IN (SELECT SC FROM UTRQSC WHERE RQ = A_RQ)
   ORDER BY 1;


CURSOR L_ALL_LTRQII(A_RQ VARCHAR2) IS
 SELECT II, IIVALUE
 FROM UTRQII
 WHERE RQ = A_RQ
   AND SUBSTR(IIVALUE,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_UTLONGTEXT (A_DOC_NAME VARCHAR2) IS
 SELECT
    OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
 FROM UTLONGTEXT
 WHERE DOC_NAME = A_DOC_NAME ;

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVERQFROMARCHIVE
(A_RQ IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   
   FOR L_RQII IN L_ALL_LTRQII(A_RQ) LOOP
      DELETE FROM UAUTLONGTEXT
      WHERE DOC_NAME = L_RQII.IIVALUE;
   END LOOP;

   

   DELETE FROM UAUTRQ
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQAU
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQHS
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQHSDETAILS
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQPP
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQPPAU
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQIC
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQICAU
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQICHS
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQICHSDETAILS
   WHERE RQ = A_RQ;

   DELETE FROM UAUTRQII
   WHERE RQ = A_RQ;

   
   FOR L_SAMPLES_REC IN L_RQSC_ONLY_USED_BY_RQ_CURSOR(A_RQ) LOOP
      L_RET_CODE := UNAPIRASC.REMOVESCFROMARCHIVE(L_SAMPLES_REC.SC);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'RemoveScFromArchive returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
   END LOOP;

   
   DELETE FROM UAUTRQSC
   WHERE RQ = A_RQ;

   L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
   
   FOR L_TABLE_REC IN L_ALLRQGK_TABLES_CURSOR LOOP
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLRQCUSTOM_TABLES_CURSOR LOOP
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('RemoveRqFromArchive',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);

   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVERQFROMARCHIVE;

FUNCTION COPYRQTOARCHDB(A_RQ IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   
   FOR L_RQII IN L_ALL_LTRQII(A_RQ) LOOP
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE UAUTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE;
      END;
   END LOOP;
   
   EXECUTE IMMEDIATE
   'INSERT INTO uautrq' ||
   UNAPIRA.LISTALLCOLUMNS('utrq', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrq', 'NO_BRACKETS', '1') ||
   ' FROM utrq' ||
   ' WHERE rq = '''||A_RQ||'''';
   INSERT INTO UAUTRQAU
      (RQ, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        RQ, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTRQAU
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQHS
      (RQ, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  RQ, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UTRQHS
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQHSDETAILS
      (RQ, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        RQ, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTRQHSDETAILS
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQPP
      (RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, SEQ, DELAY,
      DELAY_UNIT, FREQ_TP, FREQ_VAL, FREQ_UNIT, INVERT_FREQ, LAST_SCHED,
      LAST_SCHED_TZ, LAST_CNT, LAST_VAL, INHERIT_AU)
   SELECT  RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, SEQ, DELAY,
      DELAY_UNIT, FREQ_TP, FREQ_VAL, FREQ_UNIT, INVERT_FREQ, LAST_SCHED,
      LAST_SCHED_TZ, LAST_CNT, LAST_VAL, INHERIT_AU
   FROM UTRQPP
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQPPAU
      (RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, AU,
      AU_VERSION, AUSEQ, VALUE)
   SELECT  RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, AU,
      AU_VERSION, AUSEQ, VALUE
   FROM UTRQPPAU
   WHERE RQ = A_RQ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautrqic' ||
   UNAPIRA.LISTALLCOLUMNS('utrqic', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrqic', 'NO_BRACKETS', '1') ||
   ' FROM utrqic' ||
   ' WHERE rq = '''||A_RQ||'''';
   INSERT INTO UAUTRQICAU
      (RQ, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        RQ, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTRQICAU
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQICHS
      (RQ, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  RQ, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTRQICHS
   WHERE RQ = A_RQ;
   INSERT INTO UAUTRQICHSDETAILS
      (RQ, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        RQ, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTRQICHSDETAILS
   WHERE RQ = A_RQ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautrqii' ||
   UNAPIRA.LISTALLCOLUMNS('utrqii', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrqii', 'NO_BRACKETS', '1') ||
   ' FROM utrqii' ||
   ' WHERE rq = '''||A_RQ||'''';
   
   INSERT INTO UAUTRQSC
      (RQ, SC, SEQ, ASSIGN_DATE, ASSIGN_DATE_TZ, ASSIGNED_BY)
   SELECT        RQ, SC, SEQ, ASSIGN_DATE, ASSIGN_DATE_TZ, ASSIGNED_BY
   FROM UTRQSC
   WHERE RQ = A_RQ;

   
   FOR L_SAMPLES_REC IN L_RQ_SAMPLES_CURSOR(A_RQ) LOOP
      L_RET_CODE := UNAPIRASC.REMOVESCFROMARCHIVE(L_SAMPLES_REC.SC);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'RemoveScFromArchDB returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
      L_RET_CODE := UNAPIRASC.COPYSCTOARCHDB(L_SAMPLES_REC.SC,A_IGNORE_DUP_VAL_ON_INDEX, 'rq');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyScToArchDB returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
   END LOOP;

   L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
   
   FOR L_TABLE_REC IN L_ALLRQGK_TABLES_CURSOR LOOP
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLRQCUSTOM_TABLES_CURSOR LOOP
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyRqToArchDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);

   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVERQFROMARCHIVE(A_RQ);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYRQTOARCHDB;

FUNCTION ARCHIVERQTODB
(A_RQ IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYRQTOARCHDB(A_RQ, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYRQTOARCHDB(A_RQ, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyRqToArchDB#return='||TO_CHAR(L_RET_CODE)||' for rq='||A_RQ;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveRqToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVERQTODB;

FUNCTION COPYRQFROMARCHDB(A_RQ IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   

   EXECUTE IMMEDIATE
   'INSERT INTO utrq' ||
   UNAPIRA.LISTALLCOLUMNS('utrq', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrq', 'NO_BRACKETS', '1') ||
   ' FROM uautrq' ||
   ' WHERE rq = '''||A_RQ||'''';

   INSERT INTO UTRQAU
      (RQ, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        RQ, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTRQAU
   WHERE RQ = A_RQ;

   INSERT INTO UTRQHS
      (RQ, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  RQ, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UAUTRQHS
   WHERE RQ = A_RQ;

   INSERT INTO UTRQHSDETAILS
      (RQ, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        RQ, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTRQHSDETAILS
   WHERE RQ = A_RQ;

   INSERT INTO UTRQPP
      (RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, SEQ, DELAY,
      DELAY_UNIT, FREQ_TP, FREQ_VAL, FREQ_UNIT, INVERT_FREQ, LAST_SCHED,
      LAST_SCHED_TZ, LAST_CNT, LAST_VAL, INHERIT_AU)
   SELECT  RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, SEQ, DELAY,
      DELAY_UNIT, FREQ_TP, FREQ_VAL, FREQ_UNIT, INVERT_FREQ, LAST_SCHED,
      LAST_SCHED_TZ, LAST_CNT, LAST_VAL, INHERIT_AU
   FROM UAUTRQPP
   WHERE RQ = A_RQ;

   INSERT INTO UTRQPPAU
      (RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, AU,
      AU_VERSION, AUSEQ, VALUE)
   SELECT  RQ, PP, PP_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5, AU,
      AU_VERSION, AUSEQ, VALUE
   FROM UAUTRQPPAU
   WHERE RQ = A_RQ;

   EXECUTE IMMEDIATE
   'INSERT INTO utrqic' ||
   UNAPIRA.LISTALLCOLUMNS('utrqic', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrqic', 'NO_BRACKETS', '1') ||
   ' FROM uautrqic' ||
   ' WHERE rq = '''||A_RQ||'''';

   INSERT INTO UTRQICAU
      (RQ, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        RQ, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTRQICAU
   WHERE RQ = A_RQ;

   INSERT INTO UTRQICHS
      (RQ, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  RQ, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTRQICHS
   WHERE RQ = A_RQ;

   INSERT INTO UTRQICHSDETAILS
      (RQ, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        RQ, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTRQICHSDETAILS
   WHERE RQ = A_RQ;

   EXECUTE IMMEDIATE
   'INSERT INTO utrqii' ||
   UNAPIRA.LISTALLCOLUMNS('utrqii', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrqii', 'NO_BRACKETS', '1') ||
   ' FROM uautrqii' ||
   ' WHERE rq = '''||A_RQ||'''';

   
   FOR L_RQII IN L_ALL_LTRQII(A_RQ) LOOP
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE ;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE ;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_RQII.IIVALUE ;
      END;
   END LOOP;
   
   INSERT INTO UTRQSC
      (RQ, SC, SEQ, ASSIGN_DATE, ASSIGN_DATE_TZ, ASSIGNED_BY)
   SELECT        RQ, SC, SEQ, ASSIGN_DATE, ASSIGN_DATE_TZ, ASSIGNED_BY
   FROM UAUTRQSC
   WHERE RQ = A_RQ;

   
   FOR L_SAMPLES_REC IN L_RQ_SAMPLES_CURSOR(A_RQ) LOOP
      L_RET_CODE := UNAPIRASC.REMOVESCFROMDB(L_SAMPLES_REC.SC);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'RemoveScFromDB returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
      L_RET_CODE := UNAPIRASC.COPYSCFROMARCHDB(L_SAMPLES_REC.SC,A_IGNORE_DUP_VAL_ON_INDEX);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyScFromArchDB returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
   END LOOP;

   L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
   
   FOR L_TABLE_REC IN L_ALLRQGK_TABLES_CURSOR LOOP
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLRQCUSTOM_TABLES_CURSOR LOOP
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('CopyRqFromArchDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);

   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVERQFROMDB(A_RQ);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYRQFROMARCHDB;

FUNCTION RESTORERQFROMDB
(A_RQ IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYRQFROMARCHDB(A_RQ, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYRQFROMARCHDB(A_RQ, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyRqFromArchDB#return='||TO_CHAR(L_RET_CODE)||' for rq='||A_RQ;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreRqFromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTORERQFROMDB;

FUNCTION REMOVERQFROMDB
(A_RQ IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   
   FOR L_RQII IN L_ALL_LTRQII(A_RQ) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_RQII.IIVALUE;
   END LOOP;

   

   DELETE FROM UTRQ
   WHERE RQ = A_RQ;

   DELETE FROM UTRQAU
   WHERE RQ = A_RQ;

   DELETE FROM UTRQHS
   WHERE RQ = A_RQ;

   DELETE FROM UTRQHSDETAILS
   WHERE RQ = A_RQ;

   DELETE FROM UTRQPP
   WHERE RQ = A_RQ;

   DELETE FROM UTRQPPAU
   WHERE RQ = A_RQ;

   DELETE FROM UTRQIC
   WHERE RQ = A_RQ;

   DELETE FROM UTRQICAU
   WHERE RQ = A_RQ;

   DELETE FROM UTRQICHS
   WHERE RQ = A_RQ;

   DELETE FROM UTRQICHSDETAILS
   WHERE RQ = A_RQ;

   DELETE FROM UTRQII
   WHERE RQ = A_RQ;

   
   
   
   
   
   
   
   
   IF TO_NUMBER(UNAPIRA.P_ARCHIVE_ARCHIVER_VERSION,'999D9','NLS_NUMERIC_CHARACTERS=''.,''') < 2.0 THEN
      DELETE FROM UTJOURNALRQ
      WHERE RQ = A_RQ;

      DELETE FROM UTJOURNALDETAILS
      WHERE RQ = A_RQ;
   END IF;

   
   FOR L_SAMPLES_REC IN L_RQSC_ONLY_USED_BY_RQ_CURSOR(A_RQ) LOOP
      L_RET_CODE := UNAPIRASC.REMOVESCFROMDB(L_SAMPLES_REC.SC);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'RemoveScFromDB returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
   END LOOP;

   
   DELETE FROM UTRQSC
   WHERE RQ=A_RQ;

   L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
   
   FOR L_TABLE_REC IN L_ALLRQGK_TABLES_CURSOR LOOP
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   FOR L_TABLE_REC IN L_ALLRQCUSTOM_TABLES_CURSOR LOOP
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE rq=:a_rq';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_rq', A_RQ);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
         ELSE
            L_SQLERRM := 'Table '||L_TABLE_REC.TABLE_NAME||' does not exist';
            LOGERROR ('RemoveRqFromDB',L_SQLERRM);
         END IF;
      END;
   END LOOP;
   DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);

   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVERQFROMDB;

FUNCTION ARCHIVERQTOFILE
(A_RQ            IN VARCHAR2)
RETURN NUMBER IS

CURSOR L_UTRQ_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UDRQ WHERE RQ=A_RQ;

CURSOR L_UTRQAU_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQAU WHERE RQ=A_RQ;

CURSOR L_UTRQHS_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQHS WHERE RQ=A_RQ;

CURSOR L_UTRQHSDETAILS_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQHSDETAILS WHERE RQ=A_RQ;

CURSOR L_UTRQPP_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQPP WHERE RQ=A_RQ;

CURSOR L_UTRQPPAU_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQPPAU WHERE RQ=A_RQ;

CURSOR L_UTRQIC_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UDRQIC WHERE RQ=A_RQ;

CURSOR L_UTRQICAU_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQICAU WHERE RQ=A_RQ;

CURSOR L_UTRQICHS_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQICHS WHERE RQ=A_RQ;

CURSOR L_UTRQICHSDETAILS_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQICHSDETAILS WHERE RQ=A_RQ;

CURSOR L_UTRQII_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UDRQII WHERE RQ=A_RQ;

CURSOR L_UTRQSC_CURSOR (A_RQ IN VARCHAR2) IS
   SELECT * FROM UTRQSC WHERE RQ=A_RQ;
BEGIN
   
   UNAPIRA.L_EXCEPTION_STEP :='utlongtext' ||'rq='||A_RQ;
   FOR L_RQIIREC IN L_ALL_LTRQII(A_RQ) LOOP
      FOR L_REC IN L_UTLONGTEXT (L_RQIIREC.IIVALUE) LOOP
         UNAPIRA.L_EXCEPTION_STEP :='utlongtext' ||'rqii='||L_RQIIREC.II;
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;

   L_SQLERRM:=NULL;
   UNAPIRA.L_EXCEPTION_STEP :='utrq' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQ_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrq' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.RT || L_SEP || L_REC.RT_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.DESCR_DOC || L_SEP ||
      L_REC.DESCR_DOC_VERSION || L_SEP ||
      TO_CHAR(L_REC.SAMPLING_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.SAMPLING_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.CREATED_BY || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DUE_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DUE_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.PRIORITY || L_SEP || L_REC.LABEL_FORMAT || L_SEP ||
      TO_CHAR(L_REC.DATE1,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE1_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE4,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE4_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE5,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE5_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ALLOW_ANY_ST || L_SEP || L_REC.ALLOW_NEW_SC || L_SEP ||
      L_REC.RESPONSIBLE || L_SEP || L_REC.SC_COUNTER || L_SEP ||
      L_REC.RQ_COUNTER || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.RQ_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS || L_SEP || L_REC.AR1 || L_SEP || L_REC.AR2 || L_SEP ||
      L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP || L_REC.AR5 || L_SEP ||
      L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP || L_REC.AR8 || L_SEP ||
      L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP || L_REC.AR11 || L_SEP ||
      L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP || L_REC.AR14 || L_SEP ||
      L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP || L_REC.AR17 || L_SEP ||
      L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP || L_REC.AR20 || L_SEP ||
      L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP || L_REC.AR23 || L_SEP ||
      L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP || L_REC.AR26 || L_SEP ||
      L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP || L_REC.AR29 || L_SEP ||
      L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP || L_REC.AR32 || L_SEP ||
      L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP || L_REC.AR35 || L_SEP ||
      L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP || L_REC.AR38 || L_SEP ||
      L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP || L_REC.AR41 || L_SEP ||
      L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP || L_REC.AR44 || L_SEP ||
      L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP || L_REC.AR47 || L_SEP ||
      L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP || L_REC.AR50 || L_SEP ||
      L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP || L_REC.AR53 || L_SEP ||
      L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP || L_REC.AR56 || L_SEP ||
      L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP || L_REC.AR59 || L_SEP ||
      L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP || L_REC.AR62 || L_SEP ||
      L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP || L_REC.AR65 || L_SEP ||
      L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP || L_REC.AR68 || L_SEP ||
      L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP || L_REC.AR71 || L_SEP ||
      L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP || L_REC.AR74 || L_SEP ||
      L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP || L_REC.AR77 || L_SEP ||
      L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP || L_REC.AR80 || L_SEP ||
      L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP || L_REC.AR83 || L_SEP ||
      L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP || L_REC.AR86 || L_SEP ||
      L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP || L_REC.AR89 || L_SEP ||
      L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP || L_REC.AR92 || L_SEP ||
      L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP || L_REC.AR95 || L_SEP ||
      L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP || L_REC.AR98 || L_SEP ||
      L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP || L_REC.AR101 || L_SEP ||
      L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP || L_REC.AR104 || L_SEP ||
      L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP || L_REC.AR107 || L_SEP ||
      L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP || L_REC.AR110 || L_SEP ||
      L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP || L_REC.AR113 || L_SEP ||
      L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP || L_REC.AR116 || L_SEP ||
      L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP || L_REC.AR119 || L_SEP ||
      L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP || L_REC.AR122 || L_SEP ||
      L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP || L_REC.AR125 || L_SEP ||
      L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP || L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqau' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQAU_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqau' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqhs' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQHS_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqhs' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqhsdetails' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQHSDETAILS_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqhsdetails' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqpp' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQPP_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqpp' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.PP || L_SEP || L_REC.PP_VERSION || L_SEP ||
      L_REC.PP_KEY1 || L_SEP || L_REC.PP_KEY2 || L_SEP ||
      L_REC.PP_KEY3 || L_SEP || L_REC.PP_KEY4 || L_SEP ||
      L_REC.PP_KEY5 || L_SEP || L_REC.SEQ || L_SEP || L_REC.DELAY || L_SEP ||
      L_REC.DELAY_UNIT || L_SEP || L_REC.FREQ_TP || L_SEP ||
      L_REC.FREQ_VAL || L_SEP || L_REC.FREQ_UNIT || L_SEP ||
      L_REC.INVERT_FREQ || L_SEP ||
      TO_CHAR(L_REC.LAST_SCHED,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LAST_SCHED_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.LAST_CNT || L_SEP || L_REC.LAST_VAL || L_SEP ||
      L_REC.INHERIT_AU;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqppau' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQPPAU_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqppau' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.PP || L_SEP || L_REC.PP_VERSION || L_SEP ||
      L_REC.PP_KEY1 || L_SEP || L_REC.PP_KEY2 || L_SEP ||
      L_REC.PP_KEY3 || L_SEP || L_REC.PP_KEY4 || L_SEP ||
      L_REC.PP_KEY5 || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqic' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQIC_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqic' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.IP_VERSION || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.WINSIZE_X || L_SEP || L_REC.WINSIZE_Y || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.HIDDEN || L_SEP ||
      L_REC.MANUALLY_ADDED || L_SEP || L_REC.NEXT_II || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.IC_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqicau' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQICAU_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqicau' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP ||
      L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqichs' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQICHS_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqichs' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqichsdetails' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQICHSDETAILS_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqichsdetails' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrqii' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQII_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqii' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.II || L_SEP || L_REC.IINODE || L_SEP || L_REC.IE_VERSION || L_SEP ||
      L_REC.IIVALUE || L_SEP || L_REC.POS_X || L_SEP || L_REC.POS_Y || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.MANDATORY || L_SEP ||
      L_REC.HIDDEN || L_SEP || L_REC.DSP_TITLE || L_SEP ||
      L_REC.DSP_LEN || L_SEP || L_REC.DSP_TP || L_SEP ||
      L_REC.DSP_ROWS || L_SEP || L_REC.II_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   
   UNAPIRA.L_EXCEPTION_STEP :='utrqsc' ||'rq='||A_RQ;
   FOR L_REC IN L_UTRQSC_CURSOR(A_RQ) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrqsc' || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.SC || L_SEP || L_REC.SEQ || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   
   FOR L_SAMPLES_REC IN L_RQ_SAMPLES_CURSOR(A_RQ) LOOP
      L_RET_CODE := UNAPIRASC.ARCHIVESCTOFILE(L_SAMPLES_REC.SC);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'ArchiveScToFile returned '||TO_CHAR(L_RET_CODE)||'for rq='||A_RQ||'#sc='||L_SAMPLES_REC.SC;
         RAISE STPERROR;
      END IF;
   END LOOP;

   
   
   UNAPIRA.L_EXCEPTION_STEP :='ArchiveRqGkToFile#rq='||A_RQ;
   L_RET_CODE := UNAPIRA3.ARCHIVERQGKTOFILE(A_RQ);
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'ArchiveRqGkToFile return='||L_RET_CODE||'for rq '||A_RQ;
      RAISE STPERROR;
   END IF;

   
   
   UNAPIRA.L_EXCEPTION_STEP :='ArchiveRqCustomToFile#rq='||A_RQ;
   L_RET_CODE := UNAPIRA3.ARCHIVERQCUSTOMTOFILE(A_RQ);
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'ArchiveRqCustomToFile return='||L_RET_CODE||'for rq '||A_RQ;
      RAISE STPERROR;
   END IF;

   UNAPIRA3.U4DATAPUTLINE( ' ');

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveRqToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVERQTOFILE;

BEGIN
   L_SEP:=UNAPIRA.P_INTERNAL_SEP;
END UNAPIRARQ;