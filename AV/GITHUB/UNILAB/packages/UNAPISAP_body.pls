PACKAGE BODY unapisap AS

L_SQLERRM         VARCHAR2(255);
L_SQL_STRING      VARCHAR2(2000);
L_WHERE_CLAUSE    VARCHAR2(1000);
L_EVENT_TP        UTEV.EV_TP%TYPE;
L_RET_CODE        NUMBER;
L_RESULT          NUMBER;
L_FETCHED_ROWS    NUMBER;
L_EV_SEQ_NR       NUMBER;
L_EV_DETAILS      VARCHAR2(255);

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
      RETURN (NULL);
END GETVERSION;


FUNCTION GETUNITFORCODE
(A_SAP_UNIT_CODE      IN    VARCHAR2,                      
 A_UL_UOM             OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_uom FROM DD'||UNAPIGEN.P_DD||'.uvsapunit WHERE sap_unit_code = :a_sap_unit_code'
   INTO A_UL_UOM USING A_SAP_UNIT_CODE;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_UOM := A_SAP_UNIT_CODE;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_UOM := A_SAP_UNIT_CODE;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           'GetUnitForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETUNITFORCODE;

FUNCTION GETCODEFORUNIT
(A_UL_UOM             IN    VARCHAR2,                      
 A_SAP_UNIT_CODE      OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_unit_code FROM DD'||UNAPIGEN.P_DD||'.uvsapunit WHERE ul_uom = :a_ul_uom AND rownum=1'
   INTO A_SAP_UNIT_CODE USING A_UL_UOM;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_UNIT_CODE := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_UNIT_CODE := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetCodeForUnit', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFORUNIT;

FUNCTION GETPLANTFORCODE
(A_SAP_PLANT_CODE     IN    VARCHAR2,                      
 A_UL_PLANTNAME       OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_plantname FROM DD'||UNAPIGEN.P_DD||'.uvsapplant WHERE sap_plant_code = :a_sap_plant_code'
   INTO A_UL_PLANTNAME USING A_SAP_PLANT_CODE;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_PLANTNAME := A_SAP_PLANT_CODE;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_PLANTNAME := A_SAP_PLANT_CODE;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetPlantForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETPLANTFORCODE;

FUNCTION GETCODEFORPLANT
(A_UL_PLANTNAME       IN    VARCHAR2,                      
 A_SAP_PLANT_CODE     OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_plant_code FROM DD'||UNAPIGEN.P_DD||'.uvsapplant WHERE ul_plantname = :a_ul_plantname AND rownum=1'
   INTO A_SAP_PLANT_CODE USING A_UL_PLANTNAME;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_PLANT_CODE := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_PLANT_CODE := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetCodeForPlant', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFORPLANT;

FUNCTION GETMETHODFORCODE
(A_SAP_METHOD_CODE    IN    VARCHAR2,                      
 A_UL_METHOD          OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_method FROM DD'||UNAPIGEN.P_DD||'.uvsapmethod WHERE sap_method_code = :a_sap_method_code'
   INTO A_UL_METHOD USING A_SAP_METHOD_CODE;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_METHOD := A_SAP_METHOD_CODE;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_METHOD := A_SAP_METHOD_CODE;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetMethodForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETMETHODFORCODE;

FUNCTION GETCODEFORMETHOD
(A_UL_METHOD          IN    VARCHAR2,                      
 A_SAP_METHOD_CODE    OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_method_code FROM DD'||UNAPIGEN.P_DD||'.uvsapmethod WHERE ul_method = :a_ul_method AND rownum=1'
   INTO A_SAP_METHOD_CODE USING A_UL_METHOD;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_METHOD_CODE := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_METHOD_CODE := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetCodeForMethod', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFORMETHOD;

FUNCTION GETLOCATIONFORCODE
(A_SAP_LOCATION_CODE  IN    VARCHAR2,                      
 A_UL_LOCATION        OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_location FROM DD'||UNAPIGEN.P_DD||'.uvsaplocation WHERE sap_location_code = :a_sap_location_code'
   INTO A_UL_LOCATION USING A_SAP_LOCATION_CODE;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_LOCATION := A_SAP_LOCATION_CODE;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_LOCATION := A_SAP_LOCATION_CODE;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetLocationForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETLOCATIONFORCODE;

FUNCTION GETCODEFORLOCATION
(A_UL_LOCATION        IN    VARCHAR2,                      
 A_SAP_LOCATION_CODE  OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_location_code FROM DD'||UNAPIGEN.P_DD||'.uvsaplocation WHERE ul_location = :a_ul_location AND rownum=1'
   INTO A_SAP_LOCATION_CODE USING A_UL_LOCATION;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_LOCATION_CODE := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_LOCATION_CODE := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           'GetCodeForLocation', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFORLOCATION;

FUNCTION GETOPERATIONFORCODE
(A_SAP_OPERATION_NR   IN    VARCHAR2,                      
 A_UL_OPERATION       OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_operation FROM DD'||UNAPIGEN.P_DD||'.uvsapoperation WHERE sap_operation_nr = :a_sap_operation_nr'
   INTO A_UL_OPERATION USING A_SAP_OPERATION_NR;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_OPERATION := A_SAP_OPERATION_NR;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_OPERATION := A_SAP_OPERATION_NR;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetOperationForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETOPERATIONFORCODE;

FUNCTION GETCODEFOROPERATION
(A_UL_OPERATION       IN    VARCHAR2,                      
 A_SAP_OPERATION_NR   OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_operation_nr FROM DD'||UNAPIGEN.P_DD||'.uvsapoperation WHERE ul_operation = :a_ul_operation AND rownum=1'
   INTO A_SAP_OPERATION_NR USING A_UL_OPERATION;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_OPERATION_NR := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_OPERATION_NR := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetCodeForOperation', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFOROPERATION;

FUNCTION GETDESCRIPTIONFORCODEGROUP
(A_SAP_CODE_GROUP     IN    VARCHAR2,                      
 A_UL_DESCRIPTION     OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_description FROM DD'||UNAPIGEN.P_DD||'.uvsapcodegroup WHERE sap_code_group = :a_sap_code_group AND rownum=1'
   INTO A_UL_DESCRIPTION USING A_SAP_CODE_GROUP;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_DESCRIPTION := A_SAP_CODE_GROUP;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_DESCRIPTION := A_SAP_CODE_GROUP;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetDescriptionForCodeGroup', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETDESCRIPTIONFORCODEGROUP;

FUNCTION GETCODEGROUPFORDESCRIPTION
(A_UL_DESCRIPTION     IN    VARCHAR2,                      
 A_SAP_CODE_GROUP     OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_code_group FROM DD'||UNAPIGEN.P_DD||'.uvsapcodegroup WHERE ul_description = :a_ul_description  AND rownum=1'
   INTO A_SAP_CODE_GROUP USING A_UL_DESCRIPTION;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_CODE_GROUP := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_CODE_GROUP := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
           'GetCodeGroupForDescription', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEGROUPFORDESCRIPTION;

FUNCTION GETDESCRIPTIONFORCODE 
(A_SAP_CODE_GROUP     IN    VARCHAR2,                      
 A_SAP_CODE           IN    VARCHAR2,                      
 A_UL_DESCRIPTION     OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT ul_description FROM DD'||UNAPIGEN.P_DD||'.uvsapcode WHERE sap_code_group = :a_sap_code_group'||
                     ' AND sap_code = :a_sap_code'
   INTO A_UL_DESCRIPTION USING A_SAP_CODE_GROUP, A_SAP_CODE;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_UL_DESCRIPTION := A_SAP_CODE;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_UL_DESCRIPTION := A_SAP_CODE;
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           'GetDescriptionForCode', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETDESCRIPTIONFORCODE;

FUNCTION GETCODEFORDESCRIPTION
(A_UL_DESCRIPTION     IN    VARCHAR2,                      
 A_SAP_CODE           OUT   VARCHAR2,                      
 A_SAP_CODE_GROUP     OUT   VARCHAR2)                      
RETURN NUMBER IS
BEGIN
   EXECUTE IMMEDIATE 'SELECT sap_code, sap_code_group FROM DD'||UNAPIGEN.P_DD||'.uvsapcode WHERE ul_description = :a_ul_description AND rownum=1'
   INTO A_SAP_CODE, A_SAP_CODE_GROUP USING A_UL_DESCRIPTION;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
   A_SAP_CODE := NULL;  
   A_SAP_CODE_GROUP  := NULL;  
   RETURN(UNAPIGEN.DBERR_NORECORDS);
WHEN OTHERS THEN
   A_SAP_CODE := NULL;  
   A_SAP_CODE_GROUP  := NULL;  
   L_SQLERRM := SQLERRM;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           'GetCodeForDescription', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETCODEFORDESCRIPTION;

END UNAPISAP;