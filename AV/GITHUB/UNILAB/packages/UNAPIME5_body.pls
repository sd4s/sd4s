PACKAGE BODY unapime5 AS

TYPE BOOLEAN_TABLE_TYPE IS TABLE OF BOOLEAN INDEX BY BINARY_INTEGER;
L_SQLERRM         VARCHAR2(255);
L_EVENT_TP        UTEV.EV_TP%TYPE;
L_RET_CODE        NUMBER;
L_RESULT          NUMBER;
L_FETCHED_ROWS    NUMBER;
L_EV_SEQ_NR       NUMBER;
L_EV_DETAILS      VARCHAR2(255);
STPERROR          EXCEPTION;

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
      RETURN (NULL);
END GETVERSION;





PROCEDURE TRACEERROR               
(A_API_NAME     IN        VARCHAR2,    
 A_ERROR_MSG    IN        VARCHAR2)    
IS
PRAGMA AUTONOMOUS_TRANSACTION;

BEGIN
   
   
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, SUBSTR(UNAPIGEN.P_APPLIC_NAME,1,8), NVL(UNAPIGEN.P_USER,USER), CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           SUBSTR(A_API_NAME,1,40), SUBSTR(A_ERROR_MSG,1,255));
   COMMIT;  
END TRACEERROR;

FUNCTION HANDLESCMECELLOUTPUT                        
(A_SC             IN     VARCHAR2,                   
 A_PG             IN     VARCHAR2,                   
 A_PGNODE         IN     NUMBER,                     
 A_PA             IN     VARCHAR2,                   
 A_PANODE         IN     NUMBER,                     
 A_ME             IN     VARCHAR2,                   
 A_MENODE         IN     NUMBER,                     
 A_REANALYSIS     IN     NUMBER)                     
RETURN NUMBER IS

TYPE CELLOUTPUT_TYPE IS RECORD(
   CELL             VARCHAR2(20),
   CELL_TP          CHAR(1),
   INDEX_Y          NUMBER(3),
   SAVE_TP          VARCHAR2(4),
   SAVE_PG          VARCHAR2(20),
   SAVE_PGNODE      NUMBER(9),
   SAVE_PP_VERSION  VARCHAR2(20),
   SAVE_PA          VARCHAR2(20),
   SAVE_PANODE      NUMBER(9),
   SAVE_PR_VERSION  VARCHAR2(20),
   SAVE_ME          VARCHAR2(20),
   SAVE_MENODE      NUMBER(9),
   SAVE_MT_VERSION  VARCHAR2(20),
   SAVE_REANALYSIS  NUMBER(9),
   SAVE_EQ          VARCHAR2(20),
   SAVE_EQ_VERSION  VARCHAR2(20),
   SAVE_ID          VARCHAR2(20),
   SAVE_IDNODE      NUMBER(9),
   CREATE_NEW       CHAR(1));
TYPE CELLOUTPUT_TABLE_TYPE IS TABLE OF CELLOUTPUT_TYPE INDEX BY BINARY_INTEGER;

L_SEQ_NO                          INTEGER;
L_CURRENT_TIMESTAMP                         TIMESTAMP WITH TIME ZONE;

L_SAVE_PG                         VARCHAR2(20);
L_SAVE_PP_VERSION                 VARCHAR2(20);
L_SAVE_PA                         VARCHAR2(20);
L_SAVE_PR_VERSION                 VARCHAR2(20);
L_SAVE_ME                         VARCHAR2(20);
L_SAVE_MT_VERSION                 VARCHAR2(20);
L_SAVE_EQ                         VARCHAR2(20);
L_SAVE_EQ_VERSION                 VARCHAR2(20);
L_SAVE_ID                         VARCHAR2(20);
L_SAVE_ID_VERSION                 VARCHAR2(20);
L_SAVE_OUTPUT                     CELLOUTPUT_TYPE;
L_SAVE_PGNODE                     NUMBER(9);
L_SAVE_PANODE                     NUMBER(9);
L_SAVE_MENODE                     NUMBER(9);
L_SAVE_IDNODE                     NUMBER(9);
L_ROW                             INTEGER;
L_UPDATE_AU                       BOOLEAN;
L_DELETE_AU                       BOOLEAN;
L_INSERT_AU                       BOOLEAN;
L_PG_FOUND                        BOOLEAN;
L_PA_FOUND                        BOOLEAN;
L_ME_FOUND                        BOOLEAN;
L_RD_FOUND                        BOOLEAN;
L_AU_FOUND                        BOOLEAN;
L_DATE_STRING                     VARCHAR2(255);
L_PREVIOUS_SAVE_TP                VARCHAR2(4);
L_OLD_EXEC_START_DATE             TIMESTAMP WITH TIME ZONE;
L_OLD_EXEC_START_DATE_TZ          TIMESTAMP WITH TIME ZONE;
L_OLD_EXEC_END_DATE               TIMESTAMP WITH TIME ZONE;
L_OLD_EXEC_END_DATE_TZ            TIMESTAMP WITH TIME ZONE;
L_HS_DETAILS_SEQ_NR               INTEGER;
L_LOG_HS_DETAILS                  CHAR(1);
L_ME_LAB                          VARCHAR2(20);
L_ME_EQ                           VARCHAR2(20);
L_ME_EQ_VERSION                   VARCHAR2(20);
L_ME_PLANNED_EQ                   VARCHAR2(20);
L_ME_PLANNED_EQ_VERSION           VARCHAR2(20);
L_ME_MT_VERSION                   VARCHAR2(20);
L_PG_LOG_HS                       CHAR(1);
L_PG_LOG_HS_DETAILS               CHAR(1);
L_PA_LOG_HS                       CHAR(1);
L_PA_LOG_HS_DETAILS               CHAR(1);
L_ME_LOG_HS                       CHAR(1);
L_ME_LOG_HS_DETAILS               CHAR(1);
L_HS_SEQ                          INTEGER;
L_WHAT_DESCRIPTION                VARCHAR2(255);


L_RES_NR_VALUES                   INTEGER;
L_RES_VALUE_F                     UNAPIGEN.FLOAT_TABLE_TYPE;
L_RES_VALUE_S                     UNAPIGEN.VC40_TABLE_TYPE;
L_RES_OBJECT_ID                   UNAPIGEN.VC20_TABLE_TYPE;
L_RES_INDEX_Y                     UNAPIGEN.NUM_TABLE_TYPE;
L_RES_OUTPUT                      CELLOUTPUT_TABLE_TYPE;
L_RES_IDX                         INTEGER;
L_RES_PREVIOUS_ID                 VARCHAR2(20);

L_SVSCPG_SC                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PG                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PGNODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCPG_PP_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PP_KEY1                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PP_KEY2                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PP_KEY3                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PP_KEY4                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PP_KEY5                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_DESCRIPTION              UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPG_VALUE_F                  UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCPG_VALUE_S                  UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPG_UNIT                     UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_EXEC_START_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPG_EXEC_END_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPG_EXECUTOR                 UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PLANNED_EXECUTOR         UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_MANUALLY_ENTERED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_ASSIGN_DATE              UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPG_ASSIGNED_BY              UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_MANUALLY_ADDED           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_FORMAT                   UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPG_CONFIRM_ASSIGN           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_ALLOW_ANY_PR             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_NEVER_CREATE_METHODS     UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_DELAY                    UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPG_DELAY_UNIT               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_PG_CLASS                 UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCPG_LOG_HS                   UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_LOG_HS_DETAILS           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPG_LC                       UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCPG_LC_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPG_MODIFY_FLAG              UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPG_ADDNODE_IN_BUFFER        BOOLEAN_TABLE_TYPE;
L_SVSCPG_NR_OF_ROWS               NUMBER;
L_SVSCPG_REANALYSIS               UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPG_OUTPUT                   CELLOUTPUT_TABLE_TYPE;
L_COUNT_PG                        INTEGER;
L_DIRECT_SAVE_LAST_PGNODE         NUMBER(9);
L_DIRECT_SAVE_LAST_PGCONTEXT      VARCHAR2(255);

L_INITSCPG_PP_KEY1                VARCHAR2(20);
L_INITSCPG_PP_KEY2                VARCHAR2(20);
L_INITSCPG_PP_KEY3                VARCHAR2(20);
L_INITSCPG_PP_KEY4                VARCHAR2(20);
L_INITSCPG_PP_KEY5                VARCHAR2(20);
L_INITSCPG_SC                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_PG                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_PP_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_PGNODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCPG_DESCRIPTION            UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPG_VALUE_F                UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCPG_VALUE_S                UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPG_UNIT                   UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_EXEC_START_DATE        UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPG_EXEC_END_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPG_EXECUTOR               UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_PLANNED_EXECUTOR       UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_MANUALLY_ENTERED       UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_ASSIGN_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPG_ASSIGNED_BY            UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_MANUALLY_ADDED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_FORMAT                 UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPG_CONFIRM_ASSIGN         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_ALLOW_ANY_PR           UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_NEVER_CREATE_ME        UNAPIGEN.CHAR1_TABLE_TYPE;   
                                                               
                                                               
                                                               
L_INITSCPG_DELAY                  UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPG_DELAY_UNIT             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_PG_CLASS               UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCPG_LOG_HS                 UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_LOG_HS_DETAILS         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPG_LC                     UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCPG_LC_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPG_MODIFY_FLAG            UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPG_NR_OF_ROWS             NUMBER;
L_INITSCPG_REANALYSIS             UNAPIGEN.NUM_TABLE_TYPE;

L_SVSCPA_SC                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_PG                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_PGNODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCPA_PA                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_PANODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCPA_PR_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_DESCRIPTION              UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPA_VALUE_F                  UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCPA_VALUE_S                  UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPA_UNIT                     UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_EXEC_START_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPA_EXEC_END_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPA_EXECUTOR                 UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_PLANNED_EXECUTOR         UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_MANUALLY_ENTERED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_ASSIGN_DATE              UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPA_ASSIGNED_BY              UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_MANUALLY_ADDED           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_FORMAT                   UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPA_TD_INFO                  UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_TD_INFO_UNIT             UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_CONFIRM_UID              UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_ALLOW_ANY_ME             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_DELAY                    UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_DELAY_UNIT               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_MIN_NR_RESULTS           UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_CALC_METHOD              UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_CALC_CF                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_ALARM_ORDER              UNAPIGEN.VC3_TABLE_TYPE;
L_SVSCPA_VALID_SPECSA             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_SPECSB             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_SPECSC             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_LIMITSA            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_LIMITSB            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_LIMITSC            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_TARGETA            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_TARGETB            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_VALID_TARGETC            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_MT                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_MT_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_MT_NR_MEASUR             UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_LOG_EXCEPTIONS           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_PA_CLASS                 UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCPA_LOG_HS                   UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_LOG_HS_DETAILS           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_LC                       UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCPA_LC_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_REANALYSIS               UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_MODIFY_FLAG              UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_NR_OF_ROWS               NUMBER;
L_SVSCPA_ADDNODE_IN_BUFFER        BOOLEAN_TABLE_TYPE;
L_PREVIOUS_SAVESCPA_PG            VARCHAR2(20);
L_PREVIOUS_SAVESCPA_PGNODE        VARCHAR2(20);
L_SVSCPA_OUTPUT                   CELLOUTPUT_TABLE_TYPE;
L_COUNT_PA                        INTEGER;
L_DIRECT_SAVE_LAST_PANODE         NUMBER(9);
L_DIRECT_SAVE_LAST_PACONTEXT      VARCHAR2(255);

L_SVSCPA_RES_SC                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_RES_PG                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_RES_PGNODE               UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCPA_RES_PA                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_RES_PANODE               UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCPA_RES_VALUE_F              UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCPA_RES_VALUE_S              UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPA_RES_UNIT                 UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_RES_FORMAT               UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCPA_RES_EXEC_END_DATE        UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCPA_RES_EXECUTOR             UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCPA_RES_MANUALLY_ENTERED     UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCPA_RES_REANALYSIS           UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_RES_MODIFY_FLAG          UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCPA_RES_NR_OF_ROWS           NUMBER;

L_INITSCPA_SC                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_PG                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_PGNODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCPA_PA                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_PANODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCPA_PR_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_DESCRIPTION            UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPA_VALUE_F                UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCPA_VALUE_S                UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPA_UNIT                   UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_EXEC_START_DATE        UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPA_EXEC_END_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPA_EXECUTOR               UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_PLANNED_EXECUTOR       UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_MANUALLY_ENTERED       UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_ASSIGN_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCPA_ASSIGNED_BY            UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_MANUALLY_ADDED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_FORMAT                 UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCPA_TD_INFO                UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_TD_INFO_UNIT           UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_CONFIRM_UID            UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_ALLOW_ANY_ME           UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_DELAY                  UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_DELAY_UNIT             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_MIN_NR_RESULTS         UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_CALC_METHOD            UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_CALC_CF                UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_ALARM_ORDER            UNAPIGEN.VC3_TABLE_TYPE;
L_INITSCPA_VALID_SPECSA           UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_SPECSB           UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_SPECSC           UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_LIMITSA          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_LIMITSB          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_LIMITSC          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_TARGETA          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_TARGETB          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_VALID_TARGETC          UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_MT                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_MT_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_MT_NR_MEASUR           UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_LOG_EXCEPTIONS         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_PA_CLASS               UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCPA_LOG_HS                 UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_LOG_HS_DETAILS         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCPA_LC                     UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCPA_LC_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCPA_REANALYSIS             UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_MODIFY_FLAG            UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCPA_NR_OF_ROWS             NUMBER;

L_SVSCME_SC                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PG                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PGNODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_PA                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PANODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_ME                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_MENODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_REANALYSIS               UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_MT_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_MT_NR_MEASUR             NUMBER;
L_SVSCME_DESCRIPTION              UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_VALUE_F                  UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCME_VALUE_S                  UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_UNIT                     UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_EXEC_START_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCME_EXEC_END_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCME_EXECUTOR                 UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_LAB                      UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_EQ                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_EQ_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PLANNED_EXECUTOR         UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PLANNED_EQ               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PLANNED_EQ_VERSION       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_MANUALLY_ENTERED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_ALLOW_ADD                UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_ASSIGN_DATE              UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCME_ASSIGNED_BY              UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_MANUALLY_ADDED           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_DELAY                    UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_DELAY_UNIT               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_FORMAT                   UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_ACCURACY                 UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCME_REAL_COST                UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_REAL_TIME                UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_CALIBRATION              UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_CONFIRM_COMPLETE         UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_AUTORECALC               UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_ME_RESULT_EDITABLE       UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_NEXT_CELL                UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_SOP                      UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_SOP_VERSION              UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_PLAUS_LOW                UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCME_PLAUS_HIGH               UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCME_WINSIZE_X                UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_WINSIZE_Y                UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_ME_CLASS                 UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCME_LOG_HS                   UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_LOG_HS_DETAILS           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_LC                       UNAPIGEN.VC2_TABLE_TYPE;
L_SVSCME_LC_VERSION               UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_MODIFY_FLAG              UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_NR_OF_ROWS               NUMBER;
L_SVSCME_ADDNODE_IN_BUFFER        BOOLEAN_TABLE_TYPE;
L_PREVIOUS_SAVESCME_PG            VARCHAR2(20);
L_PREVIOUS_SAVESCME_PGNODE        VARCHAR2(20);
L_PREVIOUS_SAVESCME_PA            VARCHAR2(20);
L_PREVIOUS_SAVESCME_PANODE        VARCHAR2(20);
L_SVSCME_OUTPUT                   CELLOUTPUT_TABLE_TYPE;
L_COUNT_ME                        INTEGER;
L_DIRECT_SAVE_LAST_MENODE         NUMBER(9);
L_DIRECT_SAVE_LAST_MECONTEXT      VARCHAR2(255);

L_SVSCME_RES_SC                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_PG                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_PGNODE               UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_RES_PA                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_PANODE               UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_RES_ME                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_MENODE               UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCME_RES_VALUE_F              UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCME_RES_VALUE_S              UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_RES_UNIT                 UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_FORMAT               UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_RES_EXEC_START_DATE      UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCME_RES_EXEC_END_DATE        UNAPIGEN.DATE_TABLE_TYPE;
L_SVSCME_RES_EXECUTOR             UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_LAB                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_EQ                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_EQ_VERSION           UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCME_RES_MANUALLY_ENTERED     UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVSCME_RES_REAL_COST            UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_RES_REAL_TIME            UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCME_RES_REANALYSIS           UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_RES_MODIFY_FLAG          UNAPIGEN.NUM_TABLE_TYPE;
L_SVSCME_RES_NR_OF_ROWS           NUMBER;

L_INITSCME_SC                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PG                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PGNODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCME_PA                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PANODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCME_ME                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_MENODE                 UNAPIGEN.LONG_TABLE_TYPE;
L_INITSCME_REANALYSIS             UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCME_MT_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_MT_NR_MEASUR           NUMBER;
L_INITSCME_DESCRIPTION            UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_VALUE_F                UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCME_VALUE_S                UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_UNIT                   UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_EXEC_START_DATE        UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCME_EXEC_END_DATE          UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCME_EXECUTOR               UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_LAB                    UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_EQ                     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_EQ_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PLANNED_EXECUTOR       UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PLANNED_EQ             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PLANNED_EQ_VERSION     UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_MANUALLY_ENTERED       UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_ALLOW_ADD              UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_ASSIGN_DATE            UNAPIGEN.DATE_TABLE_TYPE;
L_INITSCME_ASSIGNED_BY            UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_MANUALLY_ADDED         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_DELAY                  UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCME_DELAY_UNIT             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_FORMAT                 UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_ACCURACY               UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCME_REAL_COST              UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_REAL_TIME              UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_CALIBRATION            UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_CONFIRM_COMPLETE       UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_AUTORECALC             UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_ME_RESULT_EDITABLE     UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_NEXT_CELL              UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_SOP                    UNAPIGEN.VC40_TABLE_TYPE;
L_INITSCME_SOP_VERSION            UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_PLAUS_LOW              UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCME_PLAUS_HIGH             UNAPIGEN.FLOAT_TABLE_TYPE;
L_INITSCME_WINSIZE_X              UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCME_WINSIZE_Y              UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCME_ME_CLASS               UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCME_LOG_HS                 UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_LOG_HS_DETAILS         UNAPIGEN.CHAR1_TABLE_TYPE;
L_INITSCME_LC                     UNAPIGEN.VC2_TABLE_TYPE;
L_INITSCME_LC_VERSION             UNAPIGEN.VC20_TABLE_TYPE;
L_INITSCME_MODIFY_FLAG            UNAPIGEN.NUM_TABLE_TYPE;
L_INITSCME_NR_OF_ROWS             NUMBER;

L_SVME_PROP_SC                    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PG                    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PGNODE                UNAPIGEN.LONG_TABLE_TYPE;
L_SVME_PROP_PA                    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PANODE                UNAPIGEN.LONG_TABLE_TYPE;
L_SVME_PROP_ME                    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_MENODE                UNAPIGEN.LONG_TABLE_TYPE;
L_SVME_PROP_MT_NR_MEASUR          NUMBER;
L_SVME_PROP_MT_VERSION            UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_DESCRIPTION           UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_VALUE_F               UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVME_PROP_VALUE_S               UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_UNIT                  UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_EXEC_START_DATE       UNAPIGEN.DATE_TABLE_TYPE;
L_SVME_PROP_EXEC_END_DATE         UNAPIGEN.DATE_TABLE_TYPE;
L_SVME_PROP_EXECUTOR              UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_LAB                   UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_EQ                    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_EQ_VERSION            UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PLANNED_EXECUTOR      UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PLANNED_EQ            UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PLANNED_EQ_VERSION    UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_MANUALLY_ENTERED      UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_ALLOW_ADD             UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_ASSIGN_DATE           UNAPIGEN.DATE_TABLE_TYPE;
L_SVME_PROP_ASSIGNED_BY           UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_MANUALLY_ADDED        UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_DELAY                 UNAPIGEN.NUM_TABLE_TYPE;
L_SVME_PROP_DELAY_UNIT            UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_FORMAT                UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_ACCURACY              UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVME_PROP_REAL_COST             UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_REAL_TIME             UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_CALIBRATION           UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_CONFIRM_COMPLETE      UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_AUTORECALC            UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_ME_RESULT_EDITABLE    UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_NEXT_CELL             UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_SOP                   UNAPIGEN.VC40_TABLE_TYPE;
L_SVME_PROP_SOP_VERSION           UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_PLAUS_LOW             UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVME_PROP_PLAUS_HIGH            UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVME_PROP_WINSIZE_X             UNAPIGEN.NUM_TABLE_TYPE;
L_SVME_PROP_WINSIZE_Y             UNAPIGEN.NUM_TABLE_TYPE;
L_SVME_PROP_REANALYSIS            UNAPIGEN.NUM_TABLE_TYPE;
L_SVME_PROP_ME_CLASS              UNAPIGEN.VC2_TABLE_TYPE;
L_SVME_PROP_LOG_HS                UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_LOG_HS_DETAILS        UNAPIGEN.CHAR1_TABLE_TYPE;
L_SVME_PROP_LC                    UNAPIGEN.VC2_TABLE_TYPE;
L_SVME_PROP_LC_VERSION            UNAPIGEN.VC20_TABLE_TYPE;
L_SVME_PROP_MODIFY_FLAG           UNAPIGEN.NUM_TABLE_TYPE;
L_SVME_PROP_NR_OF_ROWS            NUMBER;
L_SVME_PROP_ENDDATE_UPDATED       BOOLEAN;

L_SVSCRD_SC                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCRD_PG                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCRD_PGNODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCRD_PA                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCRD_PANODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCRD_ME                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCRD_MENODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCRD_RD                       UNAPIGEN.VC20_TABLE_TYPE;
L_SVSCRD_RDNODE                   UNAPIGEN.LONG_TABLE_TYPE;
L_SVSCRD_VALUE_F                  UNAPIGEN.FLOAT_TABLE_TYPE;
L_SVSCRD_VALUE_S                  UNAPIGEN.VC40_TABLE_TYPE;
L_SVSCRD_MODIFY_FLAG              UNAPIGEN.NUM_TABLE_TYPE;

L_SVEQCT_EQ                       VARCHAR2(20);
L_SVEQCT_LAB                      VARCHAR2(20);
L_SVEQCT_CT_NAME                  VARCHAR2(20);
L_SVEQCT_VALUE_S                  VARCHAR2(40);
L_SVEQCT_VALUE_F                  NUMBER;
L_SVEQCT_FORMAT                   VARCHAR2(20);
L_SVEQCT_UNIT                     VARCHAR2(20);
LOCALEXCEPTION                    EXCEPTION;

L_CELL_VALUE_S                    VARCHAR2(40);
L_CELL_VALUE_F                    NUMBER;
L_CELL_FORMAT                     VARCHAR2(20);
L_CELL_UNIT                       VARCHAR2(20);
L_EQ_VERSION                      VARCHAR2(20);

L_CURRENT_ME_PP_VERSION           VARCHAR2(20);
L_CURRENT_ME_PR_VERSION           VARCHAR2(20);

L_ORIG_AR_CHECK_MODE                 CHAR(1);
L_IGNORED_RET_CODE                   INTEGER;

CURSOR L_OBJECTS_CURSOR(A_OBJECT_TP IN VARCHAR2) IS
   SELECT LOG_HS, LOG_HS_DETAILS
   FROM UTOBJECTS
   WHERE OBJECT=A_OBJECT_TP;
L_DEFAULT_LOG_HS4PG               CHAR(1);
L_DEFAULT_LOG_HS_DETAILS4PG       CHAR(1);
L_DEFAULT_LOG_HS4PA               CHAR(1);
L_DEFAULT_LOG_HS_DETAILS4PA       CHAR(1);
L_DEFAULT_LOG_HS4ME               CHAR(1);
L_DEFAULT_LOG_HS_DETAILS4ME       CHAR(1);









CURSOR L_MECELLOUTPUT_CURSOR IS
   SELECT A.*, B.VALUE_F VALUE_F, B.VALUE_S VALUE_S, B.CELL_TP CELL_TP, B.FORMAT FORMAT, B.UNIT UNIT, B.EQ EQ
   FROM UTSCMECELLOUTPUT A, UTSCMECELL B
   WHERE A.SC = A_SC
     AND A.PG = A_PG
     AND A.PGNODE = A_PGNODE
     AND A.PA = A_PA
     AND A.PANODE = A_PANODE
     AND A.ME = A_ME
     AND A.MENODE = A_MENODE
     AND A.SC = B.SC
     AND A.PG = B.PG
     AND A.PGNODE = B.PGNODE
     AND A.PA = B.PA
     AND A.PANODE = B.PANODE
     AND A.ME = B.ME
     AND A.MENODE = B.MENODE
     AND A.CELL = B.CELL
     ORDER BY
         DECODE(A.SAVE_TP,'pp',1,'ppau',2,'pr',3,'prau',4,'mt',5,
                          'mtau',6,'me',7,'rd',8,'eqau',9,'eqct',10,11),
         DECODE(A.SAVE_TP,'pp','1','ppau','1','eqau','1','eqct','1',
                          UNAPIME2.SQLSUBSTITUTETILDES(A.SC,A.PG,A.PA,A.ME,A.CELL,A.SAVE_PG,'pg')),
         DECODE(A.SAVE_TP,'pp','1','ppau','1','eqau','1','eqct','1','pr','1', 'prau', '1',
                          UNAPIME2.SQLSUBSTITUTETILDES(A.SC,A.PG,A.PA,A.ME,A.CELL,A.SAVE_PA,'pa')),
         DECODE(A.SAVE_TP,'pp','1','ppau','1','eqau','1','eqct','1','pr','1', 'prau','1','mt','1','mtau','1',
                          UNAPIME2.SQLSUBSTITUTETILDES(A.SC,A.PG,A.PA,A.ME,A.CELL,A.SAVE_ME,'me')),
         B.CELLNODE;
L_MECELLOUTPUT_REC      L_MECELLOUTPUT_CURSOR%ROWTYPE;

CURSOR L_MECELLLISTOUTPUT_CURSOR (C_CELL IN VARCHAR2, C_INDEX_Y IN NUMBER) IS
   SELECT *
   FROM UTSCMECELLLISTOUTPUT
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE
   AND ME = A_ME
   AND MENODE = A_MENODE
   AND CELL = C_CELL
   AND INDEX_Y = C_INDEX_Y;
L_MECELLLISTOUTPUT_REC   L_MECELLLISTOUTPUT_CURSOR%ROWTYPE;

CURSOR L_PG_CURSOR IS
   SELECT PG, PGNODE, PP_VERSION
   FROM UTSCPG
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = NVL(L_SAVE_PGNODE, PGNODE)
   ORDER BY ABS(PGNODE - NVL(L_SAVE_PGNODE,0)),PGNODE;
L_PG_REC                  L_PG_CURSOR%ROWTYPE;





CURSOR L_FINDPGNODE_CURSOR IS
   SELECT PGNODE
   FROM UTSCPG
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
   ORDER BY ABS(PGNODE - A_PGNODE), PGNODE;

CURSOR L_PA_CURSOR IS
   SELECT PG, PGNODE, PA, PANODE, UNIT, FORMAT, EXEC_END_DATE, EXECUTOR, MANUALLY_ENTERED, REANALYSIS, PR_VERSION
   FROM UTSCPA
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = L_SAVE_PGNODE
     AND PA = L_SAVE_PA
     AND PANODE =  NVL(L_SAVE_PANODE, PANODE)
   ORDER BY ABS(PANODE - NVL(L_SAVE_PANODE,0)), PANODE;
L_PA_REC                  L_PA_CURSOR%ROWTYPE;






CURSOR L_FINDPANODE_CURSOR IS
   SELECT PANODE
   FROM UTSCPA
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = L_SAVE_PGNODE
     AND PA = L_SAVE_PA
   ORDER BY ABS(PANODE - DECODE(L_SAVE_PG||L_SAVE_PGNODE, A_PG||A_PGNODE, A_PANODE, PANODE)), PANODE;

CURSOR L_ME_CURSOR IS
   SELECT *
   FROM UTSCME
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = L_SAVE_PGNODE
     AND PA = L_SAVE_PA
     AND PANODE = L_SAVE_PANODE
     AND ME = L_SAVE_ME
     AND MENODE = NVL(L_SAVE_MENODE, MENODE)
   ORDER BY ABS(MENODE - NVL(L_SAVE_MENODE,0)), MENODE;
L_ME_REC                  L_ME_CURSOR%ROWTYPE;






CURSOR L_FINDMENODE_CURSOR IS
   SELECT MENODE
   FROM UTSCME
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = L_SAVE_PGNODE
     AND PA = L_SAVE_PA
     AND PANODE = L_SAVE_PANODE
     AND ME = L_SAVE_ME
   ORDER BY 
      ABS(MENODE - DECODE(L_SAVE_PG||L_SAVE_PGNODE||L_SAVE_PA||L_SAVE_PANODE,
                          A_PG||A_PGNODE||A_PA||A_PANODE, A_MENODE,
                          MENODE)),
      MENODE;

CURSOR L_RD_CURSOR IS
   SELECT PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE
   FROM UTSCRD
   WHERE SC = A_SC
     AND PG = L_SAVE_PG
     AND PGNODE = L_SAVE_PGNODE
     AND PA = L_SAVE_PA
     AND PANODE = L_SAVE_PANODE
     AND ME = L_SAVE_ME
     AND MENODE = L_SAVE_MENODE
     AND RD = L_SAVE_ID
   ORDER BY RDNODE;
L_RD_REC                  L_RD_CURSOR%ROWTYPE;

CURSOR L_MECELLLIST_L_CURSOR (A_CELL VARCHAR2) IS
   SELECT VALUE_S, VALUE_F, INDEX_Y
   FROM UTSCMECELLLIST
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE
   AND ME = A_ME
   AND MENODE = A_MENODE
   AND CELL = A_CELL
   AND SELECTED <> '0'
   ORDER BY INDEX_X, INDEX_Y;
L_MECELLLIST_L_REC   L_MECELLLIST_L_CURSOR%ROWTYPE;

CURSOR L_MECELLLIST_T_CURSOR (A_CELL VARCHAR2) IS
   SELECT INDEX_Y,
          MAX(DECODE(INDEX_X, 0, VALUE_S)) OBJECT_ID,
          MAX(DECODE(INDEX_X, 1, VALUE_S)) VALUE_S,
          MAX(DECODE(INDEX_X, 1, VALUE_F)) VALUE_F
   FROM UTSCMECELLLIST
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE
   AND ME = A_ME
   AND MENODE = A_MENODE
   AND CELL = A_CELL
   AND INDEX_X IN (0,1)
   GROUP BY INDEX_Y
   HAVING (MAX(DECODE(INDEX_X, 1, VALUE_S))  IS NOT NULL
           OR MAX(DECODE(INDEX_X, 1, VALUE_F))  IS NOT NULL)
   ORDER BY INDEX_Y;
L_MECELLLIST_T_REC   L_MECELLLIST_T_CURSOR%ROWTYPE;

CURSOR L_AU_CURSOR IS
   SELECT NVL(SINGLE_VALUED, '0') SINGLE_VALUED
   FROM UTAU
   WHERE AU = L_SAVE_ID;
L_AU_REC L_AU_CURSOR%ROWTYPE;

CURSOR L_FIRST_PG_AFTER_CURSOR (A_SC VARCHAR2, A_PGNODE NUMBER) IS
   SELECT PG, PGNODE
   FROM UTSCPG
   WHERE SC = A_SC
   AND PGNODE > A_PGNODE
   ORDER BY PGNODE ASC;
L_FIRST_PG_AFTER_REC L_FIRST_PG_AFTER_CURSOR%ROWTYPE;

CURSOR L_FIRST_PA_AFTER_CURSOR (A_SC VARCHAR2, A_PG VARCHAR2, A_PGNODE NUMBER, A_PANODE NUMBER) IS
   SELECT PA, PANODE
   FROM UTSCPA
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PANODE > A_PANODE
   ORDER BY PANODE ASC;
L_FIRST_PA_AFTER_REC L_FIRST_PA_AFTER_CURSOR%ROWTYPE;

CURSOR L_FIRST_ME_AFTER_CURSOR (A_SC VARCHAR2, A_PG VARCHAR2, A_PGNODE NUMBER, A_PA VARCHAR2, A_PANODE NUMBER, A_MENODE NUMBER) IS
   SELECT ME, MENODE, REANALYSIS
   FROM UTSCME
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE
   AND MENODE > A_MENODE
   ORDER BY MENODE ASC;
L_FIRST_ME_AFTER_REC L_FIRST_ME_AFTER_CURSOR%ROWTYPE;

CURSOR L_SCMEPROPCELL_CURSOR IS
   SELECT A.VALUE_S VALUE_S, A.FORMAT FORMAT, A.CELL CELL, B.SAVE_ID SAVE_ID
   FROM UTSCMECELLOUTPUT B, UTSCMECELL A
   WHERE A.SC = A_SC
   AND A.PG = A_PG
   AND A.PGNODE = A_PGNODE
   AND A.PA = A_PA
   AND A.PANODE = A_PANODE
   AND A.ME = A_ME
   AND A.MENODE = A_MENODE
   AND A.SC = B.SC
   AND A.PG = B.PG
   AND A.PGNODE = B.PGNODE
   AND A.PA = B.PA
   AND A.PANODE = B.PANODE
   AND A.ME = B.ME
   AND A.MENODE = B.MENODE
   AND A.CELL = B.CELL
   AND B.SAVE_TP = 'me';

CURSOR L_SCPGMODIFIEDAU_CURSOR IS
   
   (SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCPGAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND AUSEQ < 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCPGAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND AUSEQ > 0)
   UNION ALL
   
   (SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCPGAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND AUSEQ > 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCPGAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND AUSEQ < 0);

CURSOR L_SCPAMODIFIEDAU_CURSOR IS
   
   (SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCPAAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND AUSEQ < 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCPAAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND AUSEQ > 0)
   UNION ALL
   
   (SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCPAAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND AUSEQ > 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCPAAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND AUSEQ < 0);

CURSOR L_SCMEMODIFIEDAU_CURSOR IS
   
   (SELECT A.AU AU, A.AU_VERSION AU_VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCMEAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND A.ME = L_SAVE_ME
    AND A.MENODE = L_SAVE_MENODE
    AND AUSEQ < 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION AU_VERSION, A.VALUE VALUE, 'DELETE' ACTION
    FROM UTSCMEAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND A.ME = L_SAVE_ME
    AND A.MENODE = L_SAVE_MENODE
    AND AUSEQ > 0)
   UNION ALL
   
   (SELECT A.AU AU, A.AU_VERSION AU_VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCMEAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND A.ME = L_SAVE_ME
    AND A.MENODE = L_SAVE_MENODE
    AND AUSEQ > 0
   MINUS
    SELECT A.AU AU, A.AU_VERSION AU_VERSION, A.VALUE VALUE, 'NEW' ACTION
    FROM UTSCMEAU A
    WHERE A.SC = A_SC
    AND A.PG = L_SAVE_PG
    AND A.PGNODE = L_SAVE_PGNODE
    AND A.PA = L_SAVE_PA
    AND A.PANODE = L_SAVE_PANODE
    AND A.ME = L_SAVE_ME
    AND A.MENODE = L_SAVE_MENODE
    AND AUSEQ < 0);

   
   
   
   L_NODEBUFNROFROWS       INTEGER;
   L_NODEBUF_OBJECT_TP     UNAPIGEN.VC4_TABLE_TYPE;
   L_NODEBUF_PG            UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_PP_VERSION    UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_PGNODE        UNAPIGEN.LONG_TABLE_TYPE;
   L_NODEBUF_PA            UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_PR_VERSION    UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_PANODE        UNAPIGEN.LONG_TABLE_TYPE;
   L_NODEBUF_ME            UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_MT_VERSION    UNAPIGEN.VC20_TABLE_TYPE;
   L_NODEBUF_MENODE        UNAPIGEN.LONG_TABLE_TYPE;
   
   

   PROCEDURE REMOVEALLNODESFROMBUFFER IS
   BEGIN
      L_NODEBUFNROFROWS := 0;  
      L_NODEBUF_OBJECT_TP.DELETE();
      L_NODEBUF_PG.DELETE();
      L_NODEBUF_PP_VERSION.DELETE();
      L_NODEBUF_PGNODE.DELETE();
      L_NODEBUF_PA.DELETE();
      L_NODEBUF_PR_VERSION.DELETE();
      L_NODEBUF_PANODE.DELETE();
      L_NODEBUF_ME.DELETE();
      L_NODEBUF_MT_VERSION.DELETE();
      L_NODEBUF_MENODE.DELETE();      
   END REMOVEALLNODESFROMBUFFER;

   PROCEDURE GETNODE (A_OBJECT_TP IN VARCHAR2,
                      A_PG IN VARCHAR2, A_PP_VERSION IN VARCHAR2, A_PGNODE IN NUMBER,
                      A_PA IN VARCHAR2, A_PR_VERSION IN VARCHAR2, A_PANODE IN NUMBER,
                      A_ME IN VARCHAR2, A_MT_VERSION IN VARCHAR2, A_MENODE IN NUMBER,
                      A_FOUND_NODE OUT NUMBER) IS
   L_X INTEGER;
   BEGIN
      
      
      A_FOUND_NODE := NULL; 
      IF A_OBJECT_TP = 'pg' THEN
         FOR L_X IN 1..L_NODEBUFNROFROWS LOOP
            IF L_NODEBUF_OBJECT_TP(L_X) = A_OBJECT_TP AND
               L_NODEBUF_PG(L_X) = A_PG THEN
               A_FOUND_NODE := L_NODEBUF_PGNODE(L_X);
               EXIT;
            END IF;
         END LOOP;
      ELSIF A_OBJECT_TP = 'pa' THEN
         FOR L_X IN 1..L_NODEBUFNROFROWS LOOP
            IF L_NODEBUF_OBJECT_TP(L_X) = A_OBJECT_TP AND
               L_NODEBUF_PG(L_X) = A_PG AND
               L_NODEBUF_PGNODE(L_X) = A_PGNODE AND
               L_NODEBUF_PA(L_X) = A_PA THEN
               A_FOUND_NODE := L_NODEBUF_PANODE(L_X);
               EXIT;
            END IF;
         END LOOP;
      ELSIF A_OBJECT_TP = 'me' THEN
         FOR L_X IN 1..L_NODEBUFNROFROWS LOOP
            
            
            
            IF L_NODEBUF_OBJECT_TP(L_X) = A_OBJECT_TP AND
               L_NODEBUF_PG(L_X) = A_PG AND
               L_NODEBUF_PGNODE(L_X) = A_PGNODE AND
               L_NODEBUF_ME(L_X) = A_ME THEN
               A_FOUND_NODE := L_NODEBUF_MENODE(L_X);
               EXIT;
            END IF;
         END LOOP;
      END IF;
   END GETNODE;

   PROCEDURE ADDNODE (A_OBJECT_TP IN VARCHAR2, 
                      A_PG IN VARCHAR2, A_PP_VERSION IN VARCHAR2, A_PGNODE IN NUMBER,
                      A_PA IN VARCHAR2, A_PR_VERSION IN VARCHAR2, A_PANODE IN NUMBER,
                      A_ME IN VARCHAR2, A_MT_VERSION IN VARCHAR2, A_MENODE IN NUMBER) IS
   L_FOUND_NODE         NUMBER(9);
   L_OBJECT_ID          VARCHAR2(20);
   L_OBJECT_VERSION     VARCHAR2(20);
   L_OBJECT_NODE        NUMBER(9);   
   BEGIN
      IF A_OBJECT_TP = 'pg' THEN
         L_OBJECT_ID := A_PG;
         L_OBJECT_VERSION := A_PP_VERSION;
         L_OBJECT_NODE := A_PGNODE;
      ELSIF A_OBJECT_TP = 'pa' THEN
         L_OBJECT_ID := A_PA;
         L_OBJECT_VERSION := A_PR_VERSION;
         L_OBJECT_NODE := A_PANODE;
      ELSIF A_OBJECT_TP = 'me' THEN
         L_OBJECT_ID := A_ME;
         L_OBJECT_VERSION := A_MT_VERSION;
         L_OBJECT_NODE := A_MENODE;
      END IF;         

         
      
      IF L_OBJECT_NODE IS NOT NULL THEN

         
         GETNODE (A_OBJECT_TP, A_PG, A_PP_VERSION, A_PGNODE, A_PA, A_PR_VERSION, A_PANODE, A_ME, A_MT_VERSION, A_MENODE, L_FOUND_NODE);
         IF L_FOUND_NODE IS NULL THEN
            L_NODEBUFNROFROWS := NVL(L_NODEBUFNROFROWS,0) + 1;
            L_NODEBUF_OBJECT_TP   (L_NODEBUFNROFROWS) := A_OBJECT_TP;
            L_NODEBUF_PG          (L_NODEBUFNROFROWS) := A_PG;
            L_NODEBUF_PP_VERSION  (L_NODEBUFNROFROWS) := A_PP_VERSION;
            L_NODEBUF_PGNODE      (L_NODEBUFNROFROWS) := A_PGNODE;               
            L_NODEBUF_PA          (L_NODEBUFNROFROWS) := A_PA;
            L_NODEBUF_PR_VERSION  (L_NODEBUFNROFROWS) := A_PR_VERSION;
            L_NODEBUF_PANODE      (L_NODEBUFNROFROWS) := A_PANODE;               
            L_NODEBUF_ME          (L_NODEBUFNROFROWS) := A_ME;
            L_NODEBUF_MT_VERSION  (L_NODEBUFNROFROWS) := A_MT_VERSION;
            L_NODEBUF_MENODE      (L_NODEBUFNROFROWS) := A_MENODE;
         ELSIF L_FOUND_NODE<>L_OBJECT_NODE THEN
            L_SQLERRM := 'Double nodes attempt for the same object object_tp : '|| A_OBJECT_TP || 
                         ' object_id : ' || L_OBJECT_ID ||' '||
                         ' object_version : ' || L_OBJECT_VERSION ||' '||
                         TO_CHAR(L_OBJECT_NODE) || ' & ' || TO_CHAR(L_FOUND_NODE);
            UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_GENFAIL;
            RAISE STPERROR;
         END IF;
      END IF;
   END ADDNODE;

   PROCEDURE UPDATESAVEOUTPUT(A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS
   BEGIN   
      IF A_RES_OUTPUT.CELL_TP IN ('L', 'T') THEN
         INSERT INTO UTSCMECELLLISTOUTPUT
         (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS,
          CELL, INDEX_Y,
          SAVE_TP,  
          SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION,
          SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
          SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, 
          SAVE_EQ, SAVE_EQ_VERSION,
          SAVE_ID, SAVE_IDNODE,
          SAVE_REANALYSIS,
          CREATE_NEW)
         VALUES
         (A_SC, A_PG, A_PGNODE, A_PA, A_PANODE, A_ME, A_MENODE, A_REANALYSIS,
          A_RES_OUTPUT.CELL, A_RES_OUTPUT.INDEX_Y,
          A_RES_OUTPUT.SAVE_TP,
          A_RES_OUTPUT.SAVE_PG, A_RES_OUTPUT.SAVE_PGNODE, A_RES_OUTPUT.SAVE_PP_VERSION,
          A_RES_OUTPUT.SAVE_PA, A_RES_OUTPUT.SAVE_PANODE, A_RES_OUTPUT.SAVE_PR_VERSION,
          A_RES_OUTPUT.SAVE_ME, A_RES_OUTPUT.SAVE_MENODE, A_RES_OUTPUT.SAVE_MT_VERSION,
          A_RES_OUTPUT.SAVE_EQ, A_RES_OUTPUT.SAVE_EQ_VERSION,
          A_RES_OUTPUT.SAVE_ID, A_RES_OUTPUT.SAVE_IDNODE,
          A_RES_OUTPUT.SAVE_REANALYSIS,
          A_RES_OUTPUT.CREATE_NEW);
       ELSE
          UPDATE UTSCMECELLOUTPUT
          SET SAVE_PG = A_RES_OUTPUT.SAVE_PG,
              SAVE_PGNODE = A_RES_OUTPUT.SAVE_PGNODE,
              SAVE_PP_VERSION = A_RES_OUTPUT.SAVE_PP_VERSION,
              SAVE_PA = A_RES_OUTPUT.SAVE_PA,
              SAVE_PANODE = A_RES_OUTPUT.SAVE_PANODE,
              SAVE_PR_VERSION = A_RES_OUTPUT.SAVE_PR_VERSION,
              SAVE_ME = A_RES_OUTPUT.SAVE_ME,
              SAVE_MENODE = A_RES_OUTPUT.SAVE_MENODE,
              SAVE_MT_VERSION = A_RES_OUTPUT.SAVE_MT_VERSION,
              SAVE_EQ = A_RES_OUTPUT.SAVE_EQ,
              SAVE_EQ_VERSION = A_RES_OUTPUT.SAVE_EQ_VERSION,
              SAVE_ID = A_RES_OUTPUT.SAVE_ID,
              SAVE_IDNODE = A_RES_OUTPUT.SAVE_IDNODE,
              SAVE_REANALYSIS = A_RES_OUTPUT.SAVE_REANALYSIS
          WHERE SC = A_SC
          AND PG = A_PG
          AND PGNODE = A_PGNODE
          AND PA = A_PA
          AND PANODE = A_PANODE
          AND ME = A_ME
          AND MENODE = A_MENODE
          AND CELL = A_RES_OUTPUT.CELL;                       
          
       END IF;
   END UPDATESAVEOUTPUT;
   
   
   
   PROCEDURE ADDFIRSTPGAFTER IS
   BEGIN

      
      

      OPEN L_FIRST_PG_AFTER_CURSOR(A_SC, A_PGNODE);
      FETCH L_FIRST_PG_AFTER_CURSOR
      INTO L_FIRST_PG_AFTER_REC;
      IF L_FIRST_PG_AFTER_CURSOR%FOUND THEN
         L_SVSCPG_NR_OF_ROWS := L_SVSCPG_NR_OF_ROWS + 1;
         L_SVSCPG_SC(L_SVSCPG_NR_OF_ROWS) := A_SC;
         L_SVSCPG_PG(L_SVSCPG_NR_OF_ROWS) :=  L_FIRST_PG_AFTER_REC.PG ;
         L_SVSCPG_PGNODE(L_SVSCPG_NR_OF_ROWS) :=  L_FIRST_PG_AFTER_REC.PGNODE ;         
         L_SVSCPG_MODIFY_FLAG(L_SVSCPG_NR_OF_ROWS) := UNAPIGEN.DBERR_SUCCESS;
         L_SVSCPG_ADDNODE_IN_BUFFER(L_SVSCPG_NR_OF_ROWS) := FALSE;
      END IF;
      CLOSE L_FIRST_PG_AFTER_CURSOR;
      
   END ADDFIRSTPGAFTER;

   PROCEDURE SAVESCPARAMETERGROUPS IS

      L_PGNODE_FOUND BOOLEAN;

   BEGIN
      ADDFIRSTPGAFTER;

      L_RET_CODE := UNAPIPG.SAVESCPARAMETERGROUP(L_SVSCPG_SC, L_SVSCPG_PG,
                                      L_SVSCPG_PGNODE, L_SVSCPG_PP_VERSION, 
                                      L_SVSCPG_PP_KEY1, L_SVSCPG_PP_KEY2, L_SVSCPG_PP_KEY3,
                                      L_SVSCPG_PP_KEY4, L_SVSCPG_PP_KEY5, L_SVSCPG_DESCRIPTION,
                                      L_SVSCPG_VALUE_F, L_SVSCPG_VALUE_S, L_SVSCPG_UNIT,
                                      L_SVSCPG_EXEC_START_DATE, L_SVSCPG_EXEC_END_DATE,
                                      L_SVSCPG_EXECUTOR, L_SVSCPG_PLANNED_EXECUTOR,
                                      L_SVSCPG_MANUALLY_ENTERED,
                                      L_SVSCPG_ASSIGN_DATE, L_SVSCPG_ASSIGNED_BY,
                                      L_SVSCPG_MANUALLY_ADDED, L_SVSCPG_FORMAT,
                                      L_SVSCPG_CONFIRM_ASSIGN, L_SVSCPG_ALLOW_ANY_PR,
                                      L_SVSCPG_NEVER_CREATE_METHODS,
                                      L_SVSCPG_DELAY, L_SVSCPG_DELAY_UNIT,
                                      L_SVSCPG_PG_CLASS, L_SVSCPG_LOG_HS, L_SVSCPG_LOG_HS_DETAILS,
                                      L_SVSCPG_LC, L_SVSCPG_LC_VERSION, L_SVSCPG_MODIFY_FLAG,
                                      L_SVSCPG_NR_OF_ROWS, 'Handling method output');

      IF L_RET_CODE = UNAPIGEN.DBERR_PARTIALSAVE THEN
         UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_SUCCESS; 
      ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

       
      
      L_PGNODE_FOUND := FALSE ;
      FOR L_ROW IN 1..L_SVSCPG_NR_OF_ROWS LOOP
         IF L_SVSCPG_ADDNODE_IN_BUFFER(L_ROW) = TRUE THEN
            IF NOT L_PGNODE_FOUND THEN
               L_SAVE_PGNODE := L_SVSCPG_PGNODE(L_ROW);
               L_PGNODE_FOUND := TRUE;
            END IF;
            ADDNODE('pg', L_SVSCPG_PG(L_ROW), L_SVSCPG_PP_VERSION(L_ROW), L_SVSCPG_PGNODE(L_ROW), '', '', '', '', '', '');
            IF L_SVSCPG_OUTPUT(L_ROW).SAVE_TP IN ('pp','ppau') THEN
               
               IF L_SVSCPG_MODIFY_FLAG(L_ROW) <= UNAPIGEN.DBERR_SUCCESS THEN
                  L_SVSCPG_OUTPUT(L_ROW).SAVE_PG := L_SVSCPG_PG(L_ROW);
                  L_SVSCPG_OUTPUT(L_ROW).SAVE_PGNODE := L_SVSCPG_PGNODE(L_ROW);
                  L_SVSCPG_OUTPUT(L_ROW).SAVE_PP_VERSION := L_SAVE_PP_VERSION;

                  IF L_SVSCPG_OUTPUT(L_ROW).SAVE_TP = 'pp' THEN
                     UPDATESAVEOUTPUT(L_SVSCPG_OUTPUT(L_ROW));
                  END IF;
               END IF;   
            END IF;
         END IF;
      END LOOP;

      L_SVSCPG_NR_OF_ROWS := 0;

   END SAVESCPARAMETERGROUPS;

   FUNCTION INTERNALSEARCHPPVERSIONINSTPP(A_SC IN VARCHAR2, A_PP IN VARCHAR2)
   RETURN VARCHAR2 IS
   
   L_ST         VARCHAR2(20);
   L_ST_VERSION VARCHAR2(20);
   L_PP_VERSION VARCHAR2(20);
   CURSOR L_STPP_CURSOR (A_ST IN VARCHAR2,A_ST_VERSION IN VARCHAR2, A_PP IN VARCHAR2) IS
   SELECT PP_VERSION
   FROM UTSTPP
   WHERE ST = A_ST
   AND VERSION = A_ST_VERSION
   AND PP = A_PP
   AND PP_KEY1 = ' '
   AND PP_KEY2 = ' '
   AND PP_KEY3 = ' '
   AND PP_KEY4 = ' '
   AND PP_KEY5 = ' '
   ORDER BY SEQ ASC;
   
   BEGIN
      SELECT ST, ST_VERSION
      INTO L_ST, L_ST_VERSION
      FROM UTSC
      WHERE SC = A_SC;

      L_PP_VERSION:=NULL;
      OPEN L_STPP_CURSOR(L_ST,L_ST_VERSION,A_PP);
      FETCH L_STPP_CURSOR
      INTO L_PP_VERSION;
      CLOSE L_STPP_CURSOR;     
      
      RETURN(UNAPIGEN.USEPPVERSION(A_PP, L_PP_VERSION, ' ', ' ', ' ', ' ', ' '));   
   END INTERNALSEARCHPPVERSIONINSTPP;

   PROCEDURE INTERNALINITSCPARAMETERGROUP(A_DIRECT_SAVE IN BOOLEAN, A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS    
   BEGIN
      
      
   
      L_INITSCPG_NR_OF_ROWS := NULL;
      L_INITSCPG_PP_KEY1 := ' ';
      L_INITSCPG_PP_KEY2 := ' ';
      L_INITSCPG_PP_KEY3 := ' ';
      L_INITSCPG_PP_KEY4 := ' ';
      L_INITSCPG_PP_KEY5 := ' ';

      
      
      
      IF L_SAVE_PP_VERSION IS NULL THEN
         L_SAVE_PP_VERSION := NVL(INTERNALSEARCHPPVERSIONINSTPP(A_SC, L_SAVE_PG), UNAPIGEN.USEPPVERSION(L_SAVE_PG, '~Current~', ' ', ' ', ' ', ' ', ' '));
      END IF;

      IF L_SAVE_PP_VERSION IS NULL THEN
         L_RET_CODE := UNAPIGEN.DBERR_NOOBJECT;
      ELSE      
         L_RET_CODE := UNAPIPG.INITSCPARAMETERGROUP(L_SAVE_PG, L_SAVE_PP_VERSION, 
                                  L_INITSCPG_PP_KEY1, L_INITSCPG_PP_KEY2, L_INITSCPG_PP_KEY3, L_INITSCPG_PP_KEY4, L_INITSCPG_PP_KEY5,
                                  NULL, A_SC,
                                  L_INITSCPG_PP_VERSION, L_INITSCPG_DESCRIPTION,
                                  L_INITSCPG_VALUE_F, L_INITSCPG_VALUE_S, L_INITSCPG_UNIT,
                                  L_INITSCPG_EXEC_START_DATE, L_INITSCPG_EXEC_END_DATE,
                                  L_INITSCPG_EXECUTOR, L_INITSCPG_PLANNED_EXECUTOR,
                                  L_INITSCPG_MANUALLY_ENTERED,
                                  L_INITSCPG_ASSIGN_DATE, L_INITSCPG_ASSIGNED_BY,
                                  L_INITSCPG_MANUALLY_ADDED, L_INITSCPG_FORMAT,
                                  L_INITSCPG_CONFIRM_ASSIGN, L_INITSCPG_ALLOW_ANY_PR,
                                  L_INITSCPG_NEVER_CREATE_ME,
                                  L_INITSCPG_DELAY, L_INITSCPG_DELAY_UNIT,
                                  L_INITSCPG_REANALYSIS, L_INITSCPG_PG_CLASS,
                                  L_INITSCPG_LOG_HS, L_INITSCPG_LOG_HS_DETAILS, 
                                  L_INITSCPG_LC, L_INITSCPG_LC_VERSION, L_INITSCPG_NR_OF_ROWS);      
      END IF;
      
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         IF L_RET_CODE <> UNAPIGEN.DBERR_NOOBJECT THEN
            UNAPIGEN.P_TXN_ERROR  := L_RET_CODE;
            RAISE STPERROR;
         ELSE
            
            L_INITSCPG_PP_VERSION(1) := UNVERSION.P_NO_VERSION;
            L_INITSCPG_DESCRIPTION(1) := L_SAVE_PG;
            L_INITSCPG_VALUE_F(1) := NULL;
            L_INITSCPG_VALUE_S(1) := NULL;
            L_INITSCPG_UNIT(1) := NULL;
            L_INITSCPG_EXEC_START_DATE(1) := NULL;
            L_INITSCPG_EXEC_END_DATE(1) := NULL;
            L_INITSCPG_EXECUTOR(1) := NULL;
            L_INITSCPG_PLANNED_EXECUTOR(1) := NULL;
            L_INITSCPG_MANUALLY_ENTERED(1) := '0';
            L_INITSCPG_ASSIGN_DATE(1) := CURRENT_TIMESTAMP;
            L_INITSCPG_ASSIGNED_BY(1) := UNAPIGEN.P_USER;
            L_INITSCPG_MANUALLY_ADDED(1) := '0';
            L_INITSCPG_FORMAT(1) := NULL;
            L_INITSCPG_CONFIRM_ASSIGN(1) := '0';
            L_INITSCPG_ALLOW_ANY_PR(1) := '1';
            L_INITSCPG_NEVER_CREATE_ME(1) := '0';
            L_INITSCPG_DELAY(1) := 0;
            L_INITSCPG_DELAY_UNIT(1) := 'DD';
            L_INITSCPG_REANALYSIS(1) := 0;
            L_INITSCPG_PG_CLASS(1) := NULL;
            L_INITSCPG_LC(1) := NULL;
            L_INITSCPG_LC_VERSION(1) := NULL;
            L_INITSCPG_NR_OF_ROWS := 1;
            IF L_DEFAULT_LOG_HS4PG IS NULL OR
               L_DEFAULT_LOG_HS_DETAILS4PG IS NULL THEN
               OPEN L_OBJECTS_CURSOR('pg');
               FETCH L_OBJECTS_CURSOR
               INTO L_DEFAULT_LOG_HS4PG, L_DEFAULT_LOG_HS_DETAILS4PG;
               IF L_OBJECTS_CURSOR%NOTFOUND THEN
                                    UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_GENFAIL;
                                    L_SQLERRM := 'No defaults defined for pg';
                                    RAISE STPERROR;                  
               END IF;
               CLOSE L_OBJECTS_CURSOR;
            END IF;
            L_INITSCPG_LOG_HS(1) := L_DEFAULT_LOG_HS4PG;
            L_INITSCPG_LOG_HS_DETAILS(1) := L_DEFAULT_LOG_HS_DETAILS4PG;
         END IF;
      END IF;

      
      
      
      
      
      
      IF L_INITSCPG_NR_OF_ROWS > 1 THEN
         L_INITSCPG_NR_OF_ROWS := 1;
      END IF;

      
      L_SVSCPG_NR_OF_ROWS := L_SVSCPG_NR_OF_ROWS + 1;

      L_SVSCPG_SC(L_SVSCPG_NR_OF_ROWS) := A_SC;
      L_SVSCPG_PG(L_SVSCPG_NR_OF_ROWS) := L_SAVE_PG;
      L_SVSCPG_PGNODE(L_SVSCPG_NR_OF_ROWS) := NULL;
      L_SVSCPG_MODIFY_FLAG(L_SVSCPG_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_AND_CRAU;
      L_SVSCPG_ADDNODE_IN_BUFFER(L_SVSCPG_NR_OF_ROWS) := TRUE;
      L_SVSCPG_VALUE_F(L_SVSCPG_NR_OF_ROWS) := NULL;
      L_SVSCPG_VALUE_S(L_SVSCPG_NR_OF_ROWS) := NULL;

      
      GETNODE('pg', L_SAVE_PG, L_INITSCPG_PP_VERSION(1), '', '', '', '', '', '', '', L_SAVE_PGNODE);
      IF L_SAVE_PGNODE IS NOT NULL THEN
         L_SVSCPG_PGNODE(L_SVSCPG_NR_OF_ROWS) := L_SAVE_PGNODE;
         L_SVSCPG_MODIFY_FLAG(L_SVSCPG_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;
      END IF;
      IF A_DIRECT_SAVE = TRUE AND 
         L_SVSCPG_PGNODE(L_SVSCPG_NR_OF_ROWS) IS NULL THEN
         
         
         
         
         
         
         
         
         
         
         
         
         IF A_SC = L_DIRECT_SAVE_LAST_PGCONTEXT THEN
            IF L_DIRECT_SAVE_LAST_PGNODE IS NULL THEN
               
               L_DIRECT_SAVE_LAST_PGNODE := L_SVSCPG_PGNODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            ELSE
               L_DIRECT_SAVE_LAST_PGNODE := L_DIRECT_SAVE_LAST_PGNODE+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            END IF;
         ELSE
            
            L_DIRECT_SAVE_LAST_PGNODE := L_SVSCPG_PGNODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            L_DIRECT_SAVE_LAST_PGCONTEXT := A_SC;
            
         END IF;
            
         
         LOOP
            SELECT COUNT(*)
            INTO L_COUNT_PG
            FROM UTSCPG
            WHERE SC = A_SC
            AND PGNODE = L_DIRECT_SAVE_LAST_PGNODE;
            
            IF L_COUNT_PG = 0 THEN
               
               EXIT;
            ELSE
               
               L_DIRECT_SAVE_LAST_PGNODE := L_DIRECT_SAVE_LAST_PGNODE + UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            END IF;
         END LOOP;                     
         L_SVSCPG_PGNODE(L_SVSCPG_NR_OF_ROWS) := L_DIRECT_SAVE_LAST_PGNODE;
         L_SVSCPG_MODIFY_FLAG(L_SVSCPG_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;                 
      END IF;

      L_SVSCPG_PP_VERSION(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_VERSION(1) ;
      L_SVSCPG_PP_KEY1(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_KEY1;
      L_SVSCPG_PP_KEY2(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_KEY2;
      L_SVSCPG_PP_KEY3(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_KEY3;
      L_SVSCPG_PP_KEY4(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_KEY4;
      L_SVSCPG_PP_KEY5(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PP_KEY5;
      L_SVSCPG_DESCRIPTION(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_DESCRIPTION(1) ;
      L_SVSCPG_UNIT(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_UNIT(1) ;
      L_SVSCPG_EXEC_START_DATE(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_EXEC_START_DATE(1) ;
      L_SVSCPG_EXEC_END_DATE(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_EXEC_END_DATE(1) ;
      L_SVSCPG_EXECUTOR(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_EXECUTOR(1) ;
      L_SVSCPG_PLANNED_EXECUTOR(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PLANNED_EXECUTOR(1) ;
      L_SVSCPG_MANUALLY_ENTERED(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_MANUALLY_ENTERED(1) ;
      L_SVSCPG_ASSIGN_DATE(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_ASSIGN_DATE(1) ;
      L_SVSCPG_ASSIGNED_BY(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_ASSIGNED_BY(1) ;
      L_SVSCPG_MANUALLY_ADDED(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_MANUALLY_ADDED(1) ;
      L_SVSCPG_FORMAT(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_FORMAT(1) ;
      L_SVSCPG_CONFIRM_ASSIGN(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_CONFIRM_ASSIGN(1) ;
      L_SVSCPG_ALLOW_ANY_PR(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_ALLOW_ANY_PR(1) ;
      L_SVSCPG_NEVER_CREATE_METHODS(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_NEVER_CREATE_ME(1) ;
      L_SVSCPG_DELAY(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_DELAY(1) ;
      L_SVSCPG_DELAY_UNIT(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_DELAY_UNIT(1) ;
      L_SVSCPG_PG_CLASS(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_PG_CLASS(1) ;
      L_SVSCPG_LOG_HS(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_LOG_HS(1) ;
      L_SVSCPG_LOG_HS_DETAILS(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_LOG_HS_DETAILS(1) ;
      L_SVSCPG_LC(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_LC(1) ;
      L_SVSCPG_LC_VERSION(L_SVSCPG_NR_OF_ROWS) := L_INITSCPG_LC_VERSION(1) ;
      
      
      L_SVSCPG_OUTPUT(L_SVSCPG_NR_OF_ROWS) := A_RES_OUTPUT;


   END INTERNALINITSCPARAMETERGROUP;

   

   PROCEDURE INITANDSAVEPARAMETERGROUP(A_DIRECT_SAVE IN BOOLEAN, A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS
   BEGIN
      
      
      
      
      
      IF A_DIRECT_SAVE THEN
         IF L_SVSCPG_NR_OF_ROWS > 0 THEN
            SAVESCPARAMETERGROUPS;
         END IF;
      ELSE
         
         NULL;
      END IF;

      
      
      
      IF L_SVSCPG_NR_OF_ROWS = 0 THEN
         L_SVSCPG_NR_OF_ROWS := 1;
         L_SVSCPG_SC(1) := A_SC;
         L_SVSCPG_PG(1) :=  A_PG ;
         L_SVSCPG_PGNODE(1) :=  A_PGNODE ;         
         L_SVSCPG_MODIFY_FLAG(1) := UNAPIGEN.DBERR_SUCCESS;
         L_SVSCPG_ADDNODE_IN_BUFFER(1) := FALSE;
      END IF;

      
      INTERNALINITSCPARAMETERGROUP(A_DIRECT_SAVE, A_RES_OUTPUT);

      IF A_DIRECT_SAVE THEN
         SAVESCPARAMETERGROUPS;     
      ELSE
         
         NULL;
      END IF;
            
   END INITANDSAVEPARAMETERGROUP;

   PROCEDURE FLUSHSAVEPARAMETERGROUPS IS
   BEGIN
      
      IF L_SVSCPG_NR_OF_ROWS > 0 THEN
         SAVESCPARAMETERGROUPS;
      END IF;
   END FLUSHSAVEPARAMETERGROUPS;

   
   
   PROCEDURE ADDFIRSTPAAFTER IS
   BEGIN
      
      
      
      
      
      OPEN L_FIRST_PA_AFTER_CURSOR(A_SC, A_PG, A_PGNODE, A_PANODE);
      FETCH L_FIRST_PA_AFTER_CURSOR
      INTO L_FIRST_PA_AFTER_REC;
      IF L_FIRST_PA_AFTER_CURSOR%FOUND THEN
         L_SVSCPA_NR_OF_ROWS := L_SVSCPA_NR_OF_ROWS + 1;
         L_SVSCPA_SC(L_SVSCPA_NR_OF_ROWS) := A_SC;
         L_SVSCPA_PG(L_SVSCPA_NR_OF_ROWS) :=  A_PG ;
         L_SVSCPA_PGNODE(L_SVSCPA_NR_OF_ROWS) :=  A_PGNODE ;         
         L_SVSCPA_PA(L_SVSCPA_NR_OF_ROWS) :=  L_FIRST_PA_AFTER_REC.PA ;
         L_SVSCPA_PANODE(L_SVSCPA_NR_OF_ROWS) :=  L_FIRST_PA_AFTER_REC.PANODE ;         
         L_SVSCPA_MODIFY_FLAG(L_SVSCPA_NR_OF_ROWS) := UNAPIGEN.DBERR_SUCCESS;
         L_SVSCPA_ADDNODE_IN_BUFFER(L_SVSCPA_NR_OF_ROWS) := FALSE;
      END IF;
      CLOSE L_FIRST_PA_AFTER_CURSOR;
   END ADDFIRSTPAAFTER;

   PROCEDURE SAVESCPARAMETERS IS

      L_PANODE_FOUND BOOLEAN;

   BEGIN
      ADDFIRSTPAAFTER;

      L_RET_CODE := UNAPIPA.SAVESCPARAMETER(UNAPIGEN.ALARMS_NOT_HANDLED, L_SVSCPA_SC,
                                 L_SVSCPA_PG, L_SVSCPA_PGNODE, L_SVSCPA_PA,
                                 L_SVSCPA_PANODE, L_SVSCPA_PR_VERSION, L_SVSCPA_DESCRIPTION,
                                 L_SVSCPA_VALUE_F, L_SVSCPA_VALUE_S,
                                 L_SVSCPA_UNIT, L_SVSCPA_EXEC_START_DATE,
                                 L_SVSCPA_EXEC_END_DATE, L_SVSCPA_EXECUTOR,
                                 L_SVSCPA_PLANNED_EXECUTOR,
                                 L_SVSCPA_MANUALLY_ENTERED,
                                 L_SVSCPA_ASSIGN_DATE, L_SVSCPA_ASSIGNED_BY,
                                 L_SVSCPA_MANUALLY_ADDED, L_SVSCPA_FORMAT,
                                 L_SVSCPA_TD_INFO, L_SVSCPA_TD_INFO_UNIT,
                                 L_SVSCPA_CONFIRM_UID, L_SVSCPA_ALLOW_ANY_ME,
                                 L_SVSCPA_DELAY, L_SVSCPA_DELAY_UNIT,
                                 L_SVSCPA_MIN_NR_RESULTS, L_SVSCPA_CALC_METHOD,
                                 L_SVSCPA_CALC_CF, L_SVSCPA_ALARM_ORDER,
                                 L_SVSCPA_VALID_SPECSA, L_SVSCPA_VALID_SPECSB,
                                 L_SVSCPA_VALID_SPECSC, L_SVSCPA_VALID_LIMITSA,
                                 L_SVSCPA_VALID_LIMITSB, L_SVSCPA_VALID_LIMITSC,
                                 L_SVSCPA_VALID_TARGETA, L_SVSCPA_VALID_TARGETB,
                                 L_SVSCPA_VALID_TARGETC, L_SVSCPA_MT, L_SVSCPA_MT_VERSION,
                                 L_SVSCPA_MT_NR_MEASUR, L_SVSCPA_LOG_EXCEPTIONS,
                                 L_SVSCPA_PA_CLASS, L_SVSCPA_LOG_HS, L_SVSCPA_LOG_HS_DETAILS,
                                 L_SVSCPA_LC, L_SVSCPA_LC_VERSION, L_SVSCPA_MODIFY_FLAG,
                                 L_SVSCPA_NR_OF_ROWS, 'Handling method output');
      IF L_RET_CODE IN (UNAPIGEN.DBERR_PARTIALSAVE, UNAPIGEN.DBERR_PARTIALCHARTSAVE) THEN
         UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_SUCCESS; 
      ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

       
      
      L_PANODE_FOUND := FALSE ;
      FOR L_ROW IN 1..L_SVSCPA_NR_OF_ROWS LOOP
         IF L_SVSCPA_ADDNODE_IN_BUFFER(L_ROW) = TRUE THEN
            IF NOT L_PANODE_FOUND THEN
               L_SAVE_PANODE := L_SVSCPA_PANODE(L_ROW);
               L_PANODE_FOUND := TRUE;
            END IF;
            ADDNODE('pa', L_SVSCPA_PG(L_ROW), '', L_SVSCPA_PGNODE(L_ROW),L_SVSCPA_PA(L_ROW), L_SVSCPA_PR_VERSION(L_ROW), L_SVSCPA_PANODE(L_ROW), '', '', '');
            
            IF L_SVSCPA_OUTPUT(L_ROW).SAVE_TP IN ('pr','prau') THEN
               
               IF L_SVSCPA_MODIFY_FLAG(L_ROW) <= UNAPIGEN.DBERR_SUCCESS THEN
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PG := L_SVSCPA_PG(L_ROW);
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PGNODE := L_SVSCPA_PGNODE(L_ROW);
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PA := L_SVSCPA_PA(L_ROW);
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PANODE := L_SVSCPA_PANODE(L_ROW);
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
                  
                  L_SVSCPA_OUTPUT(L_ROW).SAVE_REANALYSIS := 0;
               
                  IF L_SVSCPA_OUTPUT(L_ROW).SAVE_TP = 'pr' THEN
                     UPDATESAVEOUTPUT(L_SVSCPA_OUTPUT(L_ROW));
                  END IF;
                  
               END IF;   
            END IF;
         END IF;
      END LOOP;

      L_SVSCPA_NR_OF_ROWS := 0;

   END SAVESCPARAMETERS;

   FUNCTION INTERNALSEARCHPRVERSIONINPPPR(A_PP IN VARCHAR2, A_PP_VERSION IN VARCHAR2, A_PR IN VARCHAR2)
   RETURN VARCHAR2 IS
   
   L_PR_VERSION VARCHAR2(20);
   L_PP_VERSION VARCHAR2(20);
   CURSOR L_PPPR_CURSOR (A_PP IN VARCHAR2,A_PP_VERSION IN VARCHAR2, A_PR IN VARCHAR2) IS
   SELECT PR_VERSION
   FROM UTPPPR
   WHERE PP = A_PP
   AND VERSION = L_PP_VERSION
   AND PR = A_PR
   AND PP_KEY1 = ' '
   AND PP_KEY2 = ' '
   AND PP_KEY3 = ' '
   AND PP_KEY4 = ' '
   AND PP_KEY5 = ' '
   ORDER BY SEQ ASC;

   CURSOR L_PP_VERSION_CURSOR (A_SC IN VARCHAR2,A_PG IN VARCHAR2, A_PGNODE IN NUMBER) IS
   SELECT PP_VERSION
   FROM UTSCPG
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE;
   
   BEGIN
      L_PR_VERSION:=NULL;
      L_PP_VERSION:=A_PP_VERSION;
      IF L_PP_VERSION IS NULL THEN
         OPEN L_PP_VERSION_CURSOR(A_SC,L_SAVE_PG, L_SAVE_PGNODE);
         FETCH L_PP_VERSION_CURSOR
         INTO L_PP_VERSION;
         CLOSE L_PP_VERSION_CURSOR;
      END IF;
      OPEN L_PPPR_CURSOR(A_PP,L_PP_VERSION,A_PR);
      FETCH L_PPPR_CURSOR
      INTO L_PR_VERSION;
      CLOSE L_PPPR_CURSOR;     
      
      RETURN(UNAPIGEN.USEVERSION('pr', A_PR, L_PR_VERSION));   
   END INTERNALSEARCHPRVERSIONINPPPR;

   PROCEDURE INTERNALINITSCPARAMETER(A_DIRECT_SAVE IN BOOLEAN,
                                     A_VALUE_F IN NUMBER,A_VALUE_S IN VARCHAR2, 
                                     A_UNIT IN VARCHAR2, A_FORMAT IN VARCHAR2,
                                     A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS    
   BEGIN
      
      
   
      L_INITSCPA_NR_OF_ROWS := NULL;

      
      
      
      IF L_SAVE_PR_VERSION IS NULL THEN
         L_SAVE_PR_VERSION := NVL(INTERNALSEARCHPRVERSIONINPPPR(L_SAVE_PG, L_SAVE_PP_VERSION, L_SAVE_PA), UNAPIGEN.USEVERSION('pr', L_SAVE_PA, L_SAVE_PR_VERSION));
      END IF;

      IF L_SAVE_PR_VERSION IS NULL THEN
         L_RET_CODE := UNAPIGEN.DBERR_NOOBJECT;
      ELSE
         
         L_RET_CODE := UNAPIPA.INITSCPARAMETER(L_SAVE_PA, L_SAVE_PR_VERSION, NULL, A_SC, L_SAVE_PG,
                                               L_SAVE_PGNODE, L_SAVE_PP_VERSION,
                                               ' ', ' ', ' ', ' ', ' ',
                                               L_INITSCPA_PR_VERSION, L_INITSCPA_DESCRIPTION,
                                               L_INITSCPA_VALUE_F, L_INITSCPA_VALUE_S,
                                               L_INITSCPA_UNIT, L_INITSCPA_EXEC_START_DATE,
                                               L_INITSCPA_EXEC_END_DATE, L_INITSCPA_EXECUTOR,
                                               L_INITSCPA_PLANNED_EXECUTOR,
                                               L_INITSCPA_MANUALLY_ENTERED,
                                               L_INITSCPA_ASSIGN_DATE, L_INITSCPA_ASSIGNED_BY,
                                               L_INITSCPA_MANUALLY_ADDED, L_INITSCPA_FORMAT,
                                               L_INITSCPA_TD_INFO, L_INITSCPA_TD_INFO_UNIT,
                                               L_INITSCPA_CONFIRM_UID, L_INITSCPA_ALLOW_ANY_ME,
                                               L_INITSCPA_DELAY, L_INITSCPA_DELAY_UNIT,
                                               L_INITSCPA_MIN_NR_RESULTS, L_INITSCPA_CALC_METHOD,
                                               L_INITSCPA_CALC_CF, L_INITSCPA_ALARM_ORDER,
                                               L_INITSCPA_VALID_SPECSA, L_INITSCPA_VALID_SPECSB,
                                               L_INITSCPA_VALID_SPECSC, L_INITSCPA_VALID_LIMITSA,
                                               L_INITSCPA_VALID_LIMITSB, L_INITSCPA_VALID_LIMITSC,
                                               L_INITSCPA_VALID_TARGETA, L_INITSCPA_VALID_TARGETB,
                                               L_INITSCPA_VALID_TARGETC, 
                                               L_INITSCPA_MT, L_INITSCPA_MT_VERSION,
                                               L_INITSCPA_MT_NR_MEASUR, L_INITSCPA_LOG_EXCEPTIONS,
                                               L_INITSCPA_REANALYSIS, L_INITSCPA_PA_CLASS,
                                               L_INITSCPA_LOG_HS, L_INITSCPA_LOG_HS_DETAILS, 
                                               L_INITSCPA_LC, L_INITSCPA_LC_VERSION, 
                                               L_INITSCPA_NR_OF_ROWS);
      END IF;

      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         IF L_RET_CODE <> UNAPIGEN.DBERR_NOOBJECT THEN
            UNAPIGEN.P_TXN_ERROR  := L_RET_CODE;
            RAISE STPERROR;
         ELSE
            
            L_INITSCPA_PR_VERSION(1) := UNVERSION.P_NO_VERSION;
            L_INITSCPA_DESCRIPTION(1) := L_SAVE_PA;
            L_INITSCPA_UNIT(1) := NULL;
            L_INITSCPA_EXEC_START_DATE(1) := NULL;
            L_INITSCPA_EXEC_END_DATE(1) := NULL;
            L_INITSCPA_EXECUTOR(1) := NULL;
            L_INITSCPA_PLANNED_EXECUTOR(1) := NULL;
            L_INITSCPA_MANUALLY_ENTERED(1) := '0';
            L_INITSCPA_ASSIGN_DATE(1) := CURRENT_TIMESTAMP;
            L_INITSCPA_ASSIGNED_BY(1) := UNAPIGEN.P_USER;
            L_INITSCPA_MANUALLY_ADDED(1) := '0';
            L_INITSCPA_FORMAT(1) := NULL;
            L_INITSCPA_TD_INFO(1) := 0;
            L_INITSCPA_TD_INFO_UNIT(1) := 'DD';
            L_INITSCPA_CONFIRM_UID(1) := '0';
            L_INITSCPA_ALLOW_ANY_ME(1) := '0';
            L_INITSCPA_DELAY(1) := 0;
            L_INITSCPA_DELAY_UNIT(1) := 'DD';
            L_INITSCPA_MIN_NR_RESULTS(1) := 1;
            L_INITSCPA_CALC_METHOD(1) := 'N';
            L_INITSCPA_CALC_CF(1) := NULL;
            L_INITSCPA_ALARM_ORDER(1) := NULL;
            L_INITSCPA_VALID_SPECSA(1) := NULL;
            L_INITSCPA_VALID_SPECSB(1) := NULL;
            L_INITSCPA_VALID_SPECSC(1) := NULL;
            L_INITSCPA_VALID_LIMITSA(1) := NULL;
            L_INITSCPA_VALID_LIMITSB(1) := NULL;
            L_INITSCPA_VALID_LIMITSC(1) := NULL;
            L_INITSCPA_VALID_TARGETA(1) := NULL;
            L_INITSCPA_VALID_TARGETB(1) := NULL;
            L_INITSCPA_VALID_TARGETC(1) := NULL;
            L_INITSCPA_MT(1) := NULL;
            L_INITSCPA_MT_VERSION(1) := NULL;
            L_INITSCPA_MT_NR_MEASUR(1) := NULL;
            L_INITSCPA_LOG_EXCEPTIONS(1) := '0';
            L_INITSCPA_PA_CLASS(1) := NULL;
            L_INITSCPA_LC(1) := NULL;
            L_INITSCPA_LC_VERSION(1) := NULL;
            L_INITSCPA_NR_OF_ROWS := 1;
            IF L_DEFAULT_LOG_HS4PA IS NULL OR
               L_DEFAULT_LOG_HS_DETAILS4PA IS NULL THEN
               OPEN L_OBJECTS_CURSOR('pa');
               FETCH L_OBJECTS_CURSOR
               INTO L_DEFAULT_LOG_HS4PA, L_DEFAULT_LOG_HS_DETAILS4PA;
               IF L_OBJECTS_CURSOR%NOTFOUND THEN
                                    UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_GENFAIL;
                                    L_SQLERRM := 'No defaults defined for pa';
                                    RAISE STPERROR;                  
               END IF;
               CLOSE L_OBJECTS_CURSOR;
            END IF;
            L_INITSCPA_LOG_HS(1) := L_DEFAULT_LOG_HS4PA;
            L_INITSCPA_LOG_HS_DETAILS(1) := L_DEFAULT_LOG_HS_DETAILS4PA;            
         END IF;
      END IF;

      
      
      
      
      
      
      IF L_INITSCPA_NR_OF_ROWS > 1 THEN
         L_INITSCPA_NR_OF_ROWS := 1;
      END IF;

      
      L_SVSCPA_NR_OF_ROWS := L_SVSCPA_NR_OF_ROWS + 1;

      L_SVSCPA_SC(L_SVSCPA_NR_OF_ROWS) := A_SC;
      L_SVSCPA_PG(L_SVSCPA_NR_OF_ROWS) := L_SAVE_PG;
      L_SVSCPA_PGNODE(L_SVSCPA_NR_OF_ROWS) := L_SAVE_PGNODE;
      L_SVSCPA_PA(L_SVSCPA_NR_OF_ROWS) := L_SAVE_PA;
      L_SVSCPA_PANODE(L_SVSCPA_NR_OF_ROWS) := NULL;
      L_SVSCPA_MODIFY_FLAG(L_SVSCPA_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_AND_CRAU;
      L_SVSCPA_ADDNODE_IN_BUFFER(L_SVSCPA_NR_OF_ROWS) := TRUE;

      
      
      
      L_RET_CODE := UNAPIGEN.TRANSFORMRESULT(A_VALUE_S,
                                             A_VALUE_F,      
                                             A_UNIT,
                                             A_FORMAT,    
                                             L_SVSCPA_VALUE_S(L_SVSCPA_NR_OF_ROWS),    
                                             L_SVSCPA_VALUE_F(L_SVSCPA_NR_OF_ROWS),  
                                             L_INITSCPA_UNIT(1),    
                                             L_INITSCPA_FORMAT(1));
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      
      GETNODE('pa', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, L_INITSCPA_PR_VERSION(1), '', '', '', '', L_SAVE_PANODE);
      IF L_SAVE_PANODE IS NOT NULL THEN
         L_SVSCPA_PANODE(L_SVSCPA_NR_OF_ROWS) := L_SAVE_PANODE;
         L_SVSCPA_MODIFY_FLAG(L_SVSCPA_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;
      END IF;
      IF A_DIRECT_SAVE = TRUE AND 
         L_SVSCPA_PANODE(L_SVSCPA_NR_OF_ROWS) IS NULL THEN
         
         
         
         
         
         
         
         
         
         
         
         
         IF A_SC||'#'||L_SVSCPA_PG(L_SVSCPA_NR_OF_ROWS)||'#'||L_SVSCPA_PGNODE(L_SVSCPA_NR_OF_ROWS) =
            L_DIRECT_SAVE_LAST_PACONTEXT THEN
            IF L_DIRECT_SAVE_LAST_PANODE IS NULL THEN
               
               L_DIRECT_SAVE_LAST_PANODE := L_SVSCPA_PANODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            ELSE
               L_DIRECT_SAVE_LAST_PANODE := L_DIRECT_SAVE_LAST_PANODE+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            END IF;
         ELSE
            
            L_DIRECT_SAVE_LAST_PANODE := L_SVSCPA_PANODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            L_DIRECT_SAVE_LAST_PACONTEXT := A_SC||'#'||L_SVSCPA_PG(L_SVSCPA_NR_OF_ROWS)||'#'||L_SVSCPA_PGNODE(L_SVSCPA_NR_OF_ROWS);
            
         END IF;
            
         
         LOOP
            SELECT COUNT(*)
            INTO L_COUNT_PA
            FROM UTSCPA
            WHERE SC = A_SC
            AND PG = L_SVSCPA_PG(L_SVSCPA_NR_OF_ROWS)
            AND PGNODE = L_SVSCPA_PGNODE(L_SVSCPA_NR_OF_ROWS)
            AND PANODE = L_DIRECT_SAVE_LAST_PANODE;
            
            IF L_COUNT_PA = 0 THEN
               
               EXIT;
            ELSE
               
               
               
               L_DIRECT_SAVE_LAST_PANODE := L_DIRECT_SAVE_LAST_PANODE + UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            END IF;
         END LOOP;       
         L_SVSCPA_PANODE(L_SVSCPA_NR_OF_ROWS) := L_DIRECT_SAVE_LAST_PANODE;
         L_SVSCPA_MODIFY_FLAG(L_SVSCPA_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;
      END IF;

      L_SVSCPA_PR_VERSION(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_PR_VERSION(1) ;
      L_SVSCPA_DESCRIPTION(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_DESCRIPTION(1) ;
      L_SVSCPA_UNIT(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_UNIT(1) ;
      L_SVSCPA_EXEC_START_DATE(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_EXEC_START_DATE(1) ;
      L_SVSCPA_EXEC_END_DATE(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_EXEC_END_DATE(1) ;
      L_SVSCPA_EXECUTOR(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_EXECUTOR(1) ;
      L_SVSCPA_PLANNED_EXECUTOR(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_PLANNED_EXECUTOR(1) ;
      L_SVSCPA_MANUALLY_ENTERED(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MANUALLY_ENTERED(1) ;
      L_SVSCPA_ASSIGN_DATE(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_ASSIGN_DATE(1) ;
      L_SVSCPA_ASSIGNED_BY(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_ASSIGNED_BY(1) ;
      L_SVSCPA_MANUALLY_ADDED(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MANUALLY_ADDED(1) ;
      L_SVSCPA_FORMAT(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_FORMAT(1) ;
      L_SVSCPA_TD_INFO(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_TD_INFO(1) ;
      L_SVSCPA_TD_INFO_UNIT(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_TD_INFO_UNIT(1) ;
      L_SVSCPA_CONFIRM_UID(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_CONFIRM_UID(1) ;
      L_SVSCPA_ALLOW_ANY_ME(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_ALLOW_ANY_ME(1) ;
      L_SVSCPA_DELAY(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_DELAY(1) ;
      L_SVSCPA_DELAY_UNIT(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_DELAY_UNIT(1) ;
      L_SVSCPA_MIN_NR_RESULTS(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MIN_NR_RESULTS(1) ;
      L_SVSCPA_CALC_METHOD(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_CALC_METHOD(1) ;
      L_SVSCPA_CALC_CF(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_CALC_CF(1) ;
      L_SVSCPA_ALARM_ORDER(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_ALARM_ORDER(1) ;
      L_SVSCPA_VALID_SPECSA(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_SPECSA(1) ;
      L_SVSCPA_VALID_SPECSB(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_SPECSB(1) ;
      L_SVSCPA_VALID_SPECSC(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_SPECSC(1) ;
      L_SVSCPA_VALID_LIMITSA(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_LIMITSA(1) ;
      L_SVSCPA_VALID_LIMITSB(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_LIMITSB(1) ;
      L_SVSCPA_VALID_LIMITSC(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_LIMITSC(1) ;
      L_SVSCPA_VALID_TARGETA(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_TARGETA(1) ;
      L_SVSCPA_VALID_TARGETB(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_TARGETB(1) ;
      L_SVSCPA_VALID_TARGETC(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_VALID_TARGETC(1) ;
      L_SVSCPA_MT(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MT(1) ;
      L_SVSCPA_MT_VERSION(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MT_VERSION(1) ;
      L_SVSCPA_MT_NR_MEASUR(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_MT_NR_MEASUR(1) ;
      L_SVSCPA_LOG_EXCEPTIONS(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_LOG_EXCEPTIONS(1) ;
      L_SVSCPA_PA_CLASS(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_PA_CLASS(1) ;
      L_SVSCPA_LOG_HS(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_LOG_HS(1) ;
      L_SVSCPA_LOG_HS_DETAILS(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_LOG_HS_DETAILS(1) ;
      L_SVSCPA_LC(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_LC(1) ;
      L_SVSCPA_LC_VERSION(L_SVSCPA_NR_OF_ROWS) := L_INITSCPA_LC_VERSION(1) ;
      
      
      L_SVSCPA_OUTPUT(L_SVSCPA_NR_OF_ROWS) := A_RES_OUTPUT;

   END INTERNALINITSCPARAMETER;

   
   PROCEDURE INITANDSAVEPARAMETER(A_VALUE_F IN NUMBER,A_VALUE_S IN VARCHAR2, 
                                  A_UNIT IN VARCHAR2, A_FORMAT IN VARCHAR2,
                                  A_DIRECT_SAVE IN BOOLEAN, A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS
   BEGIN
      
      
      
      
      
      IF A_DIRECT_SAVE THEN
         IF L_SVSCPA_NR_OF_ROWS > 0 THEN
            SAVESCPARAMETERS;
            L_PREVIOUS_SAVESCPA_PG := NULL;
            L_PREVIOUS_SAVESCPA_PGNODE := 0;
         END IF;
      ELSE
         IF L_SAVE_PG <> NVL(L_PREVIOUS_SAVESCPA_PG, ' ') OR
            L_SAVE_PGNODE <> NVL(L_PREVIOUS_SAVESCPA_PGNODE, 0) THEN
            IF L_SVSCPA_NR_OF_ROWS > 0 THEN
               SAVESCPARAMETERS;
               L_PREVIOUS_SAVESCPA_PG := NULL;
               L_PREVIOUS_SAVESCPA_PGNODE := 0;
            END IF;
         END IF;
      END IF;

      
      
      
      IF L_SVSCPA_NR_OF_ROWS = 0 THEN
          L_SVSCPA_NR_OF_ROWS := 1;
          L_SVSCPA_SC(1) := A_SC;
          L_SVSCPA_PG(1) :=  A_PG ;
          L_SVSCPA_PGNODE(1) :=  A_PGNODE ;         
          L_SVSCPA_PA(1) :=  A_PA ;
          L_SVSCPA_PANODE(1) :=  A_PANODE ;         
          L_SVSCPA_MODIFY_FLAG(1) := UNAPIGEN.DBERR_SUCCESS;
          L_SVSCPA_ADDNODE_IN_BUFFER(1) := FALSE;
      END IF;

      
      INTERNALINITSCPARAMETER(A_DIRECT_SAVE, A_VALUE_F, A_VALUE_S, A_UNIT, A_FORMAT, A_RES_OUTPUT);

      IF A_DIRECT_SAVE THEN
         SAVESCPARAMETERS;     
         L_PREVIOUS_SAVESCPA_PG := NULL;
         L_PREVIOUS_SAVESCPA_PGNODE := 0;
      ELSE
         L_PREVIOUS_SAVESCPA_PG := L_SAVE_PG;
         L_PREVIOUS_SAVESCPA_PGNODE := L_SAVE_PGNODE;
      END IF;
            
   END INITANDSAVEPARAMETER;

   
   PROCEDURE FLUSHSAVEPARAMETERS IS
   BEGIN
      
      IF L_SVSCPA_NR_OF_ROWS > 0 THEN
         SAVESCPARAMETERS;
      END IF;
   END FLUSHSAVEPARAMETERS;

   
   
   PROCEDURE ADDFIRSTMEAFTER IS
   BEGIN
      
      

      
      
      OPEN L_FIRST_ME_AFTER_CURSOR(A_SC, A_PG, A_PGNODE, A_PA , A_PANODE, A_MENODE);
      FETCH L_FIRST_ME_AFTER_CURSOR
      INTO L_FIRST_ME_AFTER_REC;
      IF L_FIRST_ME_AFTER_CURSOR%FOUND THEN
         L_SVSCME_NR_OF_ROWS := L_SVSCME_NR_OF_ROWS + 1;
         L_SVSCME_SC(L_SVSCME_NR_OF_ROWS) := A_SC;
         L_SVSCME_PG(L_SVSCME_NR_OF_ROWS) :=  A_PG ;
         L_SVSCME_PGNODE(L_SVSCME_NR_OF_ROWS) :=  A_PGNODE ;         
         L_SVSCME_PA(L_SVSCME_NR_OF_ROWS) :=  A_PA ;
         L_SVSCME_PANODE(L_SVSCME_NR_OF_ROWS) :=  A_PANODE ;         
         L_SVSCME_ME(L_SVSCME_NR_OF_ROWS) :=  L_FIRST_ME_AFTER_REC.ME ;
         L_SVSCME_MENODE(L_SVSCME_NR_OF_ROWS) :=  L_FIRST_ME_AFTER_REC.MENODE ;         
         L_SVSCME_REANALYSIS(L_SVSCME_NR_OF_ROWS) :=  L_FIRST_ME_AFTER_REC.REANALYSIS ;         
         L_SVSCME_MODIFY_FLAG(L_SVSCME_NR_OF_ROWS) := UNAPIGEN.DBERR_SUCCESS;
         L_SVSCME_ADDNODE_IN_BUFFER(L_SVSCME_NR_OF_ROWS) := FALSE;
      END IF;
      CLOSE L_FIRST_ME_AFTER_CURSOR;

   END ADDFIRSTMEAFTER;

   PROCEDURE SAVESCMETHODS IS

      L_MENODE_FOUND BOOLEAN;

   BEGIN
      ADDFIRSTMEAFTER;
      
      L_RET_CODE := UNAPIME.SAVESCMETHOD(UNAPIGEN.ALARMS_NOT_HANDLED, L_SVSCME_SC,
                              L_SVSCME_PG, L_SVSCME_PGNODE, L_SVSCME_PA,
                              L_SVSCME_PANODE, L_SVSCME_ME, L_SVSCME_MENODE, 
                              L_SVSCME_REANALYSIS, L_SVSCME_MT_VERSION, 
                              L_SVSCME_DESCRIPTION, L_SVSCME_VALUE_F,
                              L_SVSCME_VALUE_S, L_SVSCME_UNIT,
                              L_SVSCME_EXEC_START_DATE, L_SVSCME_EXEC_END_DATE,
                              L_SVSCME_EXECUTOR, L_SVSCME_LAB,
                              L_SVSCME_EQ, L_SVSCME_EQ_VERSION,
                              L_SVSCME_PLANNED_EXECUTOR, 
                              L_SVSCME_PLANNED_EQ, L_SVSCME_PLANNED_EQ_VERSION,
                              L_SVSCME_MANUALLY_ENTERED, L_SVSCME_ALLOW_ADD,
                              L_SVSCME_ASSIGN_DATE, L_SVSCME_ASSIGNED_BY,
                              L_SVSCME_MANUALLY_ADDED, L_SVSCME_DELAY,
                              L_SVSCME_DELAY_UNIT, L_SVSCME_FORMAT,
                              L_SVSCME_ACCURACY, L_SVSCME_REAL_COST, L_SVSCME_REAL_TIME,
                              L_SVSCME_CALIBRATION, L_SVSCME_CONFIRM_COMPLETE,
                              L_SVSCME_AUTORECALC, L_SVSCME_ME_RESULT_EDITABLE,
                              L_SVSCME_NEXT_CELL, L_SVSCME_SOP, L_SVSCME_SOP_VERSION,
                              L_SVSCME_PLAUS_LOW, L_SVSCME_PLAUS_HIGH,
                              L_SVSCME_WINSIZE_X, L_SVSCME_WINSIZE_Y, L_SVSCME_ME_CLASS,
                              L_SVSCME_LOG_HS, L_SVSCME_LOG_HS_DETAILS, 
                              L_SVSCME_LC, L_SVSCME_LC_VERSION,
                              L_SVSCME_MODIFY_FLAG,
                              L_SVSCME_NR_OF_ROWS, 'Handling method output');
      IF L_RET_CODE = UNAPIGEN.DBERR_PARTIALSAVE THEN
         UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_SUCCESS; 
      ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

       
      
      L_MENODE_FOUND := FALSE ;
      FOR L_ROW IN 1..L_SVSCME_NR_OF_ROWS LOOP
         IF L_SVSCME_ADDNODE_IN_BUFFER(L_ROW) = TRUE THEN
            IF NOT L_MENODE_FOUND THEN
               L_SAVE_MENODE := L_SVSCME_MENODE(L_ROW);
               L_MENODE_FOUND := TRUE;
            END IF;
            ADDNODE('me', L_SVSCME_PG(L_ROW), '', L_SVSCME_PGNODE(L_ROW), L_SVSCME_PA(L_ROW), '', L_SVSCME_PANODE(L_ROW), L_SVSCME_ME(L_ROW),  L_SVSCME_MT_VERSION(L_ROW), L_SVSCME_MENODE(L_ROW));
            
            IF L_SVSCME_OUTPUT(L_ROW).SAVE_TP IN ('mt','mtau') THEN
               
               IF L_SVSCME_MODIFY_FLAG(L_ROW) <= UNAPIGEN.DBERR_SUCCESS THEN
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PG := L_SVSCME_PG(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PGNODE := L_SVSCME_PGNODE(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PA := L_SVSCME_PA(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PANODE := L_SVSCME_PANODE(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
                  L_SVSCME_OUTPUT(L_ROW).SAVE_ME := L_SVSCME_ME(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_MENODE := L_SVSCME_MENODE(L_ROW);
                  L_SVSCME_OUTPUT(L_ROW).SAVE_MT_VERSION := L_SAVE_MT_VERSION;
                  L_SVSCME_OUTPUT(L_ROW).SAVE_REANALYSIS := L_SVSCME_REANALYSIS(L_ROW);

                  IF L_SVSCME_OUTPUT(L_ROW).SAVE_TP = 'mt' THEN
                     UPDATESAVEOUTPUT(L_SVSCME_OUTPUT(L_ROW));
                  END IF;

               END IF;   
            END IF;

         END IF;
      END LOOP;

      L_SVSCME_NR_OF_ROWS := 0;

   END SAVESCMETHODS;

   FUNCTION INTERNALSEARCHMTVERSIONINPRMT(A_PR IN VARCHAR2, A_PR_VERSION IN VARCHAR2, A_MT IN VARCHAR2)
   RETURN VARCHAR2 IS   

   L_MT_VERSION VARCHAR2(20);
   L_PR_VERSION VARCHAR2(20);

   CURSOR L_PRMT_CURSOR (A_PR IN VARCHAR2,A_PR_VERSION IN VARCHAR2, A_MT IN VARCHAR2) IS
   SELECT MT_VERSION
   FROM UTPRMT
   WHERE PR = A_PR
   AND VERSION = A_PR_VERSION
   AND MT = A_MT
   ORDER BY SEQ ASC;
   
   CURSOR L_PR_VERSION_CURSOR (A_SC IN VARCHAR2,A_PG IN VARCHAR2, A_PGNODE IN NUMBER,A_PA IN VARCHAR2, A_PANODE IN NUMBER) IS
   SELECT PR_VERSION
   FROM UTSCPA
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE;

   BEGIN
      L_MT_VERSION:=NULL;
      L_PR_VERSION:=A_PR_VERSION;
      IF L_PR_VERSION IS NULL THEN
         OPEN L_PR_VERSION_CURSOR(A_SC,L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE);
         FETCH L_PR_VERSION_CURSOR
         INTO L_PR_VERSION;
         CLOSE L_PR_VERSION_CURSOR;
      END IF;      
      OPEN L_PRMT_CURSOR(A_PR,L_PR_VERSION,A_MT);
      FETCH L_PRMT_CURSOR
      INTO L_MT_VERSION;
      CLOSE L_PRMT_CURSOR;           
      RETURN(UNAPIGEN.USEVERSION('mt', A_MT, L_MT_VERSION));   
   END INTERNALSEARCHMTVERSIONINPRMT;

   PROCEDURE INTERNALINITSCMETHOD(A_DIRECT_SAVE IN BOOLEAN,
                                  A_VALUE_F IN NUMBER, A_VALUE_S IN VARCHAR2, 
                                  A_UNIT IN VARCHAR2, A_FORMAT IN VARCHAR2,
                                  A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS    
   BEGIN
   
      L_INITSCME_NR_OF_ROWS := NULL;
      L_INITSCME_MT_NR_MEASUR := NULL;

      
      
      
      IF L_SAVE_MT_VERSION IS NULL THEN
         L_SAVE_MT_VERSION := NVL(INTERNALSEARCHMTVERSIONINPRMT(L_SAVE_PA, L_SAVE_PR_VERSION, L_SAVE_ME), UNAPIGEN.USEVERSION('mt', L_SAVE_ME, L_SAVE_MT_VERSION));
      END IF;

      IF L_SAVE_MT_VERSION IS NULL THEN
         L_RET_CODE := UNAPIGEN.DBERR_NOOBJECT;
      ELSE
         L_RET_CODE := UNAPIME.INITSCMETHOD(L_SAVE_ME, L_SAVE_MT_VERSION, NULL, A_SC, L_SAVE_PG, L_SAVE_PGNODE,
                                  L_SAVE_PA, L_SAVE_PANODE, L_SAVE_PR_VERSION,
                                  L_INITSCME_MT_NR_MEASUR, 
                                  L_INITSCME_REANALYSIS, L_INITSCME_MT_VERSION,
                                  L_INITSCME_DESCRIPTION,
                                  L_INITSCME_VALUE_F, L_INITSCME_VALUE_S, L_INITSCME_UNIT,
                                  L_INITSCME_EXEC_START_DATE, L_INITSCME_EXEC_END_DATE,
                                  L_INITSCME_EXECUTOR, L_INITSCME_LAB,
                                  L_INITSCME_EQ, L_INITSCME_EQ_VERSION,
 											 L_INITSCME_PLANNED_EXECUTOR,
                                  L_INITSCME_PLANNED_EQ, L_INITSCME_PLANNED_EQ_VERSION,
                                  L_INITSCME_MANUALLY_ENTERED, L_INITSCME_ALLOW_ADD,
                                  L_INITSCME_ASSIGN_DATE, L_INITSCME_ASSIGNED_BY,
                                  L_INITSCME_MANUALLY_ADDED, L_INITSCME_DELAY,
                                  L_INITSCME_DELAY_UNIT, L_INITSCME_FORMAT,
                                  L_INITSCME_ACCURACY,
                                  L_INITSCME_REAL_COST, L_INITSCME_REAL_TIME,
                                  L_INITSCME_CALIBRATION, L_INITSCME_CONFIRM_COMPLETE,
                                  L_INITSCME_AUTORECALC, L_INITSCME_ME_RESULT_EDITABLE,
                                  L_INITSCME_NEXT_CELL, L_INITSCME_SOP, L_INITSCME_SOP_VERSION, 
                                  L_INITSCME_PLAUS_LOW, L_INITSCME_PLAUS_HIGH, L_INITSCME_WINSIZE_X,
                                  L_INITSCME_WINSIZE_Y, L_INITSCME_ME_CLASS,
                                  L_INITSCME_LOG_HS, L_INITSCME_LOG_HS_DETAILS,
                                  L_INITSCME_LC, L_INITSCME_LC_VERSION, L_INITSCME_NR_OF_ROWS);
      END IF;
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         IF L_RET_CODE <> UNAPIGEN.DBERR_NOOBJECT THEN
            UNAPIGEN.P_TXN_ERROR  := L_RET_CODE;
            RAISE STPERROR;
         ELSE
            
            L_INITSCME_MT_VERSION(1) := UNVERSION.P_NO_VERSION;
            L_INITSCME_DESCRIPTION(1) := L_SAVE_ME;
            L_INITSCME_UNIT(1) := NULL;
            L_INITSCME_EXEC_START_DATE(1) := NULL;
            L_INITSCME_EXEC_END_DATE(1) := NULL;
            L_INITSCME_EXECUTOR(1) := NULL;
            L_INITSCME_LAB(1) := NULL;
            L_INITSCME_EQ(1) := NULL;
            L_INITSCME_EQ_VERSION(1) := NULL;
            L_INITSCME_PLANNED_EXECUTOR(1) := NULL;
            L_INITSCME_PLANNED_EQ(1) := NULL;
            L_INITSCME_PLANNED_EQ_VERSION(1) := NULL;
            L_INITSCME_MANUALLY_ENTERED(1) := '0';
            L_INITSCME_ALLOW_ADD(1) := '0';
            L_INITSCME_ASSIGN_DATE(1) := CURRENT_TIMESTAMP;
            L_INITSCME_ASSIGNED_BY(1) := UNAPIGEN.P_USER;
            L_INITSCME_MANUALLY_ADDED(1) := '0';
            L_INITSCME_DELAY(1) := 0;
            L_INITSCME_DELAY_UNIT(1) := 'DD';
            L_INITSCME_FORMAT(1) := NULL;
            L_INITSCME_ACCURACY(1) := NULL;
            L_INITSCME_REAL_COST(1) := NULL;
            L_INITSCME_REAL_TIME(1) := NULL;
            L_INITSCME_CALIBRATION(1) := '0';
            L_INITSCME_CONFIRM_COMPLETE(1) := '0';
            L_INITSCME_AUTORECALC(1) := '0';
            L_INITSCME_ME_RESULT_EDITABLE(1) := '1';
            L_INITSCME_NEXT_CELL(1) := NULL;
            L_INITSCME_SOP(1) := NULL;
            L_INITSCME_SOP_VERSION(1) := NULL;
            L_INITSCME_PLAUS_LOW(1) := NULL;
            L_INITSCME_PLAUS_HIGH(1) := NULL;
            L_INITSCME_WINSIZE_X(1) := NULL;
            L_INITSCME_WINSIZE_Y(1) := NULL;
            L_INITSCME_ME_CLASS(1) := NULL;
            L_INITSCME_LC(1) := NULL;
            L_INITSCME_LC_VERSION(1) := NULL;
            L_INITSCME_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_INSERT;
            L_INITSCME_NR_OF_ROWS := 1;
            L_INITSCME_REANALYSIS(1) := 0;
            IF L_DEFAULT_LOG_HS4ME IS NULL OR
               L_DEFAULT_LOG_HS_DETAILS4ME IS NULL THEN
               OPEN L_OBJECTS_CURSOR('me');
               FETCH L_OBJECTS_CURSOR
               INTO L_DEFAULT_LOG_HS4ME, L_DEFAULT_LOG_HS_DETAILS4ME;
               IF L_OBJECTS_CURSOR%NOTFOUND THEN
                                    UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_GENFAIL;
                                    L_SQLERRM := 'No defaults defined for me';
                                    RAISE STPERROR;                  
               END IF;
               CLOSE L_OBJECTS_CURSOR;
            END IF;
            L_INITSCME_LOG_HS(1) := L_DEFAULT_LOG_HS4ME;
            L_INITSCME_LOG_HS_DETAILS(1) := L_DEFAULT_LOG_HS_DETAILS4ME;                        
         END IF;
      END IF;

      
      
      
      
      
      
      IF L_INITSCME_NR_OF_ROWS > 1 THEN
         L_INITSCME_NR_OF_ROWS := 1;
      END IF;

      
      L_SVSCME_NR_OF_ROWS := L_SVSCME_NR_OF_ROWS + 1;

      L_SVSCME_SC(L_SVSCME_NR_OF_ROWS) := A_SC;
      L_SVSCME_PG(L_SVSCME_NR_OF_ROWS) := L_SAVE_PG;
      L_SVSCME_PGNODE(L_SVSCME_NR_OF_ROWS) := L_SAVE_PGNODE;
      L_SVSCME_PA(L_SVSCME_NR_OF_ROWS) := L_SAVE_PA;
      L_SVSCME_PANODE(L_SVSCME_NR_OF_ROWS) := L_SAVE_PANODE;
      L_SVSCME_ME(L_SVSCME_NR_OF_ROWS) := L_SAVE_ME;
      L_SVSCME_MENODE(L_SVSCME_NR_OF_ROWS) := NULL;
      L_SVSCME_REANALYSIS(L_SVSCME_NR_OF_ROWS) := L_INITSCME_REANALYSIS(1) ;
      L_SVSCME_MODIFY_FLAG(L_SVSCME_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_AND_CRAU;
      L_SVSCME_ADDNODE_IN_BUFFER(L_SVSCME_NR_OF_ROWS) := TRUE;

      
      
      
      L_RET_CODE := UNAPIGEN.TRANSFORMRESULT(A_VALUE_S,
                                             A_VALUE_F,      
                                             A_UNIT,
                                             A_FORMAT,    
                                             L_SVSCME_VALUE_S(L_SVSCME_NR_OF_ROWS),    
                                             L_SVSCME_VALUE_F(L_SVSCME_NR_OF_ROWS),  
                                             L_INITSCME_UNIT(1),    
                                             L_INITSCME_FORMAT(1));
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      
      GETNODE('me', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, '', L_SAVE_PANODE, L_SAVE_ME, L_INITSCME_MT_VERSION(1), '', L_SAVE_MENODE);
      IF L_SAVE_MENODE IS NOT NULL THEN
         L_SVSCME_MENODE(L_SVSCME_NR_OF_ROWS) := L_SAVE_MENODE;
         L_SVSCME_MODIFY_FLAG(L_SVSCME_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;
      END IF;
      IF A_DIRECT_SAVE = TRUE AND 
         L_SVSCME_MENODE(L_SVSCME_NR_OF_ROWS) IS NULL THEN
         
         
         
         
         
         
         
         
         
         
         
         
         IF A_SC||'#'||L_SVSCME_PG(L_SVSCME_NR_OF_ROWS)||'#'||L_SVSCME_PGNODE(L_SVSCME_NR_OF_ROWS)||
            L_SVSCME_PA(L_SVSCME_NR_OF_ROWS)||'#'||L_SVSCME_PANODE(L_SVSCME_NR_OF_ROWS)=
            L_DIRECT_SAVE_LAST_MECONTEXT THEN
            IF L_DIRECT_SAVE_LAST_MENODE IS NULL THEN
               
               L_DIRECT_SAVE_LAST_MENODE := L_SVSCME_MENODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            ELSE
               L_DIRECT_SAVE_LAST_MENODE := L_DIRECT_SAVE_LAST_MENODE+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
               
            END IF;
         ELSE
            
            L_DIRECT_SAVE_LAST_MENODE := L_SVSCME_MENODE(1)+UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            L_DIRECT_SAVE_LAST_MECONTEXT := A_SC||'#'||L_SVSCME_PG(L_SVSCME_NR_OF_ROWS)||'#'||L_SVSCME_PGNODE(L_SVSCME_NR_OF_ROWS)||
                                            L_SVSCME_PA(L_SVSCME_NR_OF_ROWS)||'#'||L_SVSCME_PANODE(L_SVSCME_NR_OF_ROWS);
            
         END IF;
            
         
         LOOP
            SELECT COUNT(*)
            INTO L_COUNT_ME
            FROM UTSCME
            WHERE SC = A_SC
            AND PG = L_SVSCME_PG(L_SVSCME_NR_OF_ROWS)
            AND PGNODE = L_SVSCME_PGNODE(L_SVSCME_NR_OF_ROWS)
            AND PA = L_SVSCME_PA(L_SVSCME_NR_OF_ROWS)
            AND PANODE = L_SVSCME_PANODE(L_SVSCME_NR_OF_ROWS)
            AND MENODE = L_DIRECT_SAVE_LAST_MENODE;
            
            IF L_COUNT_ME = 0 THEN
               
               EXIT;
            ELSE
               
               
               
               L_DIRECT_SAVE_LAST_MENODE := L_DIRECT_SAVE_LAST_MENODE + UNAPIME5.CELLOUTPUT_NODE_INTERVAL;
            END IF;
         END LOOP;       
         L_SVSCME_MENODE(L_SVSCME_NR_OF_ROWS) := L_DIRECT_SAVE_LAST_MENODE;
         L_SVSCME_MODIFY_FLAG(L_SVSCME_NR_OF_ROWS) := UNAPIGEN.MOD_FLAG_INSERT_NODES_AND_CRAU;
      END IF;

      L_SVSCME_MT_VERSION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_MT_VERSION(1) ;
      L_SVSCME_DESCRIPTION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_DESCRIPTION(1) ;
      L_SVSCME_UNIT(L_SVSCME_NR_OF_ROWS) := L_INITSCME_UNIT(1) ;
      L_SVSCME_EXEC_START_DATE(L_SVSCME_NR_OF_ROWS) := L_INITSCME_EXEC_START_DATE(1) ;
      L_SVSCME_EXEC_END_DATE(L_SVSCME_NR_OF_ROWS) := L_INITSCME_EXEC_END_DATE(1) ;
      L_SVSCME_EXECUTOR(L_SVSCME_NR_OF_ROWS) := L_INITSCME_EXECUTOR(1) ;
      L_SVSCME_LAB(L_SVSCME_NR_OF_ROWS) := L_INITSCME_LAB(1) ;
      L_SVSCME_EQ(L_SVSCME_NR_OF_ROWS) := L_INITSCME_EQ(1) ;
      L_SVSCME_EQ_VERSION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_EQ_VERSION(1) ;
      L_SVSCME_PLANNED_EXECUTOR(L_SVSCME_NR_OF_ROWS) := L_INITSCME_PLANNED_EXECUTOR(1) ;
      L_SVSCME_PLANNED_EQ(L_SVSCME_NR_OF_ROWS) := L_INITSCME_PLANNED_EQ(1) ;
      L_SVSCME_PLANNED_EQ_VERSION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_PLANNED_EQ_VERSION(1) ;
      L_SVSCME_MANUALLY_ENTERED(L_SVSCME_NR_OF_ROWS) := L_INITSCME_MANUALLY_ENTERED(1) ;
      L_SVSCME_ALLOW_ADD(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ALLOW_ADD(1) ;
      L_SVSCME_ASSIGN_DATE(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ASSIGN_DATE(1) ;
      L_SVSCME_ASSIGNED_BY(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ASSIGNED_BY(1) ;
      L_SVSCME_MANUALLY_ADDED(L_SVSCME_NR_OF_ROWS) := L_INITSCME_MANUALLY_ADDED(1) ;
      L_SVSCME_DELAY(L_SVSCME_NR_OF_ROWS) := L_INITSCME_DELAY(1) ;
      L_SVSCME_DELAY_UNIT(L_SVSCME_NR_OF_ROWS) := L_INITSCME_DELAY_UNIT(1) ;
      L_SVSCME_FORMAT(L_SVSCME_NR_OF_ROWS) := L_INITSCME_FORMAT(1) ;
      L_SVSCME_ACCURACY(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ACCURACY(1) ;
      L_SVSCME_REAL_COST(L_SVSCME_NR_OF_ROWS) := L_INITSCME_REAL_COST(1) ;
      L_SVSCME_REAL_TIME(L_SVSCME_NR_OF_ROWS) := L_INITSCME_REAL_TIME(1) ;
      L_SVSCME_CALIBRATION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_CALIBRATION(1) ;
      L_SVSCME_CONFIRM_COMPLETE(L_SVSCME_NR_OF_ROWS) := L_INITSCME_CONFIRM_COMPLETE(1) ;
      L_SVSCME_AUTORECALC(L_SVSCME_NR_OF_ROWS) := L_INITSCME_AUTORECALC(1) ;
      L_SVSCME_ME_RESULT_EDITABLE(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ME_RESULT_EDITABLE(1) ;
      L_SVSCME_NEXT_CELL(L_SVSCME_NR_OF_ROWS) := L_INITSCME_NEXT_CELL(1) ;
      L_SVSCME_SOP(L_SVSCME_NR_OF_ROWS) := L_INITSCME_SOP(1) ;
      L_SVSCME_SOP_VERSION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_SOP_VERSION(1) ;
      L_SVSCME_PLAUS_LOW(L_SVSCME_NR_OF_ROWS) := L_INITSCME_PLAUS_LOW(1) ;
      L_SVSCME_PLAUS_HIGH(L_SVSCME_NR_OF_ROWS) := L_INITSCME_PLAUS_HIGH(1) ;
      L_SVSCME_WINSIZE_X(L_SVSCME_NR_OF_ROWS) := L_INITSCME_WINSIZE_X(1) ;
      L_SVSCME_WINSIZE_Y(L_SVSCME_NR_OF_ROWS) := L_INITSCME_WINSIZE_Y(1) ;
      L_SVSCME_ME_CLASS(L_SVSCME_NR_OF_ROWS) := L_INITSCME_ME_CLASS(1) ;
      L_SVSCME_LOG_HS(L_SVSCME_NR_OF_ROWS) := L_INITSCME_LOG_HS(1) ;
      L_SVSCME_LOG_HS_DETAILS(L_SVSCME_NR_OF_ROWS) := L_INITSCME_LOG_HS_DETAILS(1) ;
      L_SVSCME_LC(L_SVSCME_NR_OF_ROWS) := L_INITSCME_LC(1) ;
      L_SVSCME_LC_VERSION(L_SVSCME_NR_OF_ROWS) := L_INITSCME_LC_VERSION(1) ;
      
      
      L_SVSCME_OUTPUT(L_SVSCME_NR_OF_ROWS) := A_RES_OUTPUT;


   END INTERNALINITSCMETHOD;

   
   PROCEDURE INITANDSAVEMETHOD(A_VALUE_F IN NUMBER,A_VALUE_S IN VARCHAR2, 
                               A_UNIT IN VARCHAR2, A_FORMAT IN VARCHAR2,
                               A_DIRECT_SAVE IN BOOLEAN, A_RES_OUTPUT IN CELLOUTPUT_TYPE) IS
   BEGIN
      
      
      
      
      
      IF A_DIRECT_SAVE THEN
         IF L_SVSCME_NR_OF_ROWS > 0 THEN
            SAVESCMETHODS;
            L_PREVIOUS_SAVESCME_PG := NULL;
            L_PREVIOUS_SAVESCME_PGNODE := 0;
            L_PREVIOUS_SAVESCME_PA := NULL;
            L_PREVIOUS_SAVESCME_PANODE := 0;
         END IF;
      ELSE
         IF L_SAVE_PG <> NVL(L_PREVIOUS_SAVESCME_PG, ' ') OR
            L_SAVE_PGNODE <> NVL(L_PREVIOUS_SAVESCME_PGNODE, 0) OR
            L_SAVE_PA <> NVL(L_PREVIOUS_SAVESCME_PA, ' ') OR
            L_SAVE_PANODE <> NVL(L_PREVIOUS_SAVESCME_PANODE, 0) THEN
            IF L_SVSCME_NR_OF_ROWS > 0 THEN
               SAVESCMETHODS;
               L_PREVIOUS_SAVESCME_PG := NULL;
               L_PREVIOUS_SAVESCME_PGNODE := 0;
               L_PREVIOUS_SAVESCME_PA := NULL;
               L_PREVIOUS_SAVESCME_PANODE := 0;
            END IF;
         END IF;
      END IF;

      
      
      
      IF L_SVSCME_NR_OF_ROWS = 0 THEN
          L_SVSCME_NR_OF_ROWS := 1;
          L_SVSCME_SC(1) := A_SC;
          L_SVSCME_PG(1) :=  A_PG ;
          L_SVSCME_PGNODE(1) :=  A_PGNODE ;         
          L_SVSCME_PA(1) :=  A_PA ;
          L_SVSCME_PANODE(1) :=  A_PANODE ;         
          L_SVSCME_ME(1) :=  A_ME ;
          L_SVSCME_MENODE(1) :=  A_MENODE ;         
          L_SVSCME_REANALYSIS(1) :=  A_REANALYSIS ;         
          L_SVSCME_MODIFY_FLAG(1) := UNAPIGEN.DBERR_SUCCESS;
          L_SVSCME_ADDNODE_IN_BUFFER(1) := FALSE;
      END IF;

      
      INTERNALINITSCMETHOD(A_DIRECT_SAVE, A_VALUE_F, A_VALUE_S, A_UNIT, A_FORMAT, A_RES_OUTPUT);

      IF A_DIRECT_SAVE THEN
         SAVESCMETHODS;     
         L_PREVIOUS_SAVESCME_PG := NULL;
         L_PREVIOUS_SAVESCME_PGNODE := 0;
         L_PREVIOUS_SAVESCME_PA := NULL;
         L_PREVIOUS_SAVESCME_PANODE := 0;
      ELSE
         L_PREVIOUS_SAVESCME_PG := L_SAVE_PG;
         L_PREVIOUS_SAVESCME_PGNODE := L_SAVE_PGNODE;
         L_PREVIOUS_SAVESCME_PA := L_SAVE_PA;
         L_PREVIOUS_SAVESCME_PANODE := L_SAVE_PANODE;
      END IF;
            
   END INITANDSAVEMETHOD;

   
   PROCEDURE FLUSHSAVEMETHODS IS
   BEGIN
      
      IF L_SVSCME_NR_OF_ROWS > 0 THEN
         SAVESCMETHODS;
      END IF;
   END FLUSHSAVEMETHODS;

BEGIN
   
   IF UNAPIGEN.BEGINTXN(UNAPIGEN.P_SINGLE_API_TXN) <> UNAPIGEN.DBERR_SUCCESS THEN
      RAISE STPERROR;
   END IF;

   L_IGNORED_RET_CODE := UNAPIAUT.GETARCHECKMODE(L_ORIG_AR_CHECK_MODE);
   
   L_IGNORED_RET_CODE := UNAPIAUT.DISABLEARCHECK('1');
   
   
   
   
   IF NVL(A_SC, ' ') = ' ' OR
      NVL(A_PG, ' ') = ' ' OR
      NVL(A_PGNODE, 0) = 0 OR
      NVL(A_PA, ' ') = ' ' OR
      NVL(A_PANODE, 0) = 0 OR
      NVL(A_ME, ' ') = ' ' OR
      NVL(A_MENODE, 0) = 0 OR
      A_REANALYSIS IS NULL THEN
      UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOOBJID;
      RAISE STPERROR;
   END IF;

   
   L_CURRENT_TIMESTAMP := CURRENT_TIMESTAMP;
   L_SQLERRM := NULL;
   L_PREVIOUS_SAVE_TP := '  ';
   L_HS_DETAILS_SEQ_NR := 0;

   
   L_SVSCPG_NR_OF_ROWS := 0;
   L_SVSCPA_NR_OF_ROWS := 0;
   L_SVSCME_NR_OF_ROWS := 0;
   L_SVME_PROP_ENDDATE_UPDATED := FALSE;
   
   
   REMOVEALLNODESFROMBUFFER;

   L_RET_CODE := UNAPIGEN.GETNEXTEVENTSEQNR(L_EV_SEQ_NR);
   IF L_RET_CODE <> 0 THEN
      UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
      RAISE STPERROR;
   END IF;

   
   
   
   SELECT LOG_HS_DETAILS, LAB, EQ, EQ_VERSION, PLANNED_EQ, PLANNED_EQ_VERSION, MT_VERSION
   INTO L_LOG_HS_DETAILS, L_ME_LAB, L_ME_EQ, L_ME_EQ_VERSION, L_ME_PLANNED_EQ, L_ME_PLANNED_EQ_VERSION, L_ME_MT_VERSION
   FROM UTSCME
   WHERE SC = A_SC 
     AND PG = A_PG
     AND PGNODE = A_PGNODE
     AND PA = A_PA
     AND PANODE = A_PANODE
     AND ME = A_ME
     AND MENODE = A_MENODE;

   
   
   SELECT PP_VERSION
   INTO L_CURRENT_ME_PP_VERSION
   FROM UTSCPG
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE;

   SELECT PR_VERSION
   INTO L_CURRENT_ME_PR_VERSION
   FROM UTSCPA
   WHERE SC = A_SC
   AND PG = A_PG
   AND PGNODE = A_PGNODE
   AND PA = A_PA
   AND PANODE = A_PANODE;
   
   ADDNODE('pg', A_PG, L_CURRENT_ME_PP_VERSION, A_PGNODE, '', '', '', '', '', '');
   ADDNODE('pa', A_PG, '', A_PGNODE, A_PA, L_CURRENT_ME_PR_VERSION, A_PANODE, '', '', '');
   ADDNODE('me', A_PG, '', A_PGNODE, A_PA, '', A_PANODE, A_ME, L_ME_MT_VERSION, A_MENODE);

   
   
   
   FOR L_MECELLOUTPUT_REC IN L_MECELLOUTPUT_CURSOR LOOP
   BEGIN
      
      IF L_PREVIOUS_SAVE_TP <> L_MECELLOUTPUT_REC.SAVE_TP THEN
         FLUSHSAVEPARAMETERGROUPS;
         FLUSHSAVEPARAMETERS;
         FLUSHSAVEMETHODS;
         L_PREVIOUS_SAVE_TP := L_MECELLOUTPUT_REC.SAVE_TP;
      END IF;

      
      
      
      
      L_SAVE_PG := NVL(L_MECELLOUTPUT_REC.SAVE_PG, '~Current~');
      L_RET_CODE := UNAPIME2.SUBSTITUTE_TILDES(A_SC,A_PG,A_PA,A_ME,L_MECELLOUTPUT_REC.CELL,L_SAVE_PG, 'pg');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      L_SAVE_PA := NVL(L_MECELLOUTPUT_REC.SAVE_PA, '~Current~');
      L_RET_CODE := UNAPIME2.SUBSTITUTE_TILDES(A_SC,A_PG,A_PA,A_ME,L_MECELLOUTPUT_REC.CELL,L_SAVE_PA, 'pa');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      L_SAVE_ME := NVL(L_MECELLOUTPUT_REC.SAVE_ME, '~Current~');
      L_RET_CODE := UNAPIME2.SUBSTITUTE_TILDES(A_SC,A_PG,A_PA,A_ME,L_MECELLOUTPUT_REC.CELL,L_SAVE_ME, 'me');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      L_SAVE_EQ := L_MECELLOUTPUT_REC.SAVE_EQ;
      L_RET_CODE := UNAPIME2.SUBSTITUTE_TILDES(A_SC,A_PG,A_PA,A_ME,L_MECELLOUTPUT_REC.CELL,L_SAVE_EQ, 'eq');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;
      
      
      
      
      
      
      IF NVL(L_SAVE_EQ, '-')  = '-' THEN
         IF NVL(L_MECELLOUTPUT_REC.EQ, '-')  <> '-' THEN
            L_SAVE_EQ := L_MECELLOUTPUT_REC.EQ; 
         ELSE
            L_SAVE_EQ := NULL; 
         END IF;         
      END IF;      

      L_SAVE_ID := L_MECELLOUTPUT_REC.SAVE_ID;
      L_RET_CODE := UNAPIME2.SUBSTITUTE_TILDES(A_SC,A_PG,A_PA,A_ME,L_MECELLOUTPUT_REC.CELL,L_SAVE_ID, 'id');
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
         RAISE STPERROR;
      END IF;

      
      
      
      L_RES_NR_VALUES := 0;
      IF L_MECELLOUTPUT_REC.CELL_TP NOT IN ('T', 'L') THEN
         L_RES_NR_VALUES := 1;
         L_RES_VALUE_F(1) := L_MECELLOUTPUT_REC.VALUE_F;
         L_RES_VALUE_S(1) := L_MECELLOUTPUT_REC.VALUE_S;
         L_RES_OBJECT_ID(1) := NULL;
         
      ELSIF L_MECELLOUTPUT_REC.CELL_TP = 'L' THEN
         OPEN L_MECELLLIST_L_CURSOR(L_MECELLOUTPUT_REC.CELL);
         FETCH L_MECELLLIST_L_CURSOR
         INTO L_MECELLLIST_L_REC;
         WHILE L_MECELLLIST_L_CURSOR%FOUND LOOP
            L_RES_VALUE_F(L_RES_NR_VALUES+1) := L_MECELLLIST_L_REC.VALUE_F;
            L_RES_VALUE_S(L_RES_NR_VALUES+1) := L_MECELLLIST_L_REC.VALUE_S;
            L_RES_OBJECT_ID(L_RES_NR_VALUES+1) := NULL;
            L_RES_INDEX_Y(L_RES_NR_VALUES+1) := L_MECELLLIST_L_REC.INDEX_Y;
            L_RES_NR_VALUES := L_RES_NR_VALUES + 1 ;
            FETCH L_MECELLLIST_L_CURSOR
            INTO L_MECELLLIST_L_REC;
         END LOOP;
         CLOSE L_MECELLLIST_L_CURSOR;
      ELSIF L_MECELLOUTPUT_REC.CELL_TP = 'T' THEN
         OPEN L_MECELLLIST_T_CURSOR(L_MECELLOUTPUT_REC.CELL);
         FETCH L_MECELLLIST_T_CURSOR
         INTO L_MECELLLIST_T_REC;
         WHILE L_MECELLLIST_T_CURSOR%FOUND LOOP
            L_RES_VALUE_F(L_RES_NR_VALUES+1) := L_MECELLLIST_T_REC.VALUE_F;
            L_RES_VALUE_S(L_RES_NR_VALUES+1) := L_MECELLLIST_T_REC.VALUE_S;
            L_RES_OBJECT_ID(L_RES_NR_VALUES+1) := L_MECELLLIST_T_REC.OBJECT_ID;
            L_RES_INDEX_Y(L_RES_NR_VALUES+1) := L_MECELLLIST_T_REC.INDEX_Y;
            IF NVL(L_MECELLLIST_T_REC.OBJECT_ID, ' ') = ' ' THEN
               CLOSE L_MECELLLIST_T_CURSOR;
               UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOOBJID;
               RAISE STPERROR;
            END IF;
            L_RES_NR_VALUES := L_RES_NR_VALUES + 1 ;
            FETCH L_MECELLLIST_T_CURSOR
            INTO L_MECELLLIST_T_REC;
         END LOOP;
         CLOSE L_MECELLLIST_T_CURSOR;
      END IF;

      
      
      
      
      
      
      
      L_SAVE_PGNODE := L_MECELLOUTPUT_REC.SAVE_PGNODE;
      L_SAVE_PANODE := L_MECELLOUTPUT_REC.SAVE_PANODE;
      L_SAVE_MENODE := L_MECELLOUTPUT_REC.SAVE_MENODE;
      L_SAVE_IDNODE := L_MECELLOUTPUT_REC.SAVE_IDNODE;

      
      IF L_SAVE_PGNODE IS NULL THEN
         IF L_MECELLOUTPUT_REC.SAVE_TP IN ('ppau', 'pr','prau', 'mt', 'mtau', 'me', 'rd') THEN
            
            
            
            GETNODE('pg', L_SAVE_PG, L_MECELLOUTPUT_REC.SAVE_PP_VERSION, '', '', '', '', '', '', '', L_SAVE_PGNODE); 
            IF L_SAVE_PGNODE IS NULL THEN
               OPEN L_FINDPGNODE_CURSOR;
               FETCH L_FINDPGNODE_CURSOR 
               INTO L_SAVE_PGNODE;
               CLOSE L_FINDPGNODE_CURSOR;
               IF L_SAVE_PGNODE IS NULL THEN
                  IF L_SAVE_PG = '/' THEN 
                     L_SAVE_PGNODE := 0;
                  ELSE
                     
                     IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pr','prau', 'mt', 'mtau', 'me', 'rd') THEN
                        
                        IF TO_NUMBER(L_MECELLOUTPUT_REC.CREATE_NEW) < 3 THEN
                           
                           RAISE LOCALEXCEPTION;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      END IF;
      
      
      IF L_SAVE_PANODE IS NULL THEN
         IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pr','prau', 'mt', 'mtau', 'me', 'rd') THEN
            
            
            
            GETNODE('pa', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, L_MECELLOUTPUT_REC.SAVE_PR_VERSION, '', '', '', '', L_SAVE_PANODE); 
            IF L_SAVE_PANODE IS NULL THEN
               IF L_RES_NR_VALUES = 1 OR
                  L_MECELLOUTPUT_REC.SAVE_TP <> 'pr' THEN 
                  IF L_SAVE_PG = A_PG AND L_SAVE_PA = A_PA THEN
                     L_SAVE_PANODE := A_PANODE;
                  ELSE
                     OPEN L_FINDPANODE_CURSOR;
                     FETCH L_FINDPANODE_CURSOR 
                     INTO L_SAVE_PANODE;
                     CLOSE L_FINDPANODE_CURSOR;
                     
                     IF L_SAVE_PANODE IS NULL AND
                        L_MECELLOUTPUT_REC.SAVE_TP IN ('mt', 'mtau', 'me', 'rd') THEN
                        
                        IF TO_NUMBER(L_MECELLOUTPUT_REC.CREATE_NEW) < 2 THEN
                           
                           RAISE LOCALEXCEPTION;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      END IF;
      
      
      IF L_SAVE_MENODE IS NULL THEN
         IF L_MECELLOUTPUT_REC.SAVE_TP IN ('mt', 'mtau', 'me', 'rd') THEN
            
            
            
            GETNODE('me', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, '', L_SAVE_PANODE, L_SAVE_ME, L_MECELLOUTPUT_REC.SAVE_MT_VERSION, '', L_SAVE_MENODE); 
            IF L_SAVE_MENODE IS NULL THEN
               IF L_RES_NR_VALUES = 1 OR
                  L_MECELLOUTPUT_REC.SAVE_TP NOT IN ('mt', 'me') THEN 
                  IF L_SAVE_PG = A_PG AND L_SAVE_PA = A_PA AND L_SAVE_ME = A_ME THEN
                     L_SAVE_MENODE := A_MENODE;
                  ELSE
                     OPEN L_FINDMENODE_CURSOR;
                     FETCH L_FINDMENODE_CURSOR 
                     INTO L_SAVE_MENODE;
                     CLOSE L_FINDMENODE_CURSOR;
                     
                     IF L_SAVE_MENODE IS NULL AND
                        L_MECELLOUTPUT_REC.SAVE_TP = 'rd' THEN
                        
                        IF TO_NUMBER(L_MECELLOUTPUT_REC.CREATE_NEW) < 1 THEN
                           
                           RAISE LOCALEXCEPTION;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      END IF;

      
      
      
      
      
      






      L_SAVE_PP_VERSION := L_MECELLOUTPUT_REC.SAVE_PP_VERSION;
      L_SAVE_PR_VERSION := L_MECELLOUTPUT_REC.SAVE_PR_VERSION;
      L_SAVE_MT_VERSION := L_MECELLOUTPUT_REC.SAVE_MT_VERSION;
      L_SAVE_EQ_VERSION := NVL(L_MECELLOUTPUT_REC.SAVE_EQ_VERSION,
                               UNAPIGEN.USEVERSION('eq', L_SAVE_EQ, '~Current~'));

      
      ADDNODE ('pg', L_SAVE_PG, L_SAVE_PP_VERSION, L_SAVE_PGNODE, '', '', '', '', '', '');
      ADDNODE ('pa', L_SAVE_PG,                '', L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PR_VERSION, L_SAVE_PANODE, '', '', '');
      ADDNODE ('me', L_SAVE_PG,                '', L_SAVE_PGNODE, L_SAVE_PA,                '', L_SAVE_PANODE, L_SAVE_ME, L_SAVE_MT_VERSION, L_SAVE_MENODE);
      

      
      
      
      
      
      
      
      
      
      
      IF L_MECELLOUTPUT_REC.CELL_TP NOT IN ('T', 'L') THEN
      
         L_RES_OUTPUT(1).CELL := L_MECELLOUTPUT_REC.CELL;
         L_RES_OUTPUT(1).CELL_TP := L_MECELLOUTPUT_REC.CELL_TP;
         L_RES_OUTPUT(1).SAVE_TP := L_MECELLOUTPUT_REC.SAVE_TP;
         L_RES_OUTPUT(1).SAVE_PG := L_SAVE_PG;
         L_RES_OUTPUT(1).SAVE_PGNODE := L_SAVE_PGNODE;
         L_RES_OUTPUT(1).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
         L_RES_OUTPUT(1).SAVE_PA := L_SAVE_PA;
         L_RES_OUTPUT(1).SAVE_PANODE := L_SAVE_PANODE;
         L_RES_OUTPUT(1).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
         L_RES_OUTPUT(1).SAVE_ME := L_SAVE_ME;
         L_RES_OUTPUT(1).SAVE_MENODE := L_SAVE_MENODE;
         L_RES_OUTPUT(1).SAVE_MT_VERSION := L_SAVE_MT_VERSION;
         L_RES_OUTPUT(1).SAVE_REANALYSIS := L_MECELLOUTPUT_REC.SAVE_REANALYSIS;
         L_RES_OUTPUT(1).SAVE_EQ := L_SAVE_EQ;
         L_RES_OUTPUT(1).SAVE_EQ_VERSION := L_SAVE_EQ_VERSION;
         L_RES_OUTPUT(1).SAVE_ID := L_SAVE_ID;
         L_RES_OUTPUT(1).SAVE_IDNODE := L_SAVE_IDNODE;
         L_RES_OUTPUT(1).INDEX_Y := 0;
         L_RES_OUTPUT(1).CREATE_NEW := L_MECELLOUTPUT_REC.CREATE_NEW;
         
      ELSE
         FOR L_RES_IDX IN 1..L_RES_NR_VALUES LOOP

            OPEN L_MECELLLISTOUTPUT_CURSOR(L_MECELLOUTPUT_REC.CELL, L_RES_INDEX_Y(L_RES_IDX));
            FETCH L_MECELLLISTOUTPUT_CURSOR
            INTO L_MECELLLISTOUTPUT_REC;

            L_RES_OUTPUT(L_RES_IDX).CELL := L_MECELLOUTPUT_REC.CELL;
            L_RES_OUTPUT(L_RES_IDX).CELL_TP := L_MECELLOUTPUT_REC.CELL_TP;
            L_RES_OUTPUT(L_RES_IDX).SAVE_TP := L_MECELLOUTPUT_REC.SAVE_TP;
            L_RES_OUTPUT(L_RES_IDX).INDEX_Y := L_RES_INDEX_Y(L_RES_IDX);
            L_RES_OUTPUT(L_RES_IDX).CREATE_NEW := L_MECELLOUTPUT_REC.CREATE_NEW;
            L_RES_OUTPUT(L_RES_IDX).SAVE_REANALYSIS := NULL;

            IF L_MECELLLISTOUTPUT_CURSOR%NOTFOUND THEN

               IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pp') THEN
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PG := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := NULL;
               ELSE
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PG := L_SAVE_PG;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := L_SAVE_PGNODE;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
               END IF;

               IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pp', 'ppau', 'pr') THEN
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PA := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := NULL;
               ELSE
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PA := L_SAVE_PA;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := L_SAVE_PANODE;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
               END IF;

               IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pp', 'ppau', 'pr', 'prau', 'mt') THEN
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ME := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_MT_VERSION := NULL;
               ELSE
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ME := L_SAVE_ME;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE := L_SAVE_MENODE;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_MT_VERSION := L_SAVE_MT_VERSION;
               END IF;               
               
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ := L_SAVE_EQ;
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ_VERSION := L_SAVE_EQ_VERSION;
               
               IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pp', 'ppau', 'pr', 'prau', 'mt', 'mtau', 'rd', 'me', 'eqct') THEN
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ID := NULL;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE := NULL;
               ELSE
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
                  L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE := L_SAVE_IDNODE;
               END IF;
               
            ELSE

               L_RES_OUTPUT(L_RES_IDX).SAVE_PG := L_MECELLLISTOUTPUT_REC.SAVE_PG;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := L_MECELLLISTOUTPUT_REC.SAVE_PGNODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PA := L_MECELLLISTOUTPUT_REC.SAVE_PA;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := L_MECELLLISTOUTPUT_REC.SAVE_PANODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_ME := L_MECELLLISTOUTPUT_REC.SAVE_ME;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE := L_MECELLLISTOUTPUT_REC.SAVE_MENODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MT_VERSION := L_SAVE_MT_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_REANALYSIS := L_MECELLLISTOUTPUT_REC.SAVE_REANALYSIS;
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ := L_MECELLLISTOUTPUT_REC.SAVE_EQ;
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ_VERSION := L_SAVE_EQ_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_MECELLLISTOUTPUT_REC.SAVE_ID;
               L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE := L_MECELLLISTOUTPUT_REC.SAVE_IDNODE;

            END IF;
            CLOSE L_MECELLLISTOUTPUT_CURSOR;
         END LOOP;
      END IF;

      
      
      
      
      
      
      

      IF L_MECELLOUTPUT_REC.SAVE_TP IN ('pp', 'eqau') THEN
         UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOTIMPLEMENTED;
         RAISE STPERROR;

      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'eqct' THEN

         IF NVL(L_SAVE_EQ, '-') = '-' THEN
            IF NVL(L_ME_EQ, '-') <> '-' THEN
               
               
               SELECT MAX(DECODE(EQTP.EQ, L_ME_EQ, L_ME_EQ, NULL)) SAVE_EQ
               INTO L_SAVE_EQ
               FROM UTEQTYPE EQTP, UTMTCELLEQTYPE MTCEEQTP
               WHERE MTCEEQTP.MT = A_ME
               AND MTCEEQTP.VERSION = L_ME_MT_VERSION
               AND MTCEEQTP.CELL = L_MECELLOUTPUT_REC.CELL
               AND MTCEEQTP.EQ_TP = EQTP.EQ_TP
               AND EQTP.LAB = NVL(L_ME_LAB, '-');                                    
            ELSIF NVL(L_ME_PLANNED_EQ, '-') <> '-' THEN
               
               L_SAVE_EQ := L_ME_PLANNED_EQ;
            END IF;           
            IF L_SAVE_EQ IS NOT NULL THEN
               L_SAVE_EQ_VERSION := UNAPIGEN.USEVERSION('eq', L_SAVE_EQ, '~Current~');
            END IF;
         END IF;

         IF L_SAVE_EQ IS NOT NULL THEN
            
            L_RES_PREVIOUS_ID := ' ';
            L_RES_IDX := 1;
            WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

               
               L_SAVE_ID := NVL(L_SAVE_ID, L_MECELLOUTPUT_REC.CELL);
               IF L_RES_PREVIOUS_ID <> NVL(L_RES_OBJECT_ID(L_RES_IDX),
                                           L_SAVE_ID)THEN
                  IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
                     L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
                  END IF;
                  L_RES_PREVIOUS_ID := L_SAVE_ID;
               END IF;

               
               
               IF L_RES_VALUE_F(L_RES_IDX) IS NULL AND
                  L_RES_VALUE_S(L_RES_IDX) IS NULL THEN
                  NULL; 
               ELSE
                  L_SVEQCT_EQ := L_SAVE_EQ;
                  L_SVEQCT_LAB := NVL(L_ME_LAB, '-');
                  L_SVEQCT_CT_NAME := L_SAVE_ID;

                  
                  
                  
                  L_CELL_VALUE_S := L_RES_VALUE_S(L_RES_IDX);
                  L_CELL_VALUE_F := L_RES_VALUE_F(L_RES_IDX);
                  L_CELL_UNIT := L_MECELLOUTPUT_REC.UNIT;
                  L_CELL_FORMAT := L_MECELLOUTPUT_REC.FORMAT;
                  L_SVEQCT_VALUE_S := '';
                  L_SVEQCT_VALUE_F := NULL;
                  L_SVEQCT_UNIT := '';
                  L_SVEQCT_FORMAT := '';
                  
                  L_EQ_VERSION := UNVERSION.P_NO_VERSION;
                  IF L_EQ_VERSION IS NULL THEN
                     UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_GENFAIL;
                     RAISE STPERROR;
                  END IF;
                  
                  BEGIN
                  SELECT UNIT, FORMAT
                  INTO L_SVEQCT_UNIT, L_SVEQCT_FORMAT
                  FROM UTEQCT
                  WHERE EQ = L_SVEQCT_EQ
                    AND LAB = L_SVEQCT_LAB
                    AND VERSION = L_EQ_VERSION
                    AND CT_NAME = L_SVEQCT_CT_NAME;
                  EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                    L_SVEQCT_UNIT := NULL;
                    L_SVEQCT_FORMAT := NULL;
                  END;
                  L_RET_CODE := UNAPIGEN.TRANSFORMRESULT(L_CELL_VALUE_S,
                                                         L_CELL_VALUE_F,      
                                                         L_CELL_UNIT,
                                                         L_CELL_FORMAT,    
                                                         L_SVEQCT_VALUE_S,    
                                                         L_SVEQCT_VALUE_F,      
                                                         L_SVEQCT_UNIT,    
                                                         L_SVEQCT_FORMAT);
                  IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                     UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                     RAISE STPERROR;
                  END IF;

                  
                  L_RET_CODE := UNAPIEQ.SAVE1EQCONSTANT(L_SVEQCT_EQ, L_SVEQCT_LAB, L_SVEQCT_CT_NAME, A_ME,
                                   L_SVEQCT_VALUE_S, L_SVEQCT_VALUE_F,
                                   L_SVEQCT_FORMAT, L_SVEQCT_UNIT,
                                   'Handling method output');
                  IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                     UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                     RAISE STPERROR;
                  END IF;

               END IF;
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ := L_SAVE_EQ;
               L_RES_OUTPUT(L_RES_IDX).SAVE_EQ_VERSION := L_SAVE_EQ_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
               UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
               L_RES_IDX := L_RES_IDX + 1;

            END LOOP;
         ELSE
            
            INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
            VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 
                   'SaveScMeCell','Warning! No equipment specified for cell "'||L_MECELLOUTPUT_REC.CELL||
                   '" in method "'||A_ME||'". Output of method could not be correctly handled.');            

         END IF;

      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'pr' THEN
         
         
         
         
         
         
         L_RES_IDX := 1;
         WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

            L_PA_FOUND := FALSE;

            
            IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE IS NOT NULL THEN
                  L_SAVE_PG := L_RES_OUTPUT(L_RES_IDX).SAVE_PG;
                  L_SAVE_PGNODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE;
               ELSE
                  
                  
                  
                  
                  L_SAVE_PP_VERSION := NULL;
               END IF;
               
               
               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE IS NOT NULL THEN
                  
                  L_SAVE_PA := L_RES_OUTPUT(L_RES_IDX).SAVE_PA;
                  L_SAVE_PANODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE;
               ELSE
                  L_SAVE_PA := L_RES_OBJECT_ID(L_RES_IDX);
                  L_RES_OUTPUT(L_RES_IDX).SAVE_PA := L_SAVE_PA;
                  L_SAVE_PANODE := NULL;
                  
                  
                  
                  
                  L_SAVE_PR_VERSION := NULL;
               END IF;
            END IF;
            OPEN L_PA_CURSOR;
            FETCH L_PA_CURSOR INTO L_PA_REC;
            L_PA_FOUND := L_PA_CURSOR%FOUND;
            CLOSE L_PA_CURSOR;

            
            IF L_PA_FOUND THEN
               ADDNODE('pa', L_PA_REC.PG,                  '', L_PA_REC.PGNODE,
                               L_SAVE_PA, L_PA_REC.PR_VERSION, L_PA_REC.PANODE,
                                      '',                  '', '');
               L_RES_OUTPUT(L_RES_IDX).SAVE_PA := L_PA_REC.PA;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := L_PA_REC.PANODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := L_PA_REC.PR_VERSION;
            END IF;

            
            
            IF L_RES_VALUE_F(L_RES_IDX) IS NULL AND L_RES_VALUE_S(L_RES_IDX) IS NULL THEN
               NULL; 
            ELSIF L_PA_FOUND THEN
               L_SVSCPA_RES_NR_OF_ROWS := 1;
               L_SVSCPA_RES_SC(1) := A_SC;
               L_SVSCPA_RES_PG(1) := L_PA_REC.PG;
               L_SVSCPA_RES_PGNODE(1) := L_PA_REC.PGNODE;
               L_SVSCPA_RES_PA(1) := L_PA_REC.PA;
               L_SVSCPA_RES_PANODE(1) := L_PA_REC.PANODE;
               L_SVSCPA_RES_REANALYSIS(1) := L_PA_REC.REANALYSIS;
               L_SVSCPA_RES_EXEC_END_DATE(1) := L_PA_REC.EXEC_END_DATE;
               L_SVSCPA_RES_EXECUTOR(1) := L_PA_REC.EXECUTOR;
               L_SVSCPA_RES_MANUALLY_ENTERED(1) := L_PA_REC.MANUALLY_ENTERED;
               L_SVSCPA_RES_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_UPDATE;
               
               
               
               
               L_CELL_VALUE_S := L_RES_VALUE_S(L_RES_IDX);
               L_CELL_VALUE_F := L_RES_VALUE_F(L_RES_IDX);
               L_CELL_UNIT := L_MECELLOUTPUT_REC.UNIT;
               L_CELL_FORMAT := L_MECELLOUTPUT_REC.FORMAT;
               L_SVSCPA_RES_VALUE_S(1) := '';
               L_SVSCPA_RES_VALUE_F(1) := NULL;
               L_SVSCPA_RES_UNIT(1) := L_PA_REC.UNIT;
               L_SVSCPA_RES_FORMAT(1) := L_PA_REC.FORMAT;               
               L_RET_CODE := UNAPIGEN.TRANSFORMRESULT(L_CELL_VALUE_S,
                                                      L_CELL_VALUE_F,      
                                                      L_CELL_UNIT,
                                                      L_CELL_FORMAT,    
                                                      L_SVSCPA_RES_VALUE_S(1),    
                                                      L_SVSCPA_RES_VALUE_F(1),      
                                                      L_SVSCPA_RES_UNIT(1),    
                                                      L_SVSCPA_RES_FORMAT(1));
               IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
               
               L_RET_CODE := UNAPIPA.SAVESCPARESULT(UNAPIGEN.ALARMS_NOT_HANDLED, L_SVSCPA_RES_SC,
                                          L_SVSCPA_RES_PG, L_SVSCPA_RES_PGNODE, L_SVSCPA_RES_PA,
                                          L_SVSCPA_RES_PANODE, L_SVSCPA_RES_VALUE_F,
                                          L_SVSCPA_RES_VALUE_S, L_SVSCPA_RES_UNIT,
                                          L_SVSCPA_RES_FORMAT, L_SVSCPA_RES_EXEC_END_DATE, 
                                          L_SVSCPA_RES_EXECUTOR, L_SVSCPA_RES_MANUALLY_ENTERED,
                                          L_SVSCPA_RES_REANALYSIS, L_SVSCPA_RES_MODIFY_FLAG,
                                          L_SVSCPA_RES_NR_OF_ROWS,
                                          'Handling method output');
               IF L_RET_CODE IN (UNAPIGEN.DBERR_PARTIALSAVE, UNAPIGEN.DBERR_PARTIALCHARTSAVE) THEN
                  UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_SUCCESS;
               ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                   UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                   RAISE STPERROR;
               END IF;
               L_RES_OUTPUT(L_RES_IDX).SAVE_REANALYSIS := L_SVSCPA_RES_REANALYSIS(1);
               UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
               
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '2' AND
            NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_PA) IS NOT NULL THEN
               INITANDSAVEPARAMETER(L_RES_VALUE_F(L_RES_IDX),
                                    L_RES_VALUE_S(L_RES_IDX),
                                    L_MECELLOUTPUT_REC.UNIT,
                                    L_MECELLOUTPUT_REC.FORMAT,
                                    FALSE,
                                    L_RES_OUTPUT(L_RES_IDX));
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '3' AND
            NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_PA) IS NOT NULL THEN
               IF L_SAVE_PGNODE IS NULL THEN
                  INITANDSAVEPARAMETERGROUP(TRUE, L_RES_OUTPUT(L_RES_IDX));
               END IF;
               INITANDSAVEPARAMETER(L_RES_VALUE_F(L_RES_IDX),
                                    L_RES_VALUE_S(L_RES_IDX),
                                    L_MECELLOUTPUT_REC.UNIT,
                                    L_MECELLOUTPUT_REC.FORMAT,
                                    FALSE,
                                    L_RES_OUTPUT(L_RES_IDX));
            END IF;
            L_RES_IDX := L_RES_IDX + 1;
         END LOOP;

      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'mt' THEN

         
         
         
         
         
         
         L_RES_IDX := 1;
         WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

            L_ME_FOUND := FALSE;

            
            IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN

               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE IS NOT NULL THEN
                  L_SAVE_PG := L_RES_OUTPUT(L_RES_IDX).SAVE_PG;
                  L_SAVE_PGNODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE;
               ELSE
                  
                  
                  
                  
                  L_SAVE_PP_VERSION := NULL;
               END IF;
               

               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE IS NOT NULL THEN
                  L_SAVE_PA := L_RES_OUTPUT(L_RES_IDX).SAVE_PA;
                  L_SAVE_PANODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE;
               ELSE
                  
                  
                  
                  
                  L_SAVE_PR_VERSION := NULL;
               END IF;
               
               
               IF L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE IS NOT NULL THEN
                  
                  L_SAVE_ME := L_RES_OUTPUT(L_RES_IDX).SAVE_ME;
                  L_SAVE_MENODE := L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE;
               ELSE
                  L_SAVE_ME := L_RES_OBJECT_ID(L_RES_IDX);
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ME := L_SAVE_ME;
                  L_SAVE_MENODE := NULL;
                  
                  
                  
                  
                  L_SAVE_MT_VERSION := NULL;
               END IF;

            END IF;
            OPEN L_ME_CURSOR;
            FETCH L_ME_CURSOR INTO L_ME_REC;
            L_ME_FOUND := L_ME_CURSOR%FOUND;
            CLOSE L_ME_CURSOR;

            
            IF L_ME_FOUND THEN
               ADDNODE('me', L_ME_REC.PG,                  '', L_ME_REC.PGNODE, 
                             L_ME_REC.PA,                  '', L_ME_REC.PANODE,
                               L_SAVE_ME, L_ME_REC.MT_VERSION, L_ME_REC.MENODE);
               L_RES_OUTPUT(L_RES_IDX).SAVE_ME := L_ME_REC.ME;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE := L_ME_REC.MENODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MT_VERSION := L_ME_REC.MT_VERSION;
            END IF;

            
            
            IF L_RES_VALUE_F(L_RES_IDX) IS NULL AND L_RES_VALUE_S(L_RES_IDX) IS NULL THEN
               NULL; 
            ELSIF L_ME_FOUND THEN

               
               
               
               
               
               IF L_ME_REC.PG = A_PG AND
                  L_ME_REC.PGNODE = A_PGNODE AND
                  L_ME_REC.PA = A_PA AND
                  L_ME_REC.PANODE = A_PANODE AND
                  L_ME_REC.ME = A_ME AND
                  L_ME_REC.MENODE = A_MENODE THEN
                  
                  FOR L_SCMEPROPCELL_REC IN L_SCMEPROPCELL_CURSOR LOOP
                     IF L_SCMEPROPCELL_REC.SAVE_ID = 'unit' THEN
                        L_ME_REC.UNIT := L_SCMEPROPCELL_REC.VALUE_S;
               
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'exec_start_date' THEN
                        L_DATE_STRING := L_SCMEPROPCELL_REC.VALUE_S || '@' ||
                                         SUBSTR(L_SCMEPROPCELL_REC.FORMAT,2);
                        L_RET_CODE := UNAPIGEN.DATEVALID(L_DATE_STRING,
                                                         L_ME_REC.EXEC_START_DATE, L_SQLERRM);
                        IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                           L_SQLERRM := 'InvalidDate '||L_SCMEPROPCELL_REC.VALUE_S||' in ' || L_SCMEPROPCELL_REC.CELL ||
                                        '#format=' || L_SCMEPROPCELL_REC.FORMAT || '#ret_code=' ||
                                        TO_CHAR(L_RET_CODE) || '#sc='|| A_SC || '#me=' ||
                                        A_ME|| '#menode=' || TO_CHAR(A_MENODE);
                           RAISE STPERROR;
                        END IF;

                        
                        
                        
                        SELECT EXEC_START_DATE, EXEC_START_DATE_TZ
                        INTO L_OLD_EXEC_START_DATE, L_OLD_EXEC_START_DATE_TZ
                        FROM UTSCME
                        WHERE SC = A_SC
                        AND PG = A_PG
                        AND PGNODE = A_PGNODE
                        AND PA = A_PA
                        AND PANODE = A_PANODE
                        AND ME = A_ME
                        AND MENODE = A_MENODE;

                        
                        
                        
                        UPDATE UTSCME
                        SET EXEC_START_DATE = L_ME_REC.EXEC_START_DATE,
                            EXEC_START_DATE_TZ =  DECODE(L_ME_REC.EXEC_START_DATE_TZ, EXEC_START_DATE_TZ, EXEC_START_DATE_TZ, L_ME_REC.EXEC_START_DATE_TZ)
                        WHERE SC = A_SC
                        AND PG = A_PG
                        AND PGNODE = A_PGNODE
                        AND PA = A_PA
                        AND PANODE = A_PANODE
                        AND ME = A_ME
                        AND MENODE = A_MENODE;
                        
                        
                        
                        
                        IF L_LOG_HS_DETAILS = '1' THEN
                           IF NVL((L_OLD_EXEC_START_DATE <> L_ME_REC.EXEC_START_DATE), TRUE) AND 
                              NOT(L_OLD_EXEC_START_DATE IS NULL AND L_ME_REC.EXEC_START_DATE IS NULL)  THEN 
                              L_HS_DETAILS_SEQ_NR := L_HS_DETAILS_SEQ_NR + 1;
                              INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, 
                                                          TR_SEQ, EV_SEQ, SEQ, DETAILS)
                              VALUES(A_SC, A_PG, A_PGNODE, A_PA, A_PANODE, A_ME, A_MENODE, 
                                     UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_DETAILS_SEQ_NR, 
                                     'method "'||A_ME||'" is updated: property <exec_start_date_tz> changed value from "' || TO_CHAR(L_OLD_EXEC_START_DATE_TZ, UNAPIGEN.P_JOBS_TSTZ_FORMAT) || '" to "' || TO_CHAR(L_ME_REC.EXEC_START_DATE_TZ, UNAPIGEN.P_JOBS_TSTZ_FORMAT) || '".');
                           END IF;
                        END IF;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'exec_end_date' THEN
                        L_DATE_STRING := L_SCMEPROPCELL_REC.VALUE_S || '@' ||
                                         SUBSTR(L_SCMEPROPCELL_REC.FORMAT,2);                        
                        L_RET_CODE := UNAPIGEN.DATEVALID(L_DATE_STRING,
                                                         L_ME_REC.EXEC_END_DATE, L_SQLERRM);
                        IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                           L_SQLERRM := 'InvalidDate '||L_SCMEPROPCELL_REC.VALUE_S||' in ' || L_SCMEPROPCELL_REC.CELL ||
                                        '#format=' || L_SCMEPROPCELL_REC.FORMAT || '#ret_code=' ||
                                        TO_CHAR(L_RET_CODE) || '#sc='|| A_SC || '#me=' ||
                                        A_ME|| '#menode=' || TO_CHAR(A_MENODE);
                           RAISE STPERROR;
                        END IF;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'executor' THEN
                        L_ME_REC.EXECUTOR := L_SCMEPROPCELL_REC.VALUE_S;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'lab' THEN
                        L_ME_REC.LAB := L_SCMEPROPCELL_REC.VALUE_S;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'eq' THEN
                        L_ME_REC.EQ := L_SCMEPROPCELL_REC.VALUE_S;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'real_cost' THEN
                        L_ME_REC.REAL_COST := L_SCMEPROPCELL_REC.VALUE_S;
                     ELSIF L_SCMEPROPCELL_REC.SAVE_ID = 'real_time' THEN
                        L_ME_REC.REAL_TIME := L_SCMEPROPCELL_REC.VALUE_S;
                     ELSE
                        
                        NULL;
                     END IF;
                  END LOOP;
               END IF;

               L_SVSCME_RES_NR_OF_ROWS := 1;
               L_SVSCME_RES_SC(1) := A_SC;
               L_SVSCME_RES_PG(1) := L_ME_REC.PG;
               L_SVSCME_RES_PGNODE(1) := L_ME_REC.PGNODE;
               L_SVSCME_RES_PA(1) := L_ME_REC.PA;
               L_SVSCME_RES_PANODE(1) := L_ME_REC.PANODE;
               L_SVSCME_RES_ME(1) := L_ME_REC.ME;
               L_SVSCME_RES_MENODE(1) := L_ME_REC.MENODE;
               L_SVSCME_RES_REANALYSIS(1) := L_ME_REC.REANALYSIS;
               L_SVSCME_RES_EXEC_END_DATE(1) := L_ME_REC.EXEC_END_DATE;
               L_SVSCME_RES_EXECUTOR(1) := L_ME_REC.EXECUTOR;
               L_SVSCME_RES_LAB(1) := L_ME_REC.LAB;
               L_SVSCME_RES_EQ(1) := L_ME_REC.EQ;
               L_SVSCME_RES_EQ_VERSION(1) := L_ME_REC.EQ_VERSION;
               L_SVSCME_RES_MANUALLY_ENTERED(1) := L_ME_REC.MANUALLY_ENTERED;
               L_SVSCME_RES_REAL_COST(1) := L_ME_REC.REAL_COST;
               L_SVSCME_RES_REAL_TIME(1) := L_ME_REC.REAL_TIME;
               L_SVSCME_RES_REANALYSIS(1) := L_ME_REC.REANALYSIS;   
               L_SVSCME_RES_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_UPDATE;   

               
               
               
               L_CELL_VALUE_S := L_RES_VALUE_S(L_RES_IDX);
               L_CELL_VALUE_F := L_RES_VALUE_F(L_RES_IDX);
               L_CELL_UNIT := L_MECELLOUTPUT_REC.UNIT;
               L_CELL_FORMAT := L_MECELLOUTPUT_REC.FORMAT;
               L_SVSCME_RES_VALUE_S(1) := '';
               L_SVSCME_RES_VALUE_F(1) := NULL;
               L_SVSCME_RES_UNIT(1) := L_ME_REC.UNIT;
               L_SVSCME_RES_FORMAT(1) := L_ME_REC.FORMAT;
               L_RET_CODE := UNAPIGEN.TRANSFORMRESULT(L_CELL_VALUE_S,
                                                      L_CELL_VALUE_F,      
                                                      L_CELL_UNIT,
                                                      L_CELL_FORMAT,    
                                                      L_SVSCME_RES_VALUE_S(1),    
                                                      L_SVSCME_RES_VALUE_F(1),      
                                                      L_SVSCME_RES_UNIT(1),    
                                                      L_SVSCME_RES_FORMAT(1));
               IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
               
               L_RET_CODE := UNAPIME.SAVESCMERESULT(UNAPIGEN.ALARMS_NOT_HANDLED, L_SVSCME_RES_SC,
                                         L_SVSCME_RES_PG, L_SVSCME_RES_PGNODE, L_SVSCME_RES_PA,
                                         L_SVSCME_RES_PANODE, L_SVSCME_RES_ME,
                                         L_SVSCME_RES_MENODE, L_SVSCME_RES_REANALYSIS,
                                         L_SVSCME_RES_VALUE_F, L_SVSCME_RES_VALUE_S, 
                                         L_SVSCME_RES_UNIT, L_SVSCME_RES_FORMAT,
                                         L_SVSCME_RES_EXEC_END_DATE, 
                                         L_SVSCME_RES_EXECUTOR, L_SVSCME_RES_LAB,
                                         L_SVSCME_RES_EQ, L_SVSCME_RES_EQ_VERSION, 
                                         L_SVSCME_RES_MANUALLY_ENTERED,
                                         L_SVSCME_RES_REAL_COST, L_SVSCME_RES_REAL_TIME,
                                         L_SVSCME_RES_MODIFY_FLAG, L_SVSCME_RES_NR_OF_ROWS,
                                         'Handling method output');
               IF L_RET_CODE = UNAPIGEN.DBERR_PARTIALSAVE THEN
                  UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_SUCCESS;
               ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  UNAPIGEN.P_TXN_ERROR  := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
               L_RES_OUTPUT(L_RES_IDX).SAVE_REANALYSIS := L_SVSCME_RES_REANALYSIS(1);
               UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));

            
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '1' AND
                   NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_ME) IS NOT NULL THEN

               INITANDSAVEMETHOD(L_RES_VALUE_F(L_RES_IDX),
                                 L_RES_VALUE_S(L_RES_IDX),
                                 L_MECELLOUTPUT_REC.UNIT,
                                 L_MECELLOUTPUT_REC.FORMAT,
                                 FALSE,
                                 L_RES_OUTPUT(L_RES_IDX));
            
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '2' AND
                   NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_ME) IS NOT NULL THEN
               IF L_SAVE_PANODE IS NULL THEN
                  INITANDSAVEPARAMETER(NULL, NULL, 
                                       L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT, 
                                       TRUE, L_RES_OUTPUT(L_RES_IDX));
               END IF;

               INITANDSAVEMETHOD(L_RES_VALUE_F(L_RES_IDX),
                                 L_RES_VALUE_S(L_RES_IDX),
                                 L_MECELLOUTPUT_REC.UNIT,
                                 L_MECELLOUTPUT_REC.FORMAT,
                                 FALSE,
                                 L_RES_OUTPUT(L_RES_IDX));
            
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '3' AND
                   NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_ME) IS NOT NULL THEN

               IF L_SAVE_PGNODE IS NULL THEN
                  INITANDSAVEPARAMETERGROUP(TRUE,
                                            L_RES_OUTPUT(L_RES_IDX));
               END IF;

               IF L_SAVE_PANODE IS NULL THEN
                  INITANDSAVEPARAMETER(NULL, NULL, 
                                       L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                       TRUE, L_RES_OUTPUT(L_RES_IDX));
               END IF;

               INITANDSAVEMETHOD(L_RES_VALUE_F(L_RES_IDX),
                                 L_RES_VALUE_S(L_RES_IDX),
                                 L_MECELLOUTPUT_REC.UNIT,
                                 L_MECELLOUTPUT_REC.FORMAT,
                                 FALSE,
                                 L_RES_OUTPUT(L_RES_IDX));
            END IF;
            
            L_RES_IDX := L_RES_IDX + 1;
         END LOOP;

      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'me' THEN
         
         
         
         L_RES_IDX := 1;
         WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

            L_ME_FOUND := FALSE;

            
            IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
               L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
            END IF;
            OPEN L_ME_CURSOR;
            FETCH L_ME_CURSOR INTO L_ME_REC;
            L_ME_FOUND := L_ME_CURSOR%FOUND;
            CLOSE L_ME_CURSOR;

            
            IF L_ME_FOUND THEN
               ADDNODE('me', L_ME_REC.PG,                '', L_ME_REC.PGNODE,
                             L_ME_REC.PA,                '', L_ME_REC.PANODE,
                             L_SAVE_ME, L_ME_REC.MT_VERSION, L_ME_REC.MENODE);

            END IF;

            
            
            IF L_SAVE_ID = 'description' THEN
               L_ME_REC.DESCRIPTION := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'mt_version' THEN
               L_ME_REC.MT_VERSION := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'unit' THEN
               L_ME_REC.UNIT := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'exec_start_date' THEN
               L_DATE_STRING := L_RES_VALUE_S(L_RES_IDX) || '@' ||
                                SUBSTR(L_MECELLOUTPUT_REC.FORMAT,2);
               L_RET_CODE := UNAPIGEN.DATEVALID(L_DATE_STRING,
                                                L_ME_REC.EXEC_START_DATE, L_SQLERRM);
               IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  L_SQLERRM := 'InvalidDate in ' || L_MECELLOUTPUT_REC.CELL ||
                               '#format=' || SUBSTR(L_MECELLOUTPUT_REC.FORMAT,2) || '#ret_code=' ||
                               TO_CHAR(L_RET_CODE) || '#sc='|| A_SC || '#me=' ||
                               A_ME|| '#menode=' || TO_CHAR(A_MENODE);
                  RAISE STPERROR;
               END IF;
               
            ELSIF L_SAVE_ID = 'exec_end_date' THEN
               L_DATE_STRING := L_RES_VALUE_S(L_RES_IDX) || '@' ||
                                SUBSTR(L_MECELLOUTPUT_REC.FORMAT,2);
               L_RET_CODE := UNAPIGEN.DATEVALID(L_DATE_STRING,
                                                L_ME_REC.EXEC_END_DATE, L_SQLERRM);
               IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  L_SQLERRM := 'InvalidDate in ' || L_MECELLOUTPUT_REC.CELL ||
                               '#format=' || SUBSTR(L_MECELLOUTPUT_REC.FORMAT,2) || '#ret_code=' ||
                               TO_CHAR(L_RET_CODE) || '#sc='|| A_SC || '#me=' ||
                               A_ME|| '#menode=' || TO_CHAR(A_MENODE);
                  RAISE STPERROR;
               END IF;
               L_SVME_PROP_ENDDATE_UPDATED := TRUE;
            ELSIF L_SAVE_ID = 'executor' THEN
               L_ME_REC.EXECUTOR := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'lab' THEN
               L_ME_REC.LAB := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'eq' THEN
               L_ME_REC.EQ := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'eq_version' THEN
               L_ME_REC.EQ_VERSION := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'planned_executor' THEN
               L_ME_REC.EXECUTOR := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'planned_eq' THEN
               L_ME_REC.PLANNED_EQ := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'planned_eq_version' THEN
               L_ME_REC.PLANNED_EQ_VERSION := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'delay' THEN
               L_ME_REC.DELAY := L_RES_VALUE_F(L_RES_IDX);
            ELSIF L_SAVE_ID = 'delay_unit' THEN
               L_ME_REC.DELAY_UNIT := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'format' THEN
               L_ME_REC.FORMAT := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'accuracy' THEN
               L_ME_REC.ACCURACY := L_RES_VALUE_F(L_RES_IDX);
            ELSIF L_SAVE_ID = 'real_cost' THEN
               L_ME_REC.REAL_COST := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'real_time' THEN
               L_ME_REC.REAL_TIME := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'sop' THEN
               L_ME_REC.SOP := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'sop_version' THEN
               L_ME_REC.SOP_VERSION := L_RES_VALUE_S(L_RES_IDX);
            ELSIF L_SAVE_ID = 'plaus_low' THEN
               L_ME_REC.PLAUS_LOW := L_RES_VALUE_F(L_RES_IDX);
            ELSIF L_SAVE_ID = 'plaus_high' THEN
               L_ME_REC.PLAUS_HIGH := L_RES_VALUE_F(L_RES_IDX);
            ELSIF L_SAVE_ID = 'me_class' THEN
               L_ME_REC.ME_CLASS := L_RES_VALUE_S(L_RES_IDX);
            ELSE
               RAISE LOCALEXCEPTION;
            END IF;
            IF L_SAVE_ID IN ('exec_start_date', 'exec_end_date') THEN
               
               
               
               
               GETNODE('me', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, '', L_SAVE_PANODE, L_SAVE_ME, L_ME_REC.MT_VERSION, '', L_SAVE_MENODE);

               L_EV_SEQ_NR := -1;
               L_EVENT_TP := 'MethodUpdated';
               L_EV_DETAILS := 'sc=' || A_SC || 
                               '#pg=' || L_SAVE_PG || 
                               '#pgnode=' || TO_CHAR(L_SAVE_PGNODE) || 
                               '#pa=' || L_SAVE_PA || 
                               '#panode=' || TO_CHAR(L_SAVE_PANODE) || 
                               '#menode=' || TO_CHAR(L_SAVE_MENODE) ||
                               '#mt_version=' || L_ME_REC.MT_VERSION;

               L_RESULT := UNAPIEV.INSERTEVENT('HandleScMeCellOutput', UNAPIGEN.P_EVMGR_NAME,
                                               'me', L_SAVE_ME, '', '', '',
                                                L_EVENT_TP, L_EV_DETAILS, L_EV_SEQ_NR);

               
               
               
               SELECT EXEC_START_DATE_TZ, EXEC_END_DATE_TZ
               INTO L_OLD_EXEC_START_DATE, L_OLD_EXEC_END_DATE
               FROM UTSCME
               WHERE SC = A_SC
               AND PG = L_SAVE_PG
               AND PGNODE = L_SAVE_PGNODE
               AND PA = L_SAVE_PA
               AND PANODE = L_SAVE_PANODE
               AND ME = L_SAVE_ME
               AND MENODE = L_SAVE_MENODE;

               UPDATE UTSCME
               SET EXEC_START_DATE = L_ME_REC.EXEC_START_DATE,
              EXEC_START_DATE_TZ = DECODE(L_ME_REC.EXEC_START_DATE_TZ, EXEC_START_DATE_TZ, EXEC_START_DATE_TZ, L_ME_REC.EXEC_START_DATE_TZ) ,
                   EXEC_END_DATE = L_ME_REC.EXEC_END_DATE,
                   EXEC_END_DATE_TZ = L_ME_REC.EXEC_END_DATE_TZ
               WHERE SC = A_SC
               AND PG = L_SAVE_PG
               AND PGNODE = L_SAVE_PGNODE
               AND PA = L_SAVE_PA
               AND PANODE = L_SAVE_PANODE
               AND ME = L_SAVE_ME
               AND MENODE = L_SAVE_MENODE;

               
               
               
               IF L_LOG_HS_DETAILS = '1' THEN
                  IF NVL((L_OLD_EXEC_START_DATE <> L_ME_REC.EXEC_START_DATE_TZ), TRUE) AND 
                     NOT(L_OLD_EXEC_START_DATE IS NULL AND L_ME_REC.EXEC_START_DATE_TZ IS NULL) THEN 
                     L_HS_DETAILS_SEQ_NR := L_HS_DETAILS_SEQ_NR + 1;
                     INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, 
                                                 EV_SEQ, SEQ, DETAILS)
                     VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, L_SAVE_ME, 
                            L_SAVE_MENODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_DETAILS_SEQ_NR, 
                            'method "'||L_SAVE_ME||'" is updated: property <exec_start_date_tz> changed value from "' || TO_CHAR(L_OLD_EXEC_START_DATE, UNAPIGEN.P_JOBS_TSTZ_FORMAT) || '" to "' || TO_CHAR(L_ME_REC.EXEC_START_DATE_TZ, UNAPIGEN.P_JOBS_DATE_FORMAT) || '".');
                  END IF;

                  IF NVL((L_OLD_EXEC_END_DATE <> L_ME_REC.EXEC_END_DATE_TZ), TRUE) AND 
                     NOT(L_OLD_EXEC_END_DATE IS NULL AND L_ME_REC.EXEC_END_DATE_TZ IS NULL) THEN 
                     L_HS_DETAILS_SEQ_NR := L_HS_DETAILS_SEQ_NR + 1;
                     INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, 
                                                 EV_SEQ, SEQ, DETAILS)
                     VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, L_SAVE_ME, 
                            L_SAVE_MENODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_DETAILS_SEQ_NR, 
                            'method "'||L_SAVE_ME||'" is updated: property <exec_end_date_tz> changed value from "' || TO_CHAR(L_OLD_EXEC_END_DATE, UNAPIGEN.P_JOBS_TSTZ_FORMAT) || '" to "' || TO_CHAR(L_ME_REC.EXEC_END_DATE_TZ, UNAPIGEN.P_JOBS_DATE_FORMAT) || '".');
                  END IF;
               END IF;

            ELSE              
               L_SVME_PROP_SC(1) := A_SC;
               L_SVME_PROP_PG(1) := L_SAVE_PG;
               L_SVME_PROP_PGNODE(1) := L_SAVE_PGNODE;
               L_SVME_PROP_PA(1) := L_SAVE_PA;
               L_SVME_PROP_PANODE(1) := L_SAVE_PANODE;
               L_SVME_PROP_ME(1) := L_SAVE_ME;
               GETNODE('me', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, '', L_SAVE_PANODE, L_SAVE_ME, L_ME_REC.MT_VERSION, '', L_SAVE_MENODE);
               L_SVME_PROP_MENODE(1) := L_SAVE_MENODE;
               L_SVME_PROP_REANALYSIS(1) := L_ME_REC.REANALYSIS;
               L_SVME_PROP_DESCRIPTION(1) := L_ME_REC.DESCRIPTION;
               L_SVME_PROP_MT_VERSION(1) := L_ME_REC.MT_VERSION;
               L_SVME_PROP_VALUE_F(1) := L_ME_REC.VALUE_F;
               L_SVME_PROP_VALUE_S(1) := L_ME_REC.VALUE_S;
               L_SVME_PROP_UNIT(1) := L_ME_REC.UNIT;
               L_SVME_PROP_EXEC_START_DATE(1) := L_ME_REC.EXEC_START_DATE;
               L_SVME_PROP_EXEC_END_DATE(1) := L_ME_REC.EXEC_END_DATE;
               L_SVME_PROP_EXECUTOR(1) := L_ME_REC.EXECUTOR;
               L_SVME_PROP_LAB(1) := L_ME_REC.LAB;
               L_SVME_PROP_EQ(1) := L_ME_REC.EQ;
               L_SVME_PROP_EQ_VERSION(1) := L_ME_REC.EQ_VERSION;
               L_SVME_PROP_PLANNED_EXECUTOR(1) := L_ME_REC.PLANNED_EXECUTOR;
               L_SVME_PROP_PLANNED_EQ(1) := L_ME_REC.PLANNED_EQ;
               L_SVME_PROP_PLANNED_EQ_VERSION(1) := L_ME_REC.PLANNED_EQ_VERSION;
               L_SVME_PROP_MANUALLY_ENTERED(1) := L_ME_REC.MANUALLY_ENTERED;
               L_SVME_PROP_ALLOW_ADD(1) := L_ME_REC.ALLOW_ADD;
               L_SVME_PROP_ASSIGN_DATE(1) := L_ME_REC.ASSIGN_DATE;
               L_SVME_PROP_ASSIGNED_BY(1) := L_ME_REC.ASSIGNED_BY;
               L_SVME_PROP_MANUALLY_ADDED(1) := L_ME_REC.MANUALLY_ADDED;
               L_SVME_PROP_DELAY(1) := L_ME_REC.DELAY;
               L_SVME_PROP_DELAY_UNIT(1) := L_ME_REC.DELAY_UNIT;
               L_SVME_PROP_FORMAT(1) := L_ME_REC.FORMAT;
               L_SVME_PROP_ACCURACY(1) := L_ME_REC.ACCURACY;
               L_SVME_PROP_REAL_COST(1) := L_ME_REC.REAL_COST;
               L_SVME_PROP_REAL_TIME(1) := L_ME_REC.REAL_TIME;
               L_SVME_PROP_CALIBRATION(1) := L_ME_REC.CALIBRATION;
               L_SVME_PROP_CONFIRM_COMPLETE(1) := L_ME_REC.CONFIRM_COMPLETE;
               L_SVME_PROP_AUTORECALC(1) := L_ME_REC.AUTORECALC;
               L_SVME_PROP_ME_RESULT_EDITABLE(1) := L_ME_REC.ME_RESULT_EDITABLE;
               L_SVME_PROP_NEXT_CELL(1) := L_ME_REC.NEXT_CELL;
               L_SVME_PROP_SOP(1) := L_ME_REC.SOP;
               L_SVME_PROP_SOP_VERSION(1) := L_ME_REC.SOP_VERSION;
               L_SVME_PROP_PLAUS_LOW(1) := L_ME_REC.PLAUS_LOW;
               L_SVME_PROP_PLAUS_HIGH(1) := L_ME_REC.PLAUS_HIGH;
               L_SVME_PROP_WINSIZE_X(1) := L_ME_REC.WINSIZE_X;
               L_SVME_PROP_WINSIZE_Y(1) := L_ME_REC.WINSIZE_Y;
               L_SVME_PROP_ME_CLASS(1) := L_ME_REC.ME_CLASS;
               L_SVME_PROP_LOG_HS(1) := L_ME_REC.LOG_HS;
               L_SVME_PROP_LOG_HS_DETAILS(1) := L_ME_REC.LOG_HS_DETAILS;
               L_SVME_PROP_LC(1) := L_ME_REC.LC;
               L_SVME_PROP_LC_VERSION(1) := L_ME_REC.LC_VERSION;
               L_SVME_PROP_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_UPDATE;
               L_SVME_PROP_NR_OF_ROWS := 1;

               L_RET_CODE := UNAPIME.SAVESCMETHOD(UNAPIGEN.ALARMS_NOT_HANDLED, L_SVME_PROP_SC,
                             L_SVME_PROP_PG, L_SVME_PROP_PGNODE, L_SVME_PROP_PA,
                             L_SVME_PROP_PANODE, L_SVME_PROP_ME, L_SVME_PROP_MENODE,
                             L_SVME_PROP_REANALYSIS, L_SVME_PROP_MT_VERSION,
                             L_SVME_PROP_DESCRIPTION, L_SVME_PROP_VALUE_F,
                             L_SVME_PROP_VALUE_S, L_SVME_PROP_UNIT,
                             L_SVME_PROP_EXEC_START_DATE, L_SVME_PROP_EXEC_END_DATE,
                             L_SVME_PROP_EXECUTOR, L_SVME_PROP_LAB,
                             L_SVME_PROP_EQ, L_SVME_PROP_EQ_VERSION,
                             L_SVME_PROP_PLANNED_EXECUTOR, L_SVME_PROP_PLANNED_EQ, L_SVME_PROP_PLANNED_EQ_VERSION,
                             L_SVME_PROP_MANUALLY_ENTERED, L_SVME_PROP_ALLOW_ADD,
                             L_SVME_PROP_ASSIGN_DATE, L_SVME_PROP_ASSIGNED_BY,
                             L_SVME_PROP_MANUALLY_ADDED, L_SVME_PROP_DELAY,
                             L_SVME_PROP_DELAY_UNIT, L_SVME_PROP_FORMAT,
                             L_SVME_PROP_ACCURACY, L_SVME_PROP_REAL_COST, L_SVME_PROP_REAL_TIME,
                             L_SVME_PROP_CALIBRATION, L_SVME_PROP_CONFIRM_COMPLETE,
                             L_SVME_PROP_AUTORECALC, L_SVME_PROP_ME_RESULT_EDITABLE, L_SVME_PROP_NEXT_CELL,
                             L_SVME_PROP_SOP, L_SVME_PROP_SOP_VERSION, L_SVME_PROP_PLAUS_LOW,
                             L_SVME_PROP_PLAUS_HIGH, L_SVME_PROP_WINSIZE_X,
                             L_SVME_PROP_WINSIZE_Y, L_SVME_PROP_ME_CLASS,
                             L_SVME_PROP_LOG_HS, L_SVME_PROP_LOG_HS_DETAILS,
                             L_SVME_PROP_LC, L_SVME_PROP_LC_VERSION, L_SVME_PROP_MODIFY_FLAG,
                             L_SVME_PROP_NR_OF_ROWS, 'Handling method output');
               IF L_RET_CODE = UNAPIGEN.DBERR_PARTIALSAVE THEN
                  UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_SUCCESS;
               ELSIF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  UNAPIGEN.P_TXN_ERROR  := L_RET_CODE;
                  RAISE STPERROR;
               END IF;                  
            END IF;
            L_RES_IDX := L_RES_IDX + 1;
         END LOOP;

      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'rd' THEN
         
         
         
         L_RES_IDX := 1;
         WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

            L_RD_FOUND := FALSE;

            
            IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE IS NOT NULL THEN
                  L_SAVE_PG := L_RES_OUTPUT(L_RES_IDX).SAVE_PG;
                  L_SAVE_PGNODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE;
               END IF;
               

               IF L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE IS NOT NULL THEN
                  L_SAVE_PA := L_RES_OUTPUT(L_RES_IDX).SAVE_PA;
                  L_SAVE_PANODE := L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE;
               END IF;
               

               IF L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE IS NOT NULL THEN
                  L_SAVE_ME := L_RES_OUTPUT(L_RES_IDX).SAVE_ME;
                  L_SAVE_MENODE := L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE;
               END IF;
               

               IF L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE IS NOT NULL THEN
                  
                  L_SAVE_ID := L_RES_OUTPUT(L_RES_IDX).SAVE_ID;
                  L_SAVE_IDNODE := L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE;
               ELSE
                  L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
                  L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
                  L_SAVE_IDNODE := NULL;
               END IF;

            END IF;
            OPEN L_RD_CURSOR;
            FETCH L_RD_CURSOR INTO L_RD_REC;
            L_RD_FOUND := L_RD_CURSOR%FOUND;
            CLOSE L_RD_CURSOR;

            
            IF L_RD_FOUND THEN
               
               L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_RD_REC.RD;
               L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE := L_RD_REC.RDNODE;
            END IF;

            IF L_RD_FOUND THEN
               
               
               
               L_SVSCRD_PG(1)       := L_RD_REC.PG;
               L_SVSCRD_PGNODE(1)   := L_RD_REC.PGNODE;
               L_SVSCRD_PA(1)       := L_RD_REC.PA;
               L_SVSCRD_PANODE(1)   := L_RD_REC.PANODE;
               L_SVSCRD_ME(1)       := L_RD_REC.ME;
               L_SVSCRD_MENODE(1)   := L_RD_REC.MENODE;
               L_SVSCRD_RD(1)       := L_RD_REC.RD;
               L_SVSCRD_RDNODE(1)   := L_RD_REC.RDNODE;
               L_SVSCRD_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_UPDATE;
            ELSE
               
               
               
               L_SVSCRD_PG(1)       := L_SAVE_PG;
               L_SVSCRD_PGNODE(1)   := L_SAVE_PGNODE;
               L_SVSCRD_PA(1)       := L_SAVE_PA;
               L_SVSCRD_PANODE(1)   := L_SAVE_PANODE;
               L_SVSCRD_ME(1)       := L_SAVE_ME;
               L_SVSCRD_MENODE(1)   := L_SAVE_MENODE;
               L_SVSCRD_RD(1)       := L_SAVE_ID;
               L_SVSCRD_RDNODE(1)   := 0;
               L_SVSCRD_MODIFY_FLAG(1) := UNAPIGEN.MOD_FLAG_INSERT;
            END IF;

            
            
            IF L_RES_VALUE_F(L_RES_IDX) IS NULL AND L_RES_VALUE_S(L_RES_IDX) IS NULL THEN
               NULL; 
            ELSIF NVL(L_RES_OBJECT_ID(L_RES_IDX),L_SAVE_ID) IS NULL THEN
               NULL; 
            ELSE
               L_SVSCRD_SC(1)       := A_SC;
               L_SVSCRD_VALUE_F(1)  := L_RES_VALUE_F(L_RES_IDX);
               L_SVSCRD_VALUE_S(1)  := L_RES_VALUE_S(L_RES_IDX);
               L_RET_CODE := UNAPIRD.SAVESCRAWDATA(L_SVSCRD_SC, L_SVSCRD_PG, L_SVSCRD_PGNODE,
                                        L_SVSCRD_PA, L_SVSCRD_PANODE, L_SVSCRD_ME,
                                        L_SVSCRD_MENODE, L_SVSCRD_RD, L_SVSCRD_RDNODE,
                                        L_SVSCRD_VALUE_F, L_SVSCRD_VALUE_S,
                                        L_SVSCRD_MODIFY_FLAG, 1,
                                        'Handling method output');
               IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
               L_RES_OUTPUT(L_RES_IDX).SAVE_IDNODE := L_SVSCRD_RDNODE(1);
               UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
            END IF;
            L_RES_IDX := L_RES_IDX + 1;
         END LOOP;
         IF L_RD_CURSOR%ISOPEN THEN
            CLOSE L_RD_CURSOR;
         END IF;
      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'ppau' THEN
         
         
         
         
         
         
         
         
         
         L_UPDATE_AU := TRUE;
         OPEN L_PG_CURSOR;
         FETCH L_PG_CURSOR
         INTO L_PG_REC;
         L_PG_FOUND := L_PG_CURSOR%FOUND;
         CLOSE L_PG_CURSOR;
         IF NOT L_PG_FOUND THEN
            IF L_MECELLOUTPUT_REC.CREATE_NEW <> '3' THEN
               L_UPDATE_AU := FALSE;
            ELSE
               
               INITANDSAVEPARAMETERGROUP(TRUE,
                                         L_RES_OUTPUT(1));
            END IF;
         ELSE
            L_SAVE_PGNODE := L_PG_REC.PGNODE;
            ADDNODE('pg', L_SAVE_PG, L_PG_REC.PP_VERSION, L_SAVE_PGNODE, '', '', '', '', '', '');
         END IF;

         IF L_UPDATE_AU THEN
         
            
            
            
            INSERT INTO UTSCPGAU
            (SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE)
            SELECT SC, PG, PGNODE, AU, AU_VERSION, -AUSEQ, VALUE
            FROM UTSCPGAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE;                       

            L_RES_PREVIOUS_ID := ' ';
            L_RES_IDX := 1;
            WHILE L_RES_IDX <= L_RES_NR_VALUES LOOP

               L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := L_SAVE_PGNODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := L_SAVE_PP_VERSION;

               IF L_RES_PREVIOUS_ID <> NVL(L_RES_OBJECT_ID(L_RES_IDX),
                                           NVL(L_SAVE_ID,'NULL'))THEN
                  IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
                     L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
                     L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
                  END IF;
                  IF NVL(L_SAVE_ID, ' ') = ' ' THEN
                     UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOOBJID;
                     RAISE STPERROR;
                  END IF;
                  IF L_AU_CURSOR%ISOPEN THEN
                     CLOSE L_AU_CURSOR;
                  END IF;
                  OPEN L_AU_CURSOR;
                  FETCH L_AU_CURSOR
                  INTO L_AU_REC;
                  L_AU_FOUND := L_AU_CURSOR%FOUND;
               END IF;
               IF NOT L_AU_FOUND THEN
                  L_AU_REC.SINGLE_VALUED := '0';
               END IF;
               IF L_AU_REC.SINGLE_VALUED = '1' THEN
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := FALSE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               ELSE
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := TRUE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               END IF;
               IF L_DELETE_AU THEN
                  
                  
                  
                  
                  DELETE FROM UTSCPGAU
                  WHERE SC = A_SC
                  AND PG = L_SAVE_PG
                  AND PGNODE = L_SAVE_PGNODE
                  AND AU = L_SAVE_ID;
               END IF;
               IF L_INSERT_AU THEN
                  
                  
                  
                  INSERT INTO UTSCPGAU
                  (SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE)
                  SELECT A_SC, L_SAVE_PG, L_SAVE_PGNODE,
                         L_SAVE_ID, L_SAVE_ID_VERSION, NVL(MAX(AUSEQ), 0) + 1,
                         L_RES_VALUE_S(L_RES_IDX)
                  FROM UTSCPGAU
                  WHERE SC = A_SC
                    AND PG = L_SAVE_PG
                    AND PGNODE = L_SAVE_PGNODE;
                  UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
               END IF;
               
               L_RES_IDX := L_RES_IDX + 1;
               L_RES_PREVIOUS_ID := L_SAVE_ID;
            END LOOP;
            
            
               
            
            
            
            SELECT LOG_HS, LOG_HS_DETAILS
            INTO L_PG_LOG_HS, L_PG_LOG_HS_DETAILS
            FROM UTSCPG
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE;
            
            IF L_PG_LOG_HS = '1' OR L_PG_LOG_HS_DETAILS = '1' THEN
               L_RET_CODE := UNAPIGEN.GETNEXTEVENTSEQNR(L_EV_SEQ_NR);
               IF L_RET_CODE <> 0 THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
            END IF;
            IF (L_PG_LOG_HS = '1') THEN
               INSERT INTO UTSCPGHS(SC, PG, PGNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, 
                                    LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, 
                      UNAPIGEN.P_USER, UNAPIGEN.P_USER_DESCRIPTION, 
                      'MeDetailsUpdated',
                      'parameter group "'||L_SAVE_PG||'" attributes are updated.', 
                      CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, '', UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR);
            END IF;

            L_HS_SEQ := 0;
            IF (L_PG_LOG_HS_DETAILS = '1') THEN
               L_HS_SEQ := L_HS_SEQ + 1;
               INSERT INTO UTSCPGHSDETAILS(SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_SEQ,
                      'parameter group "'||L_SAVE_PG||'" attributes are updated.');
            END IF;
                    
            IF (L_PG_LOG_HS_DETAILS = '1') THEN
               FOR L_AU_REC IN L_SCPGMODIFIEDAU_CURSOR LOOP
                  IF L_AU_REC.ACTION = 'DELETE' THEN
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" with value "'||L_AU_REC.VALUE||'" is removed from parameter group"'||L_SAVE_PG||'".';
                  ELSE
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" is added to parameter group"'||L_SAVE_PG||'", value is "'||L_AU_REC.VALUE||'".';
                  END IF;
                  L_HS_SEQ := L_HS_SEQ + 1;
                  INSERT INTO UTSCPGHSDETAILS(SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
                  VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, 
                         L_HS_SEQ, L_WHAT_DESCRIPTION);
               END LOOP;
            END IF;

            
            
            
            DELETE FROM UTSCPGAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND AUSEQ < 0;
            
         END IF;
         IF L_AU_CURSOR%ISOPEN THEN
            CLOSE L_AU_CURSOR;
         END IF;
      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'prau' THEN
         
         
         
         
         
         
         
         
         
         L_UPDATE_AU := TRUE;
         OPEN L_PA_CURSOR;
         FETCH L_PA_CURSOR
         INTO L_PA_REC;
         L_PA_FOUND := L_PA_CURSOR%FOUND;
         CLOSE L_PA_CURSOR;
         IF NOT L_PA_FOUND  THEN
            IF L_MECELLOUTPUT_REC.CREATE_NEW NOT IN ('2', '3') THEN
               L_UPDATE_AU := FALSE;
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '2' THEN
               
               INITANDSAVEPARAMETER(NULL, '',
                                    L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                    TRUE, L_RES_OUTPUT(1));
               GETNODE('pg', L_SAVE_PG, L_SAVE_PP_VERSION, '', '', '', '', '', '', '', L_SAVE_PGNODE);
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '3' THEN
               IF L_SAVE_PGNODE IS NULL THEN
                  
                  INITANDSAVEPARAMETERGROUP(TRUE,
                                            L_RES_OUTPUT(1));
               END IF;
               
               INITANDSAVEPARAMETER(NULL, '', 
                                    L_MECELLOUTPUT_REC.UNIT,
                                    L_MECELLOUTPUT_REC.FORMAT,
                                    TRUE, L_RES_OUTPUT(1));
            END IF;
         ELSE
            L_SAVE_PGNODE := L_PA_REC.PGNODE;
            L_SAVE_PANODE := L_PA_REC.PANODE;
            L_SAVE_PR_VERSION := L_PA_REC.PR_VERSION;
         END IF;

         ADDNODE ('pg', L_SAVE_PG, L_SAVE_PP_VERSION, L_SAVE_PGNODE, '', '', '', '', '', '');
         ADDNODE ('pa', L_SAVE_PG,                '', L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PR_VERSION, L_SAVE_PANODE, '', '', '');

         IF L_UPDATE_AU THEN
         
            
            
            
            INSERT INTO UTSCPAAU
            (SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE)
            SELECT SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, -AUSEQ, VALUE
            FROM UTSCPAAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE;                       

            L_RES_PREVIOUS_ID := ' ';
            L_RES_IDX := 1;
            WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

               L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := L_SAVE_PGNODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := L_SAVE_PANODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := L_SAVE_PR_VERSION;

               IF L_RES_PREVIOUS_ID <> NVL(L_RES_OBJECT_ID(L_RES_IDX),
                                           NVL(L_SAVE_ID,'NULL'))THEN
                  IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
                     L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
                     L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
                  END IF;
                  IF NVL(L_SAVE_ID, ' ') = ' ' THEN
                     UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOOBJID;
                     RAISE STPERROR;
                  END IF;
                  IF L_AU_CURSOR%ISOPEN THEN
                     CLOSE L_AU_CURSOR;
                  END IF;
                  OPEN L_AU_CURSOR;
                  FETCH L_AU_CURSOR
                  INTO L_AU_REC;
                  L_AU_FOUND := L_AU_CURSOR%FOUND;
               END IF;
               IF NOT L_AU_FOUND THEN
                  L_AU_REC.SINGLE_VALUED := '0';
               END IF;
               IF L_AU_REC.SINGLE_VALUED = '1' THEN
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := FALSE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               ELSE
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := TRUE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               END IF;
               IF L_DELETE_AU THEN
                  
                  
                  
                  
                  DELETE FROM UTSCPAAU
                  WHERE SC = A_SC
                  AND PG = L_SAVE_PG
                  AND PGNODE = L_SAVE_PGNODE
                  AND PA = L_SAVE_PA
                  AND PANODE = L_SAVE_PANODE
                  AND AU = L_SAVE_ID;
               END IF;
               IF L_INSERT_AU THEN
                  
                  
                  
                  INSERT INTO UTSCPAAU
                  (SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE)
                  SELECT A_SC, L_SAVE_PG, L_SAVE_PGNODE,
                         L_SAVE_PA, L_SAVE_PANODE,
                         L_SAVE_ID, L_SAVE_ID_VERSION, NVL(MAX(AUSEQ), 0) + 1,
                         L_RES_VALUE_S(L_RES_IDX)
                  FROM UTSCPAAU
                  WHERE SC = A_SC
                    AND PG = L_SAVE_PG
                    AND PGNODE = L_SAVE_PGNODE
                    AND PA = L_SAVE_PA
                    AND PANODE = L_SAVE_PANODE;
                  UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
               END IF;
               L_RES_IDX := L_RES_IDX + 1;
               L_RES_PREVIOUS_ID := L_SAVE_ID;
            END LOOP;
            
            
            
               
            
            
            
            SELECT LOG_HS, LOG_HS_DETAILS
            INTO L_PA_LOG_HS, L_PA_LOG_HS_DETAILS
            FROM UTSCPA
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE;
            
            IF L_PA_LOG_HS = '1' OR L_PA_LOG_HS_DETAILS = '1' THEN
               L_RET_CODE := UNAPIGEN.GETNEXTEVENTSEQNR(L_EV_SEQ_NR);
               IF L_RET_CODE <> 0 THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
            END IF;
            IF (L_PA_LOG_HS = '1') THEN
               INSERT INTO UTSCPAHS(SC, PG, PGNODE, PA, PANODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, 
                                    LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, 
                      UNAPIGEN.P_USER, UNAPIGEN.P_USER_DESCRIPTION, 
                      'MeDetailsUpdated',
                      'parameter "'||L_SAVE_PA||'" attributes are updated.', 
                      CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, '', UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR);
            END IF;

            L_HS_SEQ := 0;
            IF (L_PA_LOG_HS_DETAILS = '1') THEN
               L_HS_SEQ := L_HS_SEQ + 1;
               INSERT INTO UTSCPAHSDETAILS(SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_SEQ,
                      'parameter "'||L_SAVE_PA||'" attributes are updated.');
            END IF;
                    
            IF (L_PA_LOG_HS_DETAILS = '1') THEN
               FOR L_AU_REC IN L_SCPAMODIFIEDAU_CURSOR LOOP
                  IF L_AU_REC.ACTION = 'DELETE' THEN
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" with value "'||L_AU_REC.VALUE||'" is removed from parameter "'||L_SAVE_PA||'".';
                  ELSE
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" is added to parameter "'||L_SAVE_PA||'", value is "'||L_AU_REC.VALUE||'".';
                  END IF;
                  L_HS_SEQ := L_HS_SEQ + 1;
                  INSERT INTO UTSCPAHSDETAILS(SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
                  VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, 
                         L_HS_SEQ, L_WHAT_DESCRIPTION);
               END LOOP;
            END IF;

            
            
            
            DELETE FROM UTSCPAAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE
            AND AUSEQ < 0;

         END IF;
         IF L_AU_CURSOR%ISOPEN THEN
            CLOSE L_AU_CURSOR;
         END IF;
      
      
      
      ELSIF L_MECELLOUTPUT_REC.SAVE_TP = 'mtau' THEN
         
         
         
         
         
         
         L_UPDATE_AU := TRUE;
         OPEN L_ME_CURSOR;
         FETCH L_ME_CURSOR
         INTO L_ME_REC;
         L_ME_FOUND := L_ME_CURSOR%FOUND;
         CLOSE L_ME_CURSOR;
         IF NOT L_ME_FOUND  THEN
            IF L_MECELLOUTPUT_REC.CREATE_NEW NOT IN ('1', '2', '3') THEN
               L_UPDATE_AU := FALSE;
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '1' THEN
               
               INITANDSAVEMETHOD(NULL, '', 
                                 L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT, 
                                 TRUE, L_RES_OUTPUT(1));
               GETNODE('pg', L_SAVE_PG, L_SAVE_PP_VERSION, '', '', '', '', '', '', '', L_SAVE_PGNODE);
               GETNODE('pa', L_SAVE_PG, '', L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PR_VERSION, '', '', '', '', L_SAVE_PANODE);
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '2' THEN
               IF L_SAVE_PANODE IS NULL THEN
                  
                  INITANDSAVEPARAMETER(NULL, '', 
                                       L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                       TRUE, L_RES_OUTPUT(1));
                  GETNODE('pg', L_SAVE_PG, L_SAVE_PP_VERSION, '', '', '', '', '', '', '', L_SAVE_PGNODE);
               END IF;
               
               INITANDSAVEMETHOD(NULL, '', 
                                 L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                 TRUE, L_RES_OUTPUT(1));
            ELSIF L_MECELLOUTPUT_REC.CREATE_NEW = '3' THEN
               IF L_SAVE_PGNODE IS NULL THEN
                  
                  INITANDSAVEPARAMETERGROUP(TRUE, L_RES_OUTPUT(1));
               END IF;
               IF L_SAVE_PANODE IS NULL THEN
                  
                  INITANDSAVEPARAMETER(NULL, '', 
                                       L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                       TRUE, L_RES_OUTPUT(1));
               END IF;
               
               INITANDSAVEMETHOD(NULL, '', 
                                 L_MECELLOUTPUT_REC.UNIT, L_MECELLOUTPUT_REC.FORMAT,
                                 TRUE, L_RES_OUTPUT(1));
            END IF;
         ELSE
            L_SAVE_PGNODE := L_ME_REC.PGNODE;
            L_SAVE_PANODE := L_ME_REC.PANODE;
            L_SAVE_MENODE := L_ME_REC.MENODE;
            L_SAVE_MT_VERSION := L_ME_REC.MT_VERSION;
         END IF;

         ADDNODE ('pg', L_SAVE_PG, L_SAVE_PP_VERSION, L_SAVE_PGNODE, '', '', '', '', '', '');
         ADDNODE ('pa', L_SAVE_PG,                '', L_SAVE_PGNODE,
                        L_SAVE_PA, L_SAVE_PR_VERSION, L_SAVE_PANODE, '', '', '');
         ADDNODE ('me', L_SAVE_PG,                '', L_SAVE_PGNODE,
                        L_SAVE_PA,                '', L_SAVE_PANODE,
                        L_SAVE_ME, L_SAVE_MT_VERSION, L_SAVE_MENODE);
                        
         IF L_UPDATE_AU THEN
         
            
            
            
            INSERT INTO UTSCMEAU
            (SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE)
            SELECT SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, -AUSEQ, VALUE
            FROM UTSCMEAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE
            AND ME = L_SAVE_ME
            AND MENODE = L_SAVE_MENODE;                       
         
            L_RES_PREVIOUS_ID := ' ';
            L_RES_IDX := 1;
            WHILE L_RES_IDX <=  L_RES_NR_VALUES LOOP

               L_RES_OUTPUT(L_RES_IDX).SAVE_PGNODE := L_SAVE_PGNODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PP_VERSION := L_SAVE_PP_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PANODE := L_SAVE_PANODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_PR_VERSION := L_SAVE_PR_VERSION;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MENODE := L_SAVE_MENODE;
               L_RES_OUTPUT(L_RES_IDX).SAVE_MT_VERSION := L_SAVE_MT_VERSION;

               IF L_RES_PREVIOUS_ID <> NVL(L_RES_OBJECT_ID(L_RES_IDX),
                                           NVL(L_SAVE_ID,'NULL'))THEN
                  IF L_RES_OBJECT_ID(L_RES_IDX) IS NOT NULL THEN
                     L_SAVE_ID := L_RES_OBJECT_ID(L_RES_IDX);
                     L_RES_OUTPUT(L_RES_IDX).SAVE_ID := L_SAVE_ID;
                  END IF;
                  IF NVL(L_SAVE_ID, ' ') = ' ' THEN
                     UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_NOOBJID;
                     RAISE STPERROR;
                  END IF;
                  IF L_AU_CURSOR%ISOPEN THEN
                     CLOSE L_AU_CURSOR;
                  END IF;
                  OPEN L_AU_CURSOR;
                  FETCH L_AU_CURSOR
                  INTO L_AU_REC;
                  L_AU_FOUND := L_AU_CURSOR%FOUND;
               END IF;
               IF NOT L_AU_FOUND THEN
                  L_AU_REC.SINGLE_VALUED := '0';
               END IF;
               IF L_AU_REC.SINGLE_VALUED = '1' THEN
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := FALSE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               ELSE
                  IF L_RES_PREVIOUS_ID = L_SAVE_ID THEN
                     L_DELETE_AU := FALSE;
                     L_INSERT_AU := TRUE;
                  ELSE
                     L_DELETE_AU := TRUE;
                     L_INSERT_AU := TRUE;
                  END IF;
               END IF;
               IF L_DELETE_AU THEN
                  
                  
                  
                  
                  DELETE FROM UTSCMEAU
                  WHERE SC = A_SC
                  AND PG = L_SAVE_PG
                  AND PGNODE = L_SAVE_PGNODE
                  AND PA = L_SAVE_PA
                  AND PANODE = L_SAVE_PANODE
                  AND ME = L_SAVE_ME
                  AND MENODE = L_SAVE_MENODE
                  AND AU = L_SAVE_ID;
               END IF;
               IF L_INSERT_AU THEN
                  
                  
                  
                  INSERT INTO UTSCMEAU
                  (SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE)
                  SELECT A_SC, L_SAVE_PG, L_SAVE_PGNODE,
                         L_SAVE_PA, L_SAVE_PANODE,
                         L_SAVE_ME, L_SAVE_MENODE,
                         L_SAVE_ID, L_SAVE_ID_VERSION, NVL(MAX(AUSEQ), 0) + 1,
                         L_RES_VALUE_S(L_RES_IDX)
                  FROM UTSCMEAU
                  WHERE SC = A_SC
                    AND PG = L_SAVE_PG
                    AND PGNODE = L_SAVE_PGNODE
                    AND PA = L_SAVE_PA
                    AND PANODE = L_SAVE_PANODE
                    AND ME = L_SAVE_ME
                    AND MENODE = L_SAVE_MENODE;
                  UPDATESAVEOUTPUT(L_RES_OUTPUT(L_RES_IDX));
               END IF;
               L_RES_IDX := L_RES_IDX + 1;
               L_RES_PREVIOUS_ID := L_SAVE_ID;
            END LOOP;

            
            
               
            
            
            
            SELECT LOG_HS, LOG_HS_DETAILS
            INTO L_ME_LOG_HS, L_ME_LOG_HS_DETAILS
            FROM UTSCME
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE
            AND ME = L_SAVE_ME
            AND MENODE = L_SAVE_MENODE;
            
            IF L_ME_LOG_HS = '1' OR L_ME_LOG_HS_DETAILS = '1' THEN
               L_RET_CODE := UNAPIGEN.GETNEXTEVENTSEQNR(L_EV_SEQ_NR);
               IF L_RET_CODE <> 0 THEN
                  UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                  RAISE STPERROR;
               END IF;
            END IF;
            IF (L_ME_LOG_HS = '1') THEN
               INSERT INTO UTSCMEHS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, 
                                    LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, L_SAVE_ME, L_SAVE_MENODE, 
                      UNAPIGEN.P_USER, UNAPIGEN.P_USER_DESCRIPTION, 
                      'MeDetailsUpdated',
                      'method "'||L_SAVE_ME||'" attributes are updated.', 
                      CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, '', UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR);
            END IF;

            L_HS_SEQ := 0;
            IF (L_ME_LOG_HS_DETAILS = '1') THEN
               L_HS_SEQ := L_HS_SEQ + 1;
               INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
               VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, L_SAVE_ME, L_SAVE_MENODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_SEQ,
                      'method "'||L_SAVE_ME||'" attributes are updated.');
            END IF;
                    
            IF (L_ME_LOG_HS_DETAILS = '1') THEN
               FOR L_AU_REC IN L_SCMEMODIFIEDAU_CURSOR LOOP
                  IF L_AU_REC.ACTION = 'DELETE' THEN
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" with value "'||L_AU_REC.VALUE||'" is removed from method "'||L_SAVE_ME||'".';
                  ELSE
                     L_WHAT_DESCRIPTION := 'Attribute "'||L_AU_REC.AU||'" is added to method "'||L_SAVE_ME||'", value is "'||L_AU_REC.VALUE||'".';
                  END IF;
                  L_HS_SEQ := L_HS_SEQ + 1;
                  INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
                  VALUES(A_SC, L_SAVE_PG, L_SAVE_PGNODE, L_SAVE_PA, L_SAVE_PANODE, L_SAVE_ME, L_SAVE_MENODE, UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, 
                         L_HS_SEQ, L_WHAT_DESCRIPTION);
               END LOOP;
            END IF;

            
            
            
            DELETE FROM UTSCMEAU
            WHERE SC = A_SC
            AND PG = L_SAVE_PG
            AND PGNODE = L_SAVE_PGNODE
            AND PA = L_SAVE_PA
            AND PANODE = L_SAVE_PANODE
            AND ME = L_SAVE_ME
            AND MENODE = L_SAVE_MENODE
            AND AUSEQ < 0;
         END IF;
         IF L_AU_CURSOR%ISOPEN THEN
            CLOSE L_AU_CURSOR;
         END IF;
      ELSE
         UNAPIGEN.P_TXN_ERROR  := UNAPIGEN.DBERR_SAVETP;
         RAISE STPERROR;
      END IF;
   EXCEPTION
   WHEN LOCALEXCEPTION THEN
      
      NULL;
   WHEN OTHERS THEN
      RAISE;
   END;
   END LOOP;
   
   
   

   
   FLUSHSAVEPARAMETERGROUPS;   
   FLUSHSAVEPARAMETERS;
   FLUSHSAVEMETHODS;

   
   
   
   IF NOT L_SVME_PROP_ENDDATE_UPDATED THEN
      
      
      
      L_OLD_EXEC_END_DATE := NULL;
      SELECT EXEC_END_DATE_TZ
      INTO L_OLD_EXEC_END_DATE
      FROM UTSCME
      WHERE SC = A_SC
        AND PG = A_PG
        AND PGNODE = A_PGNODE
        AND PA = A_PA
        AND PANODE = A_PANODE
        AND ME = A_ME
        AND MENODE = A_MENODE;

      UPDATE UTSCME
      SET EXEC_END_DATE = L_CURRENT_TIMESTAMP, 
              EXEC_END_DATE_TZ = L_CURRENT_TIMESTAMP
      WHERE SC = A_SC
        AND PG = A_PG
        AND PGNODE = A_PGNODE
        AND PA = A_PA
        AND PANODE = A_PANODE
        AND ME = A_ME
        AND MENODE = A_MENODE
        AND EXEC_END_DATE IS NULL;

      
      
      
      IF L_LOG_HS_DETAILS = '1' THEN
         IF (L_OLD_EXEC_END_DATE IS NULL) THEN 
            L_HS_DETAILS_SEQ_NR := L_HS_DETAILS_SEQ_NR + 1;
            INSERT INTO UTSCMEHSDETAILS(SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, 
                                        EV_SEQ, SEQ, DETAILS)
            VALUES(A_SC, A_PG, A_PGNODE, A_PA, A_PANODE, A_ME, A_MENODE, 
                   UNAPIGEN.P_TR_SEQ, L_EV_SEQ_NR, L_HS_DETAILS_SEQ_NR, 
                   'method "'||A_ME||'" is updated: property <exec_end_date_tz> changed value from "" to "' || TO_CHAR(L_CURRENT_TIMESTAMP, UNAPIGEN.P_JOBS_TSTZ_FORMAT) || '".');
         END IF;
      END IF;

      
      
      
      L_RET_CODE := UNAPIME2.UPDATELINKEDSCMECELL(A_SC => A_SC,
                                                  A_PG => A_PG,
                                                  A_PGNODE => A_PGNODE,
                                                  A_PA => A_PA,
                                                  A_PANODE => A_PANODE,
                                                  A_ME => A_ME,
                                                  A_MENODE => A_MENODE,
                                                  A_ME_STD_PROPERTY => 'exec_end_date',
                                                  A_MT_VERSION => NULL,
                                                  A_DESCRIPTION => NULL,
                                                  A_UNIT => NULL,
                                                  A_EXEC_START_DATE => NULL,
                                                  A_EXEC_END_DATE => L_CURRENT_TIMESTAMP, 
                                                  A_EXECUTOR => NULL,
                                                  A_LAB => NULL,
                                                  A_EQ => NULL,
                                                  A_EQ_VERSION => NULL,
                                                  A_PLANNED_EXECUTOR => NULL,
                                                  A_PLANNED_EQ => NULL,
                                                  A_PLANNED_EQ_VERSION => NULL,
                                                  A_DELAY => NULL,
                                                  A_DELAY_UNIT => NULL,
                                                  A_FORMAT => NULL,
                                                  A_ACCURACY => NULL,
                                                  A_REAL_COST => NULL,
                                                  A_REAL_TIME => NULL,
                                                  A_SOP => NULL,
                                                  A_SOP_VERSION => NULL,
                                                  A_PLAUS_LOW => NULL,
                                                  A_PLAUS_HIGH => NULL,
                                                  A_ME_CLASS => NULL);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         UNAPIGEN.P_TXN_ERROR := L_RET_CODE;
                     L_SQLERRM := 'sc=' || A_SC || '#pg=' || A_PG ||
                     '#pgnode=' || TO_CHAR(A_PGNODE) ||
                     '#pa=' || A_PA ||
                     '#panode=' || TO_CHAR(A_PANODE) ||
                     '#me=' || A_ME ||
                     '#menode=' || TO_CHAR(A_MENODE) ||
                     '#UpdateLinkedScMeCell#ErrorCode=' || TO_CHAR(L_RET_CODE);
         RAISE STPERROR;
      END IF;

   END IF;
   
   
   REMOVEALLNODESFROMBUFFER;

   
   L_IGNORED_RET_CODE := UNAPIAUT.DISABLEARCHECK(L_ORIG_AR_CHECK_MODE);

   IF UNAPIGEN.ENDTXN <> UNAPIGEN.DBERR_SUCCESS THEN
      RAISE STPERROR;
   END IF;
   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      UNAPIGEN.LOGERROR('HandleScMeCellOutput',SQLERRM);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIGEN.LOGERROR('HandleScMeCellOutput',L_SQLERRM);
   END IF;
   IF L_PG_CURSOR%ISOPEN THEN
      CLOSE L_PG_CURSOR;
   END IF;
   IF L_PA_CURSOR%ISOPEN THEN
      CLOSE L_PA_CURSOR;
   END IF;
   IF L_ME_CURSOR%ISOPEN THEN
      CLOSE L_ME_CURSOR;
   END IF;
   IF L_RD_CURSOR%ISOPEN THEN
      CLOSE L_RD_CURSOR;
   END IF;
   IF L_MECELLLIST_L_CURSOR%ISOPEN THEN
      CLOSE L_MECELLLIST_L_CURSOR;
   END IF;
   IF L_MECELLLIST_T_CURSOR%ISOPEN THEN
      CLOSE L_MECELLLIST_T_CURSOR;
   END IF;
   IF L_AU_CURSOR%ISOPEN THEN
      CLOSE L_AU_CURSOR;
   END IF;
   IF L_FINDPGNODE_CURSOR%ISOPEN THEN
      CLOSE L_FINDPGNODE_CURSOR;
   END IF;
   IF L_FINDPANODE_CURSOR%ISOPEN THEN
      CLOSE L_FINDPANODE_CURSOR;
   END IF;
   IF L_FINDMENODE_CURSOR%ISOPEN THEN
      CLOSE L_FINDMENODE_CURSOR;
   END IF;
   IF L_FIRST_PG_AFTER_CURSOR%ISOPEN THEN
      CLOSE L_FIRST_PG_AFTER_CURSOR;
   END IF;
   IF L_FIRST_PA_AFTER_CURSOR%ISOPEN THEN
      CLOSE L_FIRST_PA_AFTER_CURSOR;
   END IF;
   IF L_FIRST_ME_AFTER_CURSOR%ISOPEN THEN
      CLOSE L_FIRST_ME_AFTER_CURSOR;
   END IF;
   IF L_OBJECTS_CURSOR%ISOPEN THEN
     CLOSE L_OBJECTS_CURSOR;
   END IF;
   
   L_IGNORED_RET_CODE := UNAPIAUT.DISABLEARCHECK(L_ORIG_AR_CHECK_MODE);
   RETURN(UNAPIGEN.ABORTTXN(UNAPIGEN.P_TXN_ERROR, 'HandleScMeCellOutput'));
END HANDLESCMECELLOUTPUT;

END UNAPIME5;