PACKAGE BODY unapitt AS

L_SQLERRM         VARCHAR2(255);
L_SQL_STRING      VARCHAR2(2000);
L_WHERE_CLAUSE    VARCHAR2(1000);
L_RET_CODE        NUMBER;
L_RESULT          NUMBER;
L_FETCHED_ROWS    NUMBER;
STPERROR          EXCEPTION;

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
      RETURN (NULL);
END GETVERSION;

FUNCTION GETTITLEFORMAT
(A_WINDOW          OUT     UNAPIGEN.VC40_TABLE_TYPE,    
 A_TITLE_FORMAT    OUT     UNAPIGEN.VC255_TABLE_TYPE,   
 A_NR_OF_ROWS      IN OUT  NUMBER,                      
 A_WHERE_CLAUSE    IN      VARCHAR2)                    
RETURN NUMBER IS

L_WINDOW             VARCHAR2(40);
L_TITLE_FORMAT       VARCHAR2(255);
L_TITLE_CURSOR       INTEGER;

BEGIN

   IF NVL(A_NR_OF_ROWS, 0) = 0 THEN
      A_NR_OF_ROWS := UNAPIGEN.P_DEFAULT_CHUNK_SIZE;
   ELSIF A_NR_OF_ROWS < 0 OR A_NR_OF_ROWS > UNAPIGEN.P_MAX_CHUNK_SIZE THEN
      RETURN (UNAPIGEN.DBERR_NROFROWS);
   END IF;

   IF NVL(A_WHERE_CLAUSE, ' ') = ' ' THEN
      L_WHERE_CLAUSE := ' ORDER BY window, title_format'; 
   ELSIF UPPER(SUBSTR(A_WHERE_CLAUSE,1,6)) <> 'WHERE ' THEN
      L_WHERE_CLAUSE := ' WHERE window = ''' || REPLACE(A_WHERE_CLAUSE, '''', '''''') || 
                        ''' ORDER BY window, title_format';
   ELSE
      L_WHERE_CLAUSE := A_WHERE_CLAUSE; 
   END IF;
   
   L_TITLE_CURSOR := DBMS_SQL.OPEN_CURSOR;

   L_SQL_STRING := 'SELECT window, title_format ' ||
                   'FROM dd'||UNAPIGEN.P_DD||'.uvtitlefmt ' || L_WHERE_CLAUSE;
   DBMS_SQL.PARSE(L_TITLE_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 

   DBMS_SQL.DEFINE_COLUMN(L_TITLE_CURSOR, 1, L_WINDOW, 20);
   DBMS_SQL.DEFINE_COLUMN(L_TITLE_CURSOR, 2, L_TITLE_FORMAT, 255);
   L_RESULT := DBMS_SQL.EXECUTE_AND_FETCH(L_TITLE_CURSOR);
   L_FETCHED_ROWS := 0;

   LOOP
      EXIT WHEN L_RESULT = 0 OR L_FETCHED_ROWS >= A_NR_OF_ROWS;

      DBMS_SQL.COLUMN_VALUE(L_TITLE_CURSOR, 1, L_WINDOW);
      DBMS_SQL.COLUMN_VALUE(L_TITLE_CURSOR, 2, L_TITLE_FORMAT);

      L_FETCHED_ROWS := L_FETCHED_ROWS + 1;

      A_WINDOW   (L_FETCHED_ROWS) := L_WINDOW;
      A_TITLE_FORMAT(L_FETCHED_ROWS) := L_TITLE_FORMAT;

      IF L_FETCHED_ROWS < A_NR_OF_ROWS THEN
         L_RESULT := DBMS_SQL.FETCH_ROWS(L_TITLE_CURSOR);
      END IF;
   END LOOP;

   DBMS_SQL.CLOSE_CURSOR(L_TITLE_CURSOR);

   IF L_FETCHED_ROWS = 0 THEN
      L_RET_CODE := UNAPIGEN.DBERR_NORECORDS;
   ELSE
      A_NR_OF_ROWS := L_FETCHED_ROWS;
      L_RET_CODE := UNAPIGEN.DBERR_SUCCESS;
   END IF;

   RETURN(L_RET_CODE);

EXCEPTION
WHEN OTHERS THEN
   UNAPIGEN.LOGERROR('GetTitleFormat', SQLERRM);
   IF DBMS_SQL.IS_OPEN (L_TITLE_CURSOR) THEN
      DBMS_SQL.CLOSE_CURSOR (L_TITLE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END GETTITLEFORMAT;


FUNCTION SAVETITLEFORMAT
(A_WINDOW          IN       UNAPIGEN.VC40_TABLE_TYPE,  
 A_TITLE_FORMAT    IN       UNAPIGEN.VC255_TABLE_TYPE, 
 A_NR_OF_ROWS      IN       NUMBER)                    
RETURN NUMBER IS

BEGIN

   IF UNAPIGEN.BEGINTXN(UNAPIGEN.P_SINGLE_API_TXN) <>
      UNAPIGEN.DBERR_SUCCESS THEN
      RAISE STPERROR;
   END IF;

   DELETE
   FROM UTTITLEFMT;


   FOR L_CTR IN 1..A_NR_OF_ROWS LOOP

      IF NVL(A_WINDOW(L_CTR), ' ') = ' ' THEN
         UNAPIGEN.P_TXN_ERROR := UNAPIGEN.DBERR_NOOBJID;
         RAISE STPERROR;
      END IF;
   
      INSERT INTO UTTITLEFMT(WINDOW, TITLE_FORMAT)
      VALUES(A_WINDOW(L_CTR), A_TITLE_FORMAT(L_CTR));
   END LOOP;

   IF UNAPIGEN.ENDTXN <> UNAPIGEN.DBERR_SUCCESS THEN
      RAISE STPERROR;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      UNAPIGEN.LOGERROR('SaveTitles',SQLERRM);
   END IF;
   RETURN(UNAPIGEN.ABORTTXN(UNAPIGEN.P_TXN_ERROR, 'SaveTitleFormat'));
END SAVETITLEFORMAT;


END UNAPITT;