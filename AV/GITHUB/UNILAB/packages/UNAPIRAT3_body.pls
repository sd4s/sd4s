PACKAGE BODY unapirat3 AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVETP3FROMARCHIVE
RETURN NUMBER IS
BEGIN
   
   DELETE FROM UAUTAD;
   DELETE FROM UAUTADAU;
   DELETE FROM UAUTADHS;
   DELETE FROM UAUTADHSDETAILS;
   DELETE FROM UAUTDD;
   DELETE FROM UAUTUP;
   DELETE FROM UAUTUPAU;
   DELETE FROM UAUTUPFA;
   DELETE FROM UAUTUPHS;
   DELETE FROM UAUTUPTK;
   DELETE FROM UAUTUPPREF;
   DELETE FROM UAUTUPHSDETAILS;
   DELETE FROM UAUTUPTKDETAILS;
   DELETE FROM UAUTUPUS;
   DELETE FROM UAUTUPUSEL;
   DELETE FROM UAUTUPUSFA;
   DELETE FROM UAUTUPUSTK;
   DELETE FROM UAUTUPUSPREF;
   DELETE FROM UAUTUPUSTKDETAILS;
   DELETE FROM UAUTUPUSOUTLOOKPAGES;
   DELETE FROM UAUTUPUSOUTLOOKTASKS;
   DELETE FROM UAUTFA;
   DELETE FROM UAUTEL;
   DELETE FROM UAUTTK;
   DELETE FROM UAUTTKHS;
   DELETE FROM UAUTTKSQL;
   DELETE FROM UAUTTKPREF;
   DELETE FROM UAUTTKHSDETAILS;
   DELETE FROM UAUTSS;
   DELETE FROM UAUTSSWL;
   DELETE FROM UAUTUC;
   DELETE FROM UAUTUCAU;
   DELETE FROM UAUTUCHS;
   DELETE FROM UAUTUCHSDETAILS;
   DELETE FROM UAUTUCAUDITTRAIL;
   DELETE FROM UAUTUCOBJECTCOUNTER;
   DELETE FROM UAUTCOMMENT;
   DELETE FROM UAUTCOUNTER;
   DELETE FROM UAUTAPPLIC;
   DELETE FROM UAUTCD;
   DELETE FROM UAUTOBJECTS;
   DELETE FROM UAUTOTDETAILS;
   DELETE FROM UAUTPREF;
   DELETE FROM UAUTPREFLIST;
   DELETE FROM UAUTPRINTCMDS;
   DELETE FROM UAUTQUALIFICATION;
   DELETE FROM UAUTSYSTEM;
   DELETE FROM UAUTSYSTEMCOST;
   DELETE FROM UAUTSYSTEMLIST;
   DELETE FROM UAUTTITLEFMT;
   DELETE FROM UAUTUICOMPONENT;
   DELETE FROM UAUTWEEKNR;
   DELETE FROM UAUTCATALOGUEID;
   DELETE FROM UAUTCATALOGUEDETAILS;
   DELETE FROM UAUTCURRENCY;
   DELETE FROM UAUTDBA;
   DELETE FROM UAUTDECODE;
   DELETE FROM UAUTEDTBL;
   DELETE FROM UAUTEDTBLHS;
   DELETE FROM UAUTEDTBLHSDETAILS;
   DELETE FROM UAUTEVRULES;
   DELETE FROM UAUTGKSUPPORTEDEV;
   DELETE FROM UAUTKEYPP;
   DELETE FROM UAUTLAB;
   DELETE FROM UAUTLABEL;
   DELETE FROM UAUTLU;
   DELETE FROM UAUTUNIT;
   DELETE FROM UAUTVFORMAT;
   DELETE FROM UAUTYEARNR;
   DELETE FROM UAUTFI;
   DELETE FROM UAUTFIHS;
   DELETE FROM UAUTFIHSDETAILS;
   DELETE FROM UAUTLO;
   DELETE FROM UAUTLOAU;
   DELETE FROM UAUTLOCS;
   DELETE FROM UAUTCS;
   DELETE FROM UAUTCSAU;
   DELETE FROM UAUTCSCN;
   DELETE FROM UAUTXSLT;
   DELETE FROM UAUTCYSTYLE;
   DELETE FROM UAUTSAPCODE;
   DELETE FROM UAUTSAPUNIT;
   DELETE FROM UAUTULPEERS;
   DELETE FROM UAUTSAPPLANT;
   DELETE FROM UAUTSAPMETHOD;
   DELETE FROM UAUTCYSTYLELIST;
   DELETE FROM UAUTSAPLOCATION;
   DELETE FROM UAUTSAPCODEGROUP;
   DELETE FROM UAUTSAPOPERATION;

   
   DELETE FROM UAUTSHORTCUT
   WHERE KEY_TP <> 'au';

   

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVETP3FROMARCHIVE;




FUNCTION COPYTP3TOARCHDB
RETURN NUMBER IS
BEGIN
   
   INSERT INTO UAUTAD
      (AD, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, IS_TEMPLATE, IS_USER, STRUCT_CREATED,
      AD_TP, PERSON, TITLE, FUNCTION_NAME, DEF_UP, COMPANY, STREET, CITY, STATE,
      COUNTRY, AD_NR, PO_BOX, ZIP_CODE, PHONE_NR, EXT_NR, FAX_NR, EMAIL,
      LAST_COMMENT, AD_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS)
   SELECT  AD, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, IS_TEMPLATE, IS_USER, STRUCT_CREATED,
      AD_TP, PERSON, TITLE, FUNCTION_NAME, DEF_UP, COMPANY, STREET, CITY, STATE,
      COUNTRY, AD_NR, PO_BOX, ZIP_CODE, PHONE_NR, EXT_NR, FAX_NR, EMAIL,
      LAST_COMMENT, AD_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS
   FROM UTAD;
   INSERT INTO UAUTADAU
      (AD, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        AD, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTADAU;
   INSERT INTO UAUTADHS
      (AD, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  AD, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTADHS;
   INSERT INTO UAUTADHSDETAILS
      (AD, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        AD, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTADHSDETAILS;
   INSERT INTO UAUTDD
      (DD, DESCRIPTION)
   SELECT        DD, DESCRIPTION
   FROM UTDD;
   INSERT INTO UAUTUP
      (UP, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, DD, DESCR_DOC,
      DESCR_DOC_VERSION, CHG_PWD, DEFINE_MENU, CONFIRM_CHG_SS, LANGUAGE,
      LAST_COMMENT, UP_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS)
   SELECT  UP, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, DD, DESCR_DOC,
      DESCR_DOC_VERSION, CHG_PWD, DEFINE_MENU, CONFIRM_CHG_SS, LANGUAGE,
      LAST_COMMENT, UP_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS
   FROM UTUP;
   INSERT INTO UAUTUPAU
      (UP, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        UP, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTUPAU;
   INSERT INTO UAUTUPFA
      (UP, VERSION, APPLIC, TOPIC, FA, INHERIT_FA)
   SELECT        UP, VERSION, APPLIC, TOPIC, FA, INHERIT_FA
   FROM UTUPFA;
   INSERT INTO UAUTUPHS
      (UP, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  UP, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTUPHS;
   INSERT INTO UAUTUPTK
      (UP, VERSION, SEQ, TK_TP, TK, IS_ENABLED)
   SELECT        UP, VERSION, SEQ, TK_TP, TK, IS_ENABLED
   FROM UTUPTK;
   INSERT INTO UAUTUPPREF
      (UP, VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF)
   SELECT        UP, VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF
   FROM UTUPPREF;
   INSERT INTO UAUTUPHSDETAILS
      (UP, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        UP, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTUPHSDETAILS;
   INSERT INTO UAUTUPTKDETAILS
      (UP, VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ, OPERAT, DEF_VAL,
      ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH, COL_ASC, OPERAT_PROTECT,
      ANDOR_PROTECT, DSP_LEN, INHERIT_TK)
   SELECT  UP, VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ, OPERAT, DEF_VAL,
      ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH, COL_ASC, OPERAT_PROTECT,
      ANDOR_PROTECT, DSP_LEN, INHERIT_TK
   FROM UTUPTKDETAILS;
   INSERT INTO UAUTUPUS
      (UP, VERSION, US, US_VERSION)
   SELECT        UP, VERSION, US, US_VERSION
   FROM UTUPUS;
   INSERT INTO UAUTUPUSEL
      (UP, VERSION, US, US_VERSION, EL, IS_ENABLED, SEQ)
   SELECT        UP, VERSION, US, US_VERSION, EL, IS_ENABLED, SEQ
   FROM UTUPUSEL;
   INSERT INTO UAUTUPUSFA
      (UP, VERSION, US, US_VERSION, APPLIC, TOPIC, FA, INHERIT_FA)
   SELECT        UP, VERSION, US, US_VERSION, APPLIC, TOPIC, FA, INHERIT_FA
   FROM UTUPUSFA;
   INSERT INTO UAUTUPUSTK
      (UP, VERSION, US, US_VERSION, SEQ, TK_TP, TK, IS_ENABLED)
   SELECT        UP, VERSION, US, US_VERSION, SEQ, TK_TP, TK, IS_ENABLED
   FROM UTUPUSTK;
   INSERT INTO UAUTUPUSPREF
      (UP, VERSION, US, US_VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF)
   SELECT        UP, VERSION, US, US_VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF
   FROM UTUPUSPREF;
   INSERT INTO UAUTUPUSTKDETAILS
      (UP, VERSION, US, US_VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ,
      OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, OPERAT_PROTECT, ANDOR_PROTECT, DSP_LEN, INHERIT_TK)
   SELECT  UP, VERSION, US, US_VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ,
      OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, OPERAT_PROTECT, ANDOR_PROTECT, DSP_LEN, INHERIT_TK
   FROM UTUPUSTKDETAILS;
   INSERT INTO UAUTUPUSOUTLOOKPAGES
      (UP, US, SEQ, PAGE_ID, PAGE_DESCRIPTION, PAGE_TP, ACTIVE)
   SELECT        UP, US, SEQ, PAGE_ID, PAGE_DESCRIPTION, PAGE_TP, ACTIVE
   FROM UTUPUSOUTLOOKPAGES;
   INSERT INTO UAUTUPUSOUTLOOKTASKS
      (UP, US, PAGE_ID, SEQ, TK, TK_TP, DESCRIPTION, ICON_NAME, ICON_NBR, CMD_LINE,
      ACTIVE)
   SELECT  UP, US, PAGE_ID, SEQ, TK, TK_TP, DESCRIPTION, ICON_NAME, ICON_NBR, CMD_LINE,
      ACTIVE
   FROM UTUPUSOUTLOOKTASKS;
   INSERT INTO UAUTFA
      (APPLIC, DESCRIPTION, SEQ, TOPIC, TOPIC_DESCRIPTION, FA)
   SELECT        APPLIC, DESCRIPTION, SEQ, TOPIC, TOPIC_DESCRIPTION, FA
   FROM UTFA;
   INSERT INTO UAUTEL
      (EL, DESCR_DOC, DESCR_DOC_VERSION)
   SELECT        EL, DESCR_DOC, DESCR_DOC_VERSION
   FROM UTEL;
   INSERT INTO UAUTTK
      (TK_TP, TK, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, COL_ID, COL_TP, DSP_TITLE,
      SEQ, OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, DSP_LEN, LAST_COMMENT, TK_CLASS, VALUE_LIST_TP, OPERAT_PROTECT,
      ANDOR_PROTECT, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION,
      SS)
   SELECT  TK_TP, TK, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, COL_ID, COL_TP, DSP_TITLE,
      SEQ, OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, DSP_LEN, LAST_COMMENT, TK_CLASS, VALUE_LIST_TP, OPERAT_PROTECT,
      ANDOR_PROTECT, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION,
      SS
   FROM UTTK;
   INSERT INTO UAUTTKHS
      (TK_TP, TK, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  TK_TP, TK, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTTKHS;
   INSERT INTO UAUTTKSQL
      (TK, TK_TP, VERSION, COL_ID, COL_TP, SQLSEQ, SQLTEXT)
   SELECT        TK, TK_TP, VERSION, COL_ID, COL_TP, SQLSEQ, SQLTEXT
   FROM UTTKSQL;
   INSERT INTO UAUTTKPREF
      (TK_TP, TK, VERSION, PREF_NAME, SEQ, PREF_VALUE)
   SELECT        TK_TP, TK, VERSION, PREF_NAME, SEQ, PREF_VALUE
   FROM UTTKPREF;
   INSERT INTO UAUTTKHSDETAILS
      (TK_TP, TK, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        TK_TP, TK, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTTKHSDETAILS;
   INSERT INTO UAUTSS
      (SS, NAME, DESCRIPTION, COLOR, SHORTCUT, ALLOW_MODIFY, ACTIVE, SS_CLASS)
   SELECT        SS, NAME, DESCRIPTION, COLOR, SHORTCUT, ALLOW_MODIFY, ACTIVE, SS_CLASS
   FROM UTSS;
   INSERT INTO UAUTSSWL
      (SS, ENTRY_ACTION, GK_ENTRY, GK_VERSION, ENTRY_TP, USE_VALUE)
   SELECT        SS, ENTRY_ACTION, GK_ENTRY, GK_VERSION, ENTRY_TP, USE_VALUE
   FROM UTSSWL;
   INSERT INTO UAUTUC
      (UC, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, UC_STRUCTURE, CURR_VAL,
      DEF_MASK_FOR, EDIT_ALLOWED, VALID_CF, LAST_COMMENT, LOG_HS, LOG_HS_DETAILS,
      ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS)
   SELECT  UC, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, UC_STRUCTURE, CURR_VAL,
      DEF_MASK_FOR, EDIT_ALLOWED, VALID_CF, LAST_COMMENT, LOG_HS, LOG_HS_DETAILS,
      ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS
   FROM UTUC;
   INSERT INTO UAUTUCAU
      (UC, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        UC, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTUCAU;
   INSERT INTO UAUTUCHS
      (UC, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  UC, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTUCHS;
   INSERT INTO UAUTUCHSDETAILS
      (UC, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        UC, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTUCHSDETAILS;
   INSERT INTO UAUTUCAUDITTRAIL
      (UC, VERSION, CURR_VAL, REF_DATE, REF_DATE_TZ, LOGDATE, LOGDATE_TZ, US,
      CLIENT_ID, APPLIC, SID, SERIAL#, OSUSER, TERMINAL, PROGRAM, LOGON_TIME,
      LOGON_TIME_TZ)
   SELECT  UC, VERSION, CURR_VAL, REF_DATE, REF_DATE_TZ, LOGDATE, LOGDATE_TZ, US,
      CLIENT_ID, APPLIC, SID, SERIAL#, OSUSER, TERMINAL, PROGRAM, LOGON_TIME,
      LOGON_TIME_TZ
   FROM UTUCAUDITTRAIL;
   INSERT INTO UAUTUCOBJECTCOUNTER
      (OBJECT_TP, OBJECT_ID, OBJECT_COUNTER)
   SELECT        OBJECT_TP, OBJECT_ID, OBJECT_COUNTER
   FROM UTUCOBJECTCOUNTER;
   INSERT INTO UAUTCOMMENT
      (COMMENT_GROUP, SEQ, STD_COMMENT)
   SELECT        COMMENT_GROUP, SEQ, STD_COMMENT
   FROM UTCOMMENT;
   INSERT INTO UAUTCOUNTER
      (COUNTER, CURR_CNT, LOW_CNT, HIGH_CNT, INCR_CNT, FIXED_LENGTH, CIRCULAR)
   SELECT        COUNTER, CURR_CNT, LOW_CNT, HIGH_CNT, INCR_CNT, FIXED_LENGTH, CIRCULAR
   FROM UTCOUNTER;
   INSERT INTO UAUTAPPLIC
      (APPLIC, DESCRIPTION)
   SELECT        APPLIC, DESCRIPTION
   FROM UTAPPLIC;
   INSERT INTO UAUTCD
      (CD, SETTING_NAME, SETTING_VALUE, SETTING_SEQ)
   SELECT        CD, SETTING_NAME, SETTING_VALUE, SETTING_SEQ
   FROM UTCD;
   INSERT INTO UAUTOBJECTS
      (OBJECT, DESCRIPTION, DEF_LC, LOG_HS, LOG_HS_DETAILS, AR)
   SELECT        OBJECT, DESCRIPTION, DEF_LC, LOG_HS, LOG_HS_DETAILS, AR
   FROM UTOBJECTS;
   INSERT INTO UAUTOTDETAILS
      (COL_TP, SEQ, COL_ID, COL_LEN, DISP_TP, DISP_TITLE, DISP_STYLE, DISP_WIDTH,
      DISP_FORMAT)
   SELECT  COL_TP, SEQ, COL_ID, COL_LEN, DISP_TP, DISP_TITLE, DISP_STYLE, DISP_WIDTH,
      DISP_FORMAT
   FROM UTOTDETAILS;
   INSERT INTO UAUTPREF
      (PREF_TP, PREF_NAME, SEQ, PREF_VALUE, APPLICABLE_OBJ, CATEGORY, DESCRIPTION)
   SELECT        PREF_TP, PREF_NAME, SEQ, PREF_VALUE, APPLICABLE_OBJ, CATEGORY, DESCRIPTION
   FROM UTPREF;
   INSERT INTO UAUTPREFLIST
      (PREF_TP, PREF_NAME, SEQ, PREF_VALUE, IS_DEFAULT)
   SELECT        PREF_TP, PREF_NAME, SEQ, PREF_VALUE, IS_DEFAULT
   FROM UTPREFLIST;
   INSERT INTO UAUTPRINTCMDS
      (APPLIC, WINDOW, PRINT_CURR_LAYOUT, PRINT_FULL_DETAILS)
   SELECT        APPLIC, WINDOW, PRINT_CURR_LAYOUT, PRINT_FULL_DETAILS
   FROM UTPRINTCMDS;
   INSERT INTO UAUTQUALIFICATION
      (QUALIFICATION, DESCRIPTION)
   SELECT        QUALIFICATION, DESCRIPTION
   FROM UTQUALIFICATION;
   INSERT INTO UAUTSYSTEM
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UTSYSTEM;
   INSERT INTO UAUTSYSTEMCOST
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UTSYSTEMCOST;
   INSERT INTO UAUTSYSTEMLIST
      (SETTING_NAME, SEQ, SETTING_VALUE)
   SELECT        SETTING_NAME, SEQ, SETTING_VALUE
   FROM UTSYSTEMLIST;
   INSERT INTO UAUTTITLEFMT
      (WINDOW, TITLE_FORMAT)
   SELECT        WINDOW, TITLE_FORMAT
   FROM UTTITLEFMT;
   INSERT INTO UAUTUICOMPONENT
      (COMPONENT_TP, COMPONENT_ID, SEQ, COL_TP, DISP_TITLE)
   SELECT        COMPONENT_TP, COMPONENT_ID, SEQ, COL_TP, DISP_TITLE
   FROM UTUICOMPONENT;
   INSERT INTO UAUTWEEKNR
      (DAY_OF_YEAR, DAY_OF_YEAR_TZ, DAY_OF_WEEK, WEEK_NR, YEAR_NR, DAY_CNT,
      WEEK_CNT)
   SELECT  DAY_OF_YEAR, DAY_OF_YEAR_TZ, DAY_OF_WEEK, WEEK_NR, YEAR_NR, DAY_CNT,
      WEEK_CNT
   FROM UTWEEKNR;
   INSERT INTO UAUTCATALOGUEID
      (CATALOGUE, DESCRIPTION, CATALOGUE_TYPE)
   SELECT        CATALOGUE, DESCRIPTION, CATALOGUE_TYPE
   FROM UTCATALOGUEID;
   INSERT INTO UAUTCATALOGUEDETAILS
      (CATALOGUE, FROM_DATE, FROM_DATE_TZ, TO_DATE, TO_DATE_TZ, SEQ_NR, OBJECT_TP,
      OBJECT_ID, OBJECT_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5,
      CRITERIUM1, CRITERIUM2, CRITERIUM3, DESCRIPTION, INPUT_PRICE, INPUT_CURR,
      DISC_ABS, DISC_REL, CALC_DISC, NET_PRICE, AC_CODE)
   SELECT  CATALOGUE, FROM_DATE, FROM_DATE_TZ, TO_DATE, TO_DATE_TZ, SEQ_NR, OBJECT_TP,
      OBJECT_ID, OBJECT_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5,
      CRITERIUM1, CRITERIUM2, CRITERIUM3, DESCRIPTION, INPUT_PRICE, INPUT_CURR,
      DISC_ABS, DISC_REL, CALC_DISC, NET_PRICE, AC_CODE
   FROM UTCATALOGUEDETAILS;
   INSERT INTO UAUTCURRENCY
      (CURRENCY, IS_DEFAULT, ROUNDING, CONVERSION)
   SELECT        CURRENCY, IS_DEFAULT, ROUNDING, CONVERSION
   FROM UTCURRENCY;
   INSERT INTO UAUTDBA
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UTDBA;
   INSERT INTO UAUTDECODE
      (CODE_TP, CODE, DESCRIPTION1, DESCRIPTION2, DESCRIPTION3, DESCRIPTION4,
      DESCRIPTION5, DESCRIPTION6, DESCRIPTION7, DESCRIPTION8, DESCRIPTION9,
      DESCRIPTION10)
   SELECT  CODE_TP, CODE, DESCRIPTION1, DESCRIPTION2, DESCRIPTION3, DESCRIPTION4,
      DESCRIPTION5, DESCRIPTION6, DESCRIPTION7, DESCRIPTION8, DESCRIPTION9,
      DESCRIPTION10
   FROM UTDECODE;
   INSERT INTO UAUTEDTBL
      (SEQ, TABLE_NAME, DESCRIPTION, LOG_HS, LOG_HS_DETAILS, WHERE_CLAUSE)
   SELECT        SEQ, TABLE_NAME, DESCRIPTION, LOG_HS, LOG_HS_DETAILS, WHERE_CLAUSE
   FROM UTEDTBL;
   INSERT INTO UAUTEDTBLHS
      (TABLE_NAME, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  TABLE_NAME, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTEDTBLHS;
   INSERT INTO UAUTEDTBLHSDETAILS
      (TABLE_NAME, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        TABLE_NAME, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTEDTBLHSDETAILS;
   INSERT INTO UAUTEVRULES
      (RULE_NR, APPLIC, DBAPI_NAME, OBJECT_TP, OBJECT_ID, OBJECT_LC,
      OBJECT_LC_VERSION, OBJECT_SS, EV_TP, CONDITION, AF, AF_DELAY, AF_DELAY_UNIT,
      CUSTOM)
   SELECT  RULE_NR, APPLIC, DBAPI_NAME, OBJECT_TP, OBJECT_ID, OBJECT_LC,
      OBJECT_LC_VERSION, OBJECT_SS, EV_TP, CONDITION, AF, AF_DELAY, AF_DELAY_UNIT,
      CUSTOM
   FROM UTEVRULES;
   INSERT INTO UAUTGKSUPPORTEDEV
      (EV_TP)
   SELECT        EV_TP
   FROM UTGKSUPPORTEDEV;
   INSERT INTO UAUTKEYPP
      (SEQ, KEY_TP, KEY_NAME, DESCRIPTION)
   SELECT        SEQ, KEY_TP, KEY_NAME, DESCRIPTION
   FROM UTKEYPP;
   INSERT INTO UAUTLAB
      (LAB)
   SELECT        LAB
   FROM UTLAB;
   INSERT INTO UAUTLABEL
      (LABEL_FORMAT, SEQ, VALUE)
   SELECT        LABEL_FORMAT, SEQ, VALUE
   FROM UTLABEL;
   INSERT INTO UAUTLU
      (LU, SEQ, STRING_VAL, NUM_VAL, SHORTCUT)
   SELECT        LU, SEQ, STRING_VAL, NUM_VAL, SHORTCUT
   FROM UTLU;
   INSERT INTO UAUTUNIT
      (UNIT, UNIT_TP, CONV_FACTOR)
   SELECT        UNIT, UNIT_TP, CONV_FACTOR
   FROM UTUNIT;
   INSERT INTO UAUTVFORMAT
      (RANGE_NAME, SEQ, RANGE_MIN_BOUNDARY, RANGE_MIN, RANGE_MAX,
      RANGE_MAX_BOUNDARY, FORMAT)
   SELECT  RANGE_NAME, SEQ, RANGE_MIN_BOUNDARY, RANGE_MIN, RANGE_MAX,
      RANGE_MAX_BOUNDARY, FORMAT
   FROM UTVFORMAT;
   INSERT INTO UAUTYEARNR
      (MONTH_OF_YEAR, MONTH_OF_YEAR_TZ, MONTH_CNT, YEAR_CNT)
   SELECT        MONTH_OF_YEAR, MONTH_OF_YEAR_TZ, MONTH_CNT, YEAR_CNT
   FROM UTYEARNR;
   INSERT INTO UAUTFI
      (FI, VERSION, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ, EFFECTIVE_TILL,
      EFFECTIVE_TILL_TZ, CREATION_DATE, CREATION_DATE_TZ, CREATED_BY, DLL_ID,
      CPP_ID, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS)
   SELECT  FI, VERSION, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ, EFFECTIVE_TILL,
      EFFECTIVE_TILL_TZ, CREATION_DATE, CREATION_DATE_TZ, CREATED_BY, DLL_ID,
      CPP_ID, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS
   FROM UTFI;
   INSERT INTO UAUTFIHS
      (FI, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  FI, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTFIHS;
   INSERT INTO UAUTFIHSDETAILS
      (FI, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        FI, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTFIHSDETAILS;
   INSERT INTO UAUTLO
      (LO, DESCRIPTION, DESCRIPTION2, NR_SC_MAX, CURR_NR_SC, IS_TEMPLATE)
   SELECT        LO, DESCRIPTION, DESCRIPTION2, NR_SC_MAX, CURR_NR_SC, IS_TEMPLATE
   FROM UTLO;
   INSERT INTO UAUTLOAU
      (LO, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        LO, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTLOAU;
   INSERT INTO UAUTLOCS
      (LO, CS, SEQ)
   SELECT        LO, CS, SEQ
   FROM UTLOCS;
   INSERT INTO UAUTCS
      (CS, DESCRIPTION, DESCRIPTION2)
   SELECT        CS, DESCRIPTION, DESCRIPTION2
   FROM UTCS;
   INSERT INTO UAUTCSAU
      (CS, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        CS, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTCSAU;
   INSERT INTO UAUTCSCN
      (CS, CN, CNSEQ, VALUE)
   SELECT        CS, CN, CNSEQ, VALUE
   FROM UTCSCN;
   INSERT INTO UAUTXSLT
      (OBJ_ID, USAGE_TYPE, SEQ, LINE)
   SELECT        OBJ_ID, USAGE_TYPE, SEQ, LINE
   FROM UTXSLT;
   INSERT INTO UAUTCYSTYLE
      (VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE)
   SELECT        VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE
   FROM UTCYSTYLE;
   INSERT INTO UAUTSAPCODE
      (SAP_CODE_GROUP, SAP_CODE, UL_DESCRIPTION)
   SELECT        SAP_CODE_GROUP, SAP_CODE, UL_DESCRIPTION
   FROM UTSAPCODE;
   INSERT INTO UAUTSAPUNIT
      (SAP_UNIT_CODE, UL_UOM)
   SELECT        SAP_UNIT_CODE, UL_UOM
   FROM UTSAPUNIT;
   INSERT INTO UAUTULPEERS
      (SID, DESCRIPTION, IMPORT_URL)
   SELECT        SID, DESCRIPTION, IMPORT_URL
   FROM UTULPEERS;
   INSERT INTO UAUTSAPPLANT
      (SAP_PLANT_CODE, UL_PLANTNAME)
   SELECT        SAP_PLANT_CODE, UL_PLANTNAME
   FROM UTSAPPLANT;
   INSERT INTO UAUTSAPMETHOD
      (SAP_METHOD_CODE, UL_METHOD)
   SELECT        SAP_METHOD_CODE, UL_METHOD
   FROM UTSAPMETHOD;
   INSERT INTO UAUTCYSTYLELIST
      (VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE)
   SELECT        VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE
   FROM UTCYSTYLELIST;
   INSERT INTO UAUTSAPLOCATION
      (SAP_LOCATION_CODE, UL_LOCATION)
   SELECT        SAP_LOCATION_CODE, UL_LOCATION
   FROM UTSAPLOCATION;
   INSERT INTO UAUTSAPCODEGROUP
      (SAP_CODE_GROUP, UL_DESCRIPTION)
   SELECT        SAP_CODE_GROUP, UL_DESCRIPTION
   FROM UTSAPCODEGROUP;
   INSERT INTO UAUTSAPOPERATION
      (SAP_OPERATION_NR, UL_OPERATION)
   SELECT        SAP_OPERATION_NR, UL_OPERATION
   FROM UTSAPOPERATION;

   
   INSERT INTO UAUTSHORTCUT
      (SHORTCUT, KEY_TP, VALUE_S, VALUE_F, STORE_DB, RUN_MODE, SERVICE)
   SELECT
       SHORTCUT, KEY_TP, VALUE_S, VALUE_F, STORE_DB, RUN_MODE, SERVICE
   FROM UTSHORTCUT
   WHERE KEY_TP <> 'au';

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END COPYTP3TOARCHDB;

FUNCTION ARCHIVETP3TODB
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYTP3TOARCHDB;
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'CopyTp3ToArchDB#return='||TO_CHAR(L_RET_CODE);
      RAISE STPERROR;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveTp3ToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVETP3TODB;

FUNCTION COPYTP3FROMARCHDB
RETURN NUMBER IS
BEGIN
   
   INSERT INTO UTAD
      (AD, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, IS_TEMPLATE, IS_USER, STRUCT_CREATED,
      AD_TP, PERSON, TITLE, FUNCTION_NAME, DEF_UP, COMPANY, STREET, CITY, STATE,
      COUNTRY, AD_NR, PO_BOX, ZIP_CODE, PHONE_NR, EXT_NR, FAX_NR, EMAIL,
      LAST_COMMENT, AD_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS)
   SELECT  AD, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, IS_TEMPLATE, IS_USER, STRUCT_CREATED,
      AD_TP, PERSON, TITLE, FUNCTION_NAME, DEF_UP, COMPANY, STREET, CITY, STATE,
      COUNTRY, AD_NR, PO_BOX, ZIP_CODE, PHONE_NR, EXT_NR, FAX_NR, EMAIL,
      LAST_COMMENT, AD_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS
   FROM UAUTAD;
   INSERT INTO UTADAU
      (AD, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        AD, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTADAU;
   INSERT INTO UTADHS
      (AD, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  AD, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTADHS;
   INSERT INTO UTADHSDETAILS
      (AD, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        AD, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTADHSDETAILS;
   INSERT INTO UTDD
      (DD, DESCRIPTION)
   SELECT        DD, DESCRIPTION
   FROM UAUTDD;
   INSERT INTO UTUP
      (UP, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, DD, DESCR_DOC,
      DESCR_DOC_VERSION, CHG_PWD, DEFINE_MENU, CONFIRM_CHG_SS, LANGUAGE,
      LAST_COMMENT, UP_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS)
   SELECT  UP, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, DD, DESCR_DOC,
      DESCR_DOC_VERSION, CHG_PWD, DEFINE_MENU, CONFIRM_CHG_SS, LANGUAGE,
      LAST_COMMENT, UP_CLASS, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC,
      LC_VERSION, SS
   FROM UAUTUP;
   INSERT INTO UTUPAU
      (UP, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        UP, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTUPAU;
   INSERT INTO UTUPFA
      (UP, VERSION, APPLIC, TOPIC, FA, INHERIT_FA)
   SELECT        UP, VERSION, APPLIC, TOPIC, FA, INHERIT_FA
   FROM UAUTUPFA;
   INSERT INTO UTUPHS
      (UP, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  UP, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTUPHS;
   INSERT INTO UTUPTK
      (UP, VERSION, SEQ, TK_TP, TK, IS_ENABLED)
   SELECT        UP, VERSION, SEQ, TK_TP, TK, IS_ENABLED
   FROM UAUTUPTK;
   INSERT INTO UTUPPREF
      (UP, VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF)
   SELECT        UP, VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF
   FROM UAUTUPPREF;
   INSERT INTO UTUPHSDETAILS
      (UP, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        UP, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTUPHSDETAILS;
   INSERT INTO UTUPTKDETAILS
      (UP, VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ, OPERAT, DEF_VAL,
      ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH, COL_ASC, OPERAT_PROTECT,
      ANDOR_PROTECT, DSP_LEN, INHERIT_TK)
   SELECT  UP, VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ, OPERAT, DEF_VAL,
      ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH, COL_ASC, OPERAT_PROTECT,
      ANDOR_PROTECT, DSP_LEN, INHERIT_TK
   FROM UAUTUPTKDETAILS;
   INSERT INTO UTUPUS
      (UP, VERSION, US, US_VERSION)
   SELECT        UP, VERSION, US, US_VERSION
   FROM UAUTUPUS;
   INSERT INTO UTUPUSEL
      (UP, VERSION, US, US_VERSION, EL, IS_ENABLED, SEQ)
   SELECT        UP, VERSION, US, US_VERSION, EL, IS_ENABLED, SEQ
   FROM UAUTUPUSEL;
   INSERT INTO UTUPUSFA
      (UP, VERSION, US, US_VERSION, APPLIC, TOPIC, FA, INHERIT_FA)
   SELECT        UP, VERSION, US, US_VERSION, APPLIC, TOPIC, FA, INHERIT_FA
   FROM UAUTUPUSFA;
   INSERT INTO UTUPUSTK
      (UP, VERSION, US, US_VERSION, SEQ, TK_TP, TK, IS_ENABLED)
   SELECT        UP, VERSION, US, US_VERSION, SEQ, TK_TP, TK, IS_ENABLED
   FROM UAUTUPUSTK;
   INSERT INTO UTUPUSPREF
      (UP, VERSION, US, US_VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF)
   SELECT        UP, VERSION, US, US_VERSION, PREF_NAME, SEQ, PREF_VALUE, INHERIT_PREF
   FROM UAUTUPUSPREF;
   INSERT INTO UTUPUSTKDETAILS
      (UP, VERSION, US, US_VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ,
      OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, OPERAT_PROTECT, ANDOR_PROTECT, DSP_LEN, INHERIT_TK)
   SELECT  UP, VERSION, US, US_VERSION, TK_TP, TK, COL_ID, COL_TP, DSP_TITLE, SEQ,
      OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, OPERAT_PROTECT, ANDOR_PROTECT, DSP_LEN, INHERIT_TK
   FROM UAUTUPUSTKDETAILS;
   INSERT INTO UTUPUSOUTLOOKPAGES
      (UP, US, SEQ, PAGE_ID, PAGE_DESCRIPTION, PAGE_TP, ACTIVE)
   SELECT        UP, US, SEQ, PAGE_ID, PAGE_DESCRIPTION, PAGE_TP, ACTIVE
   FROM UAUTUPUSOUTLOOKPAGES;
   INSERT INTO UTUPUSOUTLOOKTASKS
      (UP, US, PAGE_ID, SEQ, TK, TK_TP, DESCRIPTION, ICON_NAME, ICON_NBR, CMD_LINE,
      ACTIVE)
   SELECT  UP, US, PAGE_ID, SEQ, TK, TK_TP, DESCRIPTION, ICON_NAME, ICON_NBR, CMD_LINE,
      ACTIVE
   FROM UAUTUPUSOUTLOOKTASKS;
   INSERT INTO UTFA
      (APPLIC, DESCRIPTION, SEQ, TOPIC, TOPIC_DESCRIPTION, FA)
   SELECT        APPLIC, DESCRIPTION, SEQ, TOPIC, TOPIC_DESCRIPTION, FA
   FROM UAUTFA;
   INSERT INTO UTEL
      (EL, DESCR_DOC, DESCR_DOC_VERSION)
   SELECT        EL, DESCR_DOC, DESCR_DOC_VERSION
   FROM UAUTEL;
   INSERT INTO UTTK
      (TK_TP, TK, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, COL_ID, COL_TP, DSP_TITLE,
      SEQ, OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, DSP_LEN, LAST_COMMENT, TK_CLASS, VALUE_LIST_TP, OPERAT_PROTECT,
      ANDOR_PROTECT, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION,
      SS)
   SELECT  TK_TP, TK, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, COL_ID, COL_TP, DSP_TITLE,
      SEQ, OPERAT, DEF_VAL, ANDOR, HIDDEN, IS_PROTECTED, MANDATORY, AUTO_REFRESH,
      COL_ASC, DSP_LEN, LAST_COMMENT, TK_CLASS, VALUE_LIST_TP, OPERAT_PROTECT,
      ANDOR_PROTECT, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION,
      SS
   FROM UAUTTK;
   INSERT INTO UTTKHS
      (TK_TP, TK, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  TK_TP, TK, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTTKHS;
   INSERT INTO UTTKSQL
      (TK, TK_TP, VERSION, COL_ID, COL_TP, SQLSEQ, SQLTEXT)
   SELECT        TK, TK_TP, VERSION, COL_ID, COL_TP, SQLSEQ, SQLTEXT
   FROM UAUTTKSQL;
   INSERT INTO UTTKPREF
      (TK_TP, TK, VERSION, PREF_NAME, SEQ, PREF_VALUE)
   SELECT        TK_TP, TK, VERSION, PREF_NAME, SEQ, PREF_VALUE
   FROM UAUTTKPREF;
   INSERT INTO UTTKHSDETAILS
      (TK_TP, TK, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        TK_TP, TK, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTTKHSDETAILS;
   INSERT INTO UTSS
      (SS, NAME, DESCRIPTION, COLOR, SHORTCUT, ALLOW_MODIFY, ACTIVE, SS_CLASS)
   SELECT        SS, NAME, DESCRIPTION, COLOR, SHORTCUT, ALLOW_MODIFY, ACTIVE, SS_CLASS
   FROM UAUTSS;
   INSERT INTO UTSSWL
      (SS, ENTRY_ACTION, GK_ENTRY, GK_VERSION, ENTRY_TP, USE_VALUE)
   SELECT        SS, ENTRY_ACTION, GK_ENTRY, GK_VERSION, ENTRY_TP, USE_VALUE
   FROM UAUTSSWL;
   INSERT INTO UTUC
      (UC, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, UC_STRUCTURE, CURR_VAL,
      DEF_MASK_FOR, EDIT_ALLOWED, VALID_CF, LAST_COMMENT, LOG_HS, LOG_HS_DETAILS,
      ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS)
   SELECT  UC, VERSION, VERSION_IS_CURRENT, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ,
      EFFECTIVE_TILL, EFFECTIVE_TILL_TZ, DESCRIPTION, UC_STRUCTURE, CURR_VAL,
      DEF_MASK_FOR, EDIT_ALLOWED, VALID_CF, LAST_COMMENT, LOG_HS, LOG_HS_DETAILS,
      ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS
   FROM UAUTUC;
   INSERT INTO UTUCAU
      (UC, VERSION, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        UC, VERSION, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTUCAU;
   INSERT INTO UTUCHS
      (UC, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  UC, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTUCHS;
   INSERT INTO UTUCHSDETAILS
      (UC, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        UC, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTUCHSDETAILS;
   INSERT INTO UTUCAUDITTRAIL
      (UC, VERSION, CURR_VAL, REF_DATE, REF_DATE_TZ, LOGDATE, LOGDATE_TZ, US,
      CLIENT_ID, APPLIC, SID, SERIAL#, OSUSER, TERMINAL, PROGRAM, LOGON_TIME,
      LOGON_TIME_TZ)
   SELECT  UC, VERSION, CURR_VAL, REF_DATE, REF_DATE_TZ, LOGDATE, LOGDATE_TZ, US,
      CLIENT_ID, APPLIC, SID, SERIAL#, OSUSER, TERMINAL, PROGRAM, LOGON_TIME,
      LOGON_TIME_TZ
   FROM UAUTUCAUDITTRAIL;
   INSERT INTO UTUCOBJECTCOUNTER
      (OBJECT_TP, OBJECT_ID, OBJECT_COUNTER)
   SELECT        OBJECT_TP, OBJECT_ID, OBJECT_COUNTER
   FROM UAUTUCOBJECTCOUNTER;
   INSERT INTO UTCOMMENT
      (COMMENT_GROUP, SEQ, STD_COMMENT)
   SELECT        COMMENT_GROUP, SEQ, STD_COMMENT
   FROM UAUTCOMMENT;
   INSERT INTO UTCOUNTER
      (COUNTER, CURR_CNT, LOW_CNT, HIGH_CNT, INCR_CNT, FIXED_LENGTH, CIRCULAR)
   SELECT        COUNTER, CURR_CNT, LOW_CNT, HIGH_CNT, INCR_CNT, FIXED_LENGTH, CIRCULAR
   FROM UAUTCOUNTER;
   INSERT INTO UTAPPLIC
      (APPLIC, DESCRIPTION)
   SELECT        APPLIC, DESCRIPTION
   FROM UAUTAPPLIC;
   INSERT INTO UTCD
      (CD, SETTING_NAME, SETTING_VALUE, SETTING_SEQ)
   SELECT        CD, SETTING_NAME, SETTING_VALUE, SETTING_SEQ
   FROM UAUTCD;
   INSERT INTO UTOBJECTS
      (OBJECT, DESCRIPTION, DEF_LC, LOG_HS, LOG_HS_DETAILS, AR)
   SELECT        OBJECT, DESCRIPTION, DEF_LC, LOG_HS, LOG_HS_DETAILS, AR
   FROM UAUTOBJECTS;
   INSERT INTO UTOTDETAILS
      (COL_TP, SEQ, COL_ID, COL_LEN, DISP_TP, DISP_TITLE, DISP_STYLE, DISP_WIDTH,
      DISP_FORMAT)
   SELECT  COL_TP, SEQ, COL_ID, COL_LEN, DISP_TP, DISP_TITLE, DISP_STYLE, DISP_WIDTH,
      DISP_FORMAT
   FROM UAUTOTDETAILS;
   INSERT INTO UTPREF
      (PREF_TP, PREF_NAME, SEQ, PREF_VALUE, APPLICABLE_OBJ, CATEGORY, DESCRIPTION)
   SELECT        PREF_TP, PREF_NAME, SEQ, PREF_VALUE, APPLICABLE_OBJ, CATEGORY, DESCRIPTION
   FROM UAUTPREF;
   INSERT INTO UTPREFLIST
      (PREF_TP, PREF_NAME, SEQ, PREF_VALUE, IS_DEFAULT)
   SELECT        PREF_TP, PREF_NAME, SEQ, PREF_VALUE, IS_DEFAULT
   FROM UAUTPREFLIST;
   INSERT INTO UTPRINTCMDS
      (APPLIC, WINDOW, PRINT_CURR_LAYOUT, PRINT_FULL_DETAILS)
   SELECT        APPLIC, WINDOW, PRINT_CURR_LAYOUT, PRINT_FULL_DETAILS
   FROM UAUTPRINTCMDS;
   INSERT INTO UTQUALIFICATION
      (QUALIFICATION, DESCRIPTION)
   SELECT        QUALIFICATION, DESCRIPTION
   FROM UAUTQUALIFICATION;
   INSERT INTO UTSYSTEM
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UAUTSYSTEM;
   INSERT INTO UTSYSTEMCOST
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UAUTSYSTEMCOST;
   INSERT INTO UTSYSTEMLIST
      (SETTING_NAME, SEQ, SETTING_VALUE)
   SELECT        SETTING_NAME, SEQ, SETTING_VALUE
   FROM UAUTSYSTEMLIST;
   INSERT INTO UTTITLEFMT
      (WINDOW, TITLE_FORMAT)
   SELECT        WINDOW, TITLE_FORMAT
   FROM UAUTTITLEFMT;
   INSERT INTO UTUICOMPONENT
      (COMPONENT_TP, COMPONENT_ID, SEQ, COL_TP, DISP_TITLE)
   SELECT        COMPONENT_TP, COMPONENT_ID, SEQ, COL_TP, DISP_TITLE
   FROM UAUTUICOMPONENT;
   INSERT INTO UTWEEKNR
      (DAY_OF_YEAR, DAY_OF_YEAR_TZ, DAY_OF_WEEK, WEEK_NR, YEAR_NR, DAY_CNT,
      WEEK_CNT)
   SELECT  DAY_OF_YEAR, DAY_OF_YEAR_TZ, DAY_OF_WEEK, WEEK_NR, YEAR_NR, DAY_CNT,
      WEEK_CNT
   FROM UAUTWEEKNR;
   INSERT INTO UTCATALOGUEID
      (CATALOGUE, DESCRIPTION, CATALOGUE_TYPE)
   SELECT        CATALOGUE, DESCRIPTION, CATALOGUE_TYPE
   FROM UAUTCATALOGUEID;
   INSERT INTO UTCATALOGUEDETAILS
      (CATALOGUE, FROM_DATE, FROM_DATE_TZ, TO_DATE, TO_DATE_TZ, SEQ_NR, OBJECT_TP,
      OBJECT_ID, OBJECT_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5,
      CRITERIUM1, CRITERIUM2, CRITERIUM3, DESCRIPTION, INPUT_PRICE, INPUT_CURR,
      DISC_ABS, DISC_REL, CALC_DISC, NET_PRICE, AC_CODE)
   SELECT  CATALOGUE, FROM_DATE, FROM_DATE_TZ, TO_DATE, TO_DATE_TZ, SEQ_NR, OBJECT_TP,
      OBJECT_ID, OBJECT_VERSION, PP_KEY1, PP_KEY2, PP_KEY3, PP_KEY4, PP_KEY5,
      CRITERIUM1, CRITERIUM2, CRITERIUM3, DESCRIPTION, INPUT_PRICE, INPUT_CURR,
      DISC_ABS, DISC_REL, CALC_DISC, NET_PRICE, AC_CODE
   FROM UAUTCATALOGUEDETAILS;
   INSERT INTO UTCURRENCY
      (CURRENCY, IS_DEFAULT, ROUNDING, CONVERSION)
   SELECT        CURRENCY, IS_DEFAULT, ROUNDING, CONVERSION
   FROM UAUTCURRENCY;
   INSERT INTO UTDBA
      (SETTING_NAME, SETTING_VALUE)
   SELECT        SETTING_NAME, SETTING_VALUE
   FROM UAUTDBA;
   INSERT INTO UTDECODE
      (CODE_TP, CODE, DESCRIPTION1, DESCRIPTION2, DESCRIPTION3, DESCRIPTION4,
      DESCRIPTION5, DESCRIPTION6, DESCRIPTION7, DESCRIPTION8, DESCRIPTION9,
      DESCRIPTION10)
   SELECT  CODE_TP, CODE, DESCRIPTION1, DESCRIPTION2, DESCRIPTION3, DESCRIPTION4,
      DESCRIPTION5, DESCRIPTION6, DESCRIPTION7, DESCRIPTION8, DESCRIPTION9,
      DESCRIPTION10
   FROM UAUTDECODE;
   INSERT INTO UTEDTBL
      (SEQ, TABLE_NAME, DESCRIPTION, LOG_HS, LOG_HS_DETAILS, WHERE_CLAUSE)
   SELECT        SEQ, TABLE_NAME, DESCRIPTION, LOG_HS, LOG_HS_DETAILS, WHERE_CLAUSE
   FROM UAUTEDTBL;
   INSERT INTO UTEDTBLHS
      (TABLE_NAME, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  TABLE_NAME, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTEDTBLHS;
   INSERT INTO UTEDTBLHSDETAILS
      (TABLE_NAME, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        TABLE_NAME, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTEDTBLHSDETAILS;
   INSERT INTO UTEVRULES
      (RULE_NR, APPLIC, DBAPI_NAME, OBJECT_TP, OBJECT_ID, OBJECT_LC,
      OBJECT_LC_VERSION, OBJECT_SS, EV_TP, CONDITION, AF, AF_DELAY, AF_DELAY_UNIT,
      CUSTOM)
   SELECT  RULE_NR, APPLIC, DBAPI_NAME, OBJECT_TP, OBJECT_ID, OBJECT_LC,
      OBJECT_LC_VERSION, OBJECT_SS, EV_TP, CONDITION, AF, AF_DELAY, AF_DELAY_UNIT,
      CUSTOM
   FROM UAUTEVRULES;
   INSERT INTO UTGKSUPPORTEDEV
      (EV_TP)
   SELECT        EV_TP
   FROM UAUTGKSUPPORTEDEV;
   INSERT INTO UTKEYPP
      (SEQ, KEY_TP, KEY_NAME, DESCRIPTION)
   SELECT        SEQ, KEY_TP, KEY_NAME, DESCRIPTION
   FROM UAUTKEYPP;
   INSERT INTO UTLAB
      (LAB)
   SELECT        LAB
   FROM UAUTLAB;
   INSERT INTO UTLABEL
      (LABEL_FORMAT, SEQ, VALUE)
   SELECT        LABEL_FORMAT, SEQ, VALUE
   FROM UAUTLABEL;
   INSERT INTO UTLU
      (LU, SEQ, STRING_VAL, NUM_VAL, SHORTCUT)
   SELECT        LU, SEQ, STRING_VAL, NUM_VAL, SHORTCUT
   FROM UAUTLU;
   INSERT INTO UTUNIT
      (UNIT, UNIT_TP, CONV_FACTOR)
   SELECT        UNIT, UNIT_TP, CONV_FACTOR
   FROM UAUTUNIT;
   INSERT INTO UTVFORMAT
      (RANGE_NAME, SEQ, RANGE_MIN_BOUNDARY, RANGE_MIN, RANGE_MAX,
      RANGE_MAX_BOUNDARY, FORMAT)
   SELECT  RANGE_NAME, SEQ, RANGE_MIN_BOUNDARY, RANGE_MIN, RANGE_MAX,
      RANGE_MAX_BOUNDARY, FORMAT
   FROM UAUTVFORMAT;
   INSERT INTO UTYEARNR
      (MONTH_OF_YEAR, MONTH_OF_YEAR_TZ, MONTH_CNT, YEAR_CNT)
   SELECT        MONTH_OF_YEAR, MONTH_OF_YEAR_TZ, MONTH_CNT, YEAR_CNT
   FROM UAUTYEARNR;
   INSERT INTO UTFI
      (FI, VERSION, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ, EFFECTIVE_TILL,
      EFFECTIVE_TILL_TZ, CREATION_DATE, CREATION_DATE_TZ, CREATED_BY, DLL_ID,
      CPP_ID, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS)
   SELECT  FI, VERSION, EFFECTIVE_FROM, EFFECTIVE_FROM_TZ, EFFECTIVE_TILL,
      EFFECTIVE_TILL_TZ, CREATION_DATE, CREATION_DATE_TZ, CREATED_BY, DLL_ID,
      CPP_ID, LOG_HS, LOG_HS_DETAILS, ALLOW_MODIFY, ACTIVE, LC, LC_VERSION, SS
   FROM UAUTFI;
   INSERT INTO UTFIHS
      (FI, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  FI, VERSION, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTFIHS;
   INSERT INTO UTFIHSDETAILS
      (FI, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        FI, VERSION, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTFIHSDETAILS;
   INSERT INTO UTLO
      (LO, DESCRIPTION, DESCRIPTION2, NR_SC_MAX, CURR_NR_SC, IS_TEMPLATE)
   SELECT        LO, DESCRIPTION, DESCRIPTION2, NR_SC_MAX, CURR_NR_SC, IS_TEMPLATE
   FROM UAUTLO;
   INSERT INTO UTLOAU
      (LO, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        LO, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTLOAU;
   INSERT INTO UTLOCS
      (LO, CS, SEQ)
   SELECT        LO, CS, SEQ
   FROM UAUTLOCS;
   INSERT INTO UTCS
      (CS, DESCRIPTION, DESCRIPTION2)
   SELECT        CS, DESCRIPTION, DESCRIPTION2
   FROM UAUTCS;
   INSERT INTO UTCSAU
      (CS, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        CS, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTCSAU;
   INSERT INTO UTCSCN
      (CS, CN, CNSEQ, VALUE)
   SELECT        CS, CN, CNSEQ, VALUE
   FROM UAUTCSCN;
   INSERT INTO UTXSLT
      (OBJ_ID, USAGE_TYPE, SEQ, LINE)
   SELECT        OBJ_ID, USAGE_TYPE, SEQ, LINE
   FROM UAUTXSLT;
   INSERT INTO UTCYSTYLE
      (VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE)
   SELECT        VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE
   FROM UAUTCYSTYLE;
   INSERT INTO UTSAPCODE
      (SAP_CODE_GROUP, SAP_CODE, UL_DESCRIPTION)
   SELECT        SAP_CODE_GROUP, SAP_CODE, UL_DESCRIPTION
   FROM UAUTSAPCODE;
   INSERT INTO UTSAPUNIT
      (SAP_UNIT_CODE, UL_UOM)
   SELECT        SAP_UNIT_CODE, UL_UOM
   FROM UAUTSAPUNIT;
   INSERT INTO UTULPEERS
      (SID, DESCRIPTION, IMPORT_URL)
   SELECT        SID, DESCRIPTION, IMPORT_URL
   FROM UAUTULPEERS;
   INSERT INTO UTSAPPLANT
      (SAP_PLANT_CODE, UL_PLANTNAME)
   SELECT        SAP_PLANT_CODE, UL_PLANTNAME
   FROM UAUTSAPPLANT;
   INSERT INTO UTSAPMETHOD
      (SAP_METHOD_CODE, UL_METHOD)
   SELECT        SAP_METHOD_CODE, UL_METHOD
   FROM UAUTSAPMETHOD;
   INSERT INTO UTCYSTYLELIST
      (VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE)
   SELECT        VISUAL_CF, CY, VERSION, SEQ, PROP_NAME, PROP_VALUE
   FROM UAUTCYSTYLELIST;
   INSERT INTO UTSAPLOCATION
      (SAP_LOCATION_CODE, UL_LOCATION)
   SELECT        SAP_LOCATION_CODE, UL_LOCATION
   FROM UAUTSAPLOCATION;
   INSERT INTO UTSAPCODEGROUP
      (SAP_CODE_GROUP, UL_DESCRIPTION)
   SELECT        SAP_CODE_GROUP, UL_DESCRIPTION
   FROM UAUTSAPCODEGROUP;
   INSERT INTO UTSAPOPERATION
      (SAP_OPERATION_NR, UL_OPERATION)
   SELECT        SAP_OPERATION_NR, UL_OPERATION
   FROM UAUTSAPOPERATION;

   
   INSERT INTO UTSHORTCUT
      (SHORTCUT, KEY_TP, VALUE_S, VALUE_F, STORE_DB, RUN_MODE, SERVICE)
   SELECT
       SHORTCUT, KEY_TP, VALUE_S, VALUE_F, STORE_DB, RUN_MODE, SERVICE
   FROM UAUTSHORTCUT
   WHERE KEY_TP <> 'au';

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END COPYTP3FROMARCHDB;

FUNCTION RESTORETP3FROMDB
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYTP3FROMARCHDB;
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'CopyTp3FromArchDB#return='||TO_CHAR(L_RET_CODE);
      RAISE STPERROR;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreTp3FromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTORETP3FROMDB;

FUNCTION REMOVETP3FROMDB
RETURN NUMBER IS
BEGIN
   
   DELETE FROM UTAD;
   DELETE FROM UTADAU;
   DELETE FROM UTADHS;
   DELETE FROM UTADHSDETAILS;
   DELETE FROM UTDD;
   DELETE FROM UTUP;
   DELETE FROM UTUPAU;
   DELETE FROM UTUPFA;
   DELETE FROM UTUPHS;
   DELETE FROM UTUPTK;
   DELETE FROM UTUPPREF;
   DELETE FROM UTUPHSDETAILS;
   DELETE FROM UTUPTKDETAILS;
   DELETE FROM UTUPUS;
   DELETE FROM UTUPUSEL;
   DELETE FROM UTUPUSFA;
   DELETE FROM UTUPUSTK;
   DELETE FROM UTUPUSPREF;
   DELETE FROM UTUPUSTKDETAILS;
   DELETE FROM UTUPUSOUTLOOKPAGES;
   DELETE FROM UTUPUSOUTLOOKTASKS;
   DELETE FROM UTFA;
   DELETE FROM UTEL;
   DELETE FROM UTTK;
   DELETE FROM UTTKHS;
   DELETE FROM UTTKSQL;
   DELETE FROM UTTKPREF;
   DELETE FROM UTTKHSDETAILS;
   DELETE FROM UTSS;
   DELETE FROM UTSSWL;
   DELETE FROM UTUC;
   DELETE FROM UTUCAU;
   DELETE FROM UTUCHS;
   DELETE FROM UTUCHSDETAILS;
   DELETE FROM UTUCAUDITTRAIL;
   DELETE FROM UTUCOBJECTCOUNTER;
   DELETE FROM UTCOMMENT;
   DELETE FROM UTCOUNTER;
   DELETE FROM UTAPPLIC;
   DELETE FROM UTCD;
   DELETE FROM UTOBJECTS;
   DELETE FROM UTOTDETAILS;
   DELETE FROM UTPREF;
   DELETE FROM UTPREFLIST;
   DELETE FROM UTPRINTCMDS;
   DELETE FROM UTQUALIFICATION;
   DELETE FROM UTSYSTEM;
   DELETE FROM UTSYSTEMCOST;
   DELETE FROM UTSYSTEMLIST;
   DELETE FROM UTTITLEFMT;
   DELETE FROM UTUICOMPONENT;
   DELETE FROM UTWEEKNR;
   DELETE FROM UTCATALOGUEID;
   DELETE FROM UTCATALOGUEDETAILS;
   DELETE FROM UTCURRENCY;
   DELETE FROM UTDBA;
   DELETE FROM UTDECODE;
   DELETE FROM UTEDTBL;
   DELETE FROM UTEDTBLHS;
   DELETE FROM UTEDTBLHSDETAILS;
   DELETE FROM UTEVRULES;
   DELETE FROM UTGKSUPPORTEDEV;
   DELETE FROM UTKEYPP;
   DELETE FROM UTLAB;
   DELETE FROM UTLABEL;
   DELETE FROM UTLU;
   DELETE FROM UTUNIT;
   DELETE FROM UTVFORMAT;
   DELETE FROM UTYEARNR;
   DELETE FROM UTFI;
   DELETE FROM UTFIHS;
   DELETE FROM UTFIHSDETAILS;
   DELETE FROM UTLO;
   DELETE FROM UTLOAU;
   DELETE FROM UTLOCS;
   DELETE FROM UTCS;
   DELETE FROM UTCSAU;
   DELETE FROM UTCSCN;
   DELETE FROM UTXSLT;
   DELETE FROM UTCYSTYLE;
   DELETE FROM UTSAPCODE;
   DELETE FROM UTSAPUNIT;
   DELETE FROM UTULPEERS;
   DELETE FROM UTSAPPLANT;
   DELETE FROM UTSAPMETHOD;
   DELETE FROM UTCYSTYLELIST;
   DELETE FROM UTSAPLOCATION;
   DELETE FROM UTSAPCODEGROUP;
   DELETE FROM UTSAPOPERATION;

   
   
   
   
   
   
   
   
   IF TO_NUMBER(UNAPIRA.P_ARCHIVE_ARCHIVER_VERSION,'999D9','NLS_NUMERIC_CHARACTERS=''.,''') < 2.0 THEN
      DELETE FROM UTJOURNAL;
      DELETE FROM UTJOURNALRQ;
      DELETE FROM UTJOURNALLOG;
      DELETE FROM UTJOURNALDETAILS;
   END IF;

   
   DELETE FROM UTSHORTCUT
   WHERE KEY_TP <> 'au';

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVETP3FROMDB;

FUNCTION ARCHIVETP3TOFILE
RETURN NUMBER IS
   
   CURSOR L_UTAD_CURSOR IS
      SELECT * FROM UTAD;

   CURSOR L_UTADAU_CURSOR IS
      SELECT * FROM UTADAU;

   CURSOR L_UTADHS_CURSOR IS
      SELECT * FROM UTADHS;

   CURSOR L_UTADHSDETAILS_CURSOR IS
      SELECT * FROM UTADHSDETAILS;

   CURSOR L_UTDD_CURSOR IS
      SELECT * FROM UTDD;

   CURSOR L_UTUP_CURSOR IS
      SELECT * FROM UTUP;

   CURSOR L_UTUPAU_CURSOR IS
      SELECT * FROM UTUPAU;

   CURSOR L_UTUPFA_CURSOR IS
      SELECT * FROM UTUPFA;

   CURSOR L_UTUPHS_CURSOR IS
      SELECT * FROM UTUPHS;

   CURSOR L_UTUPTK_CURSOR IS
      SELECT * FROM UTUPTK;

   CURSOR L_UTUPPREF_CURSOR IS
      SELECT * FROM UTUPPREF;

   CURSOR L_UTUPHSDETAILS_CURSOR IS
      SELECT * FROM UTUPHSDETAILS;

   CURSOR L_UTUPTKDETAILS_CURSOR IS
      SELECT * FROM UTUPTKDETAILS;

   CURSOR L_UTUPUS_CURSOR IS
      SELECT * FROM UTUPUS;

   CURSOR L_UTUPUSEL_CURSOR IS
      SELECT * FROM UTUPUSEL;

   CURSOR L_UTUPUSFA_CURSOR IS
      SELECT * FROM UTUPUSFA;

   CURSOR L_UTUPUSTK_CURSOR IS
      SELECT * FROM UTUPUSTK;

   CURSOR L_UTUPUSPREF_CURSOR IS
      SELECT * FROM UTUPUSPREF;

   CURSOR L_UTUPUSTKDETAILS_CURSOR IS
      SELECT * FROM UTUPUSTKDETAILS;

   CURSOR L_UTUPUSOUTLOOKPAGES_CURSOR IS
      SELECT * FROM UTUPUSOUTLOOKPAGES;

   CURSOR L_UTUPUSOUTLOOKTASKS_CURSOR IS
      SELECT * FROM UTUPUSOUTLOOKTASKS;

   CURSOR L_UTFA_CURSOR IS
      SELECT * FROM UTFA;

   CURSOR L_UTEL_CURSOR IS
      SELECT * FROM UTEL;

   CURSOR L_UTTK_CURSOR IS
      SELECT * FROM UTTK;

   CURSOR L_UTTKHS_CURSOR IS
      SELECT * FROM UTTKHS;

   CURSOR L_UTTKSQL_CURSOR IS
      SELECT * FROM UTTKSQL;

   CURSOR L_UTTKPREF_CURSOR IS
      SELECT * FROM UTTKPREF;

   CURSOR L_UTTKHSDETAILS_CURSOR IS
      SELECT * FROM UTTKHSDETAILS;

   CURSOR L_UTSS_CURSOR IS
      SELECT * FROM UTSS;

   CURSOR L_UTSSWL_CURSOR IS
      SELECT * FROM UTSSWL;

   CURSOR L_UTUC_CURSOR IS
      SELECT * FROM UTUC;

   CURSOR L_UTUCAU_CURSOR IS
      SELECT * FROM UTUCAU;

   CURSOR L_UTUCHS_CURSOR IS
      SELECT * FROM UTUCHS;

   CURSOR L_UTUCHSDETAILS_CURSOR IS
      SELECT * FROM UTUCHSDETAILS;

   CURSOR L_UTUCAUDITTRAIL_CURSOR IS
      SELECT * FROM UTUCAUDITTRAIL;

   CURSOR L_UTUCOBJECTCOUNTER_CURSOR IS
      SELECT * FROM UTUCOBJECTCOUNTER;

   CURSOR L_UTCOMMENT_CURSOR IS
      SELECT * FROM UTCOMMENT;

   CURSOR L_UTCOUNTER_CURSOR IS
      SELECT * FROM UTCOUNTER;

   CURSOR L_UTAPPLIC_CURSOR IS
      SELECT * FROM UTAPPLIC;

   CURSOR L_UTCD_CURSOR IS
      SELECT * FROM UTCD;

   CURSOR L_UTOBJECTS_CURSOR IS
      SELECT * FROM UTOBJECTS;

   CURSOR L_UTOTDETAILS_CURSOR IS
      SELECT * FROM UTOTDETAILS;

   CURSOR L_UTPREF_CURSOR IS
      SELECT * FROM UTPREF;

   CURSOR L_UTPREFLIST_CURSOR IS
      SELECT * FROM UTPREFLIST;

   CURSOR L_UTPRINTCMDS_CURSOR IS
      SELECT * FROM UTPRINTCMDS;

   CURSOR L_UTQUALIFICATION_CURSOR IS
      SELECT * FROM UTQUALIFICATION;

   CURSOR L_UTSYSTEM_CURSOR IS
      SELECT * FROM UTSYSTEM;

   CURSOR L_UTSYSTEMCOST_CURSOR IS
      SELECT * FROM UTSYSTEMCOST;

   CURSOR L_UTSYSTEMLIST_CURSOR IS
      SELECT * FROM UTSYSTEMLIST;

   CURSOR L_UTTITLEFMT_CURSOR IS
      SELECT * FROM UTTITLEFMT;

   CURSOR L_UTUICOMPONENT_CURSOR IS
      SELECT * FROM UTUICOMPONENT;

   CURSOR L_UTWEEKNR_CURSOR IS
      SELECT * FROM UTWEEKNR;

   CURSOR L_UTCATALOGUEID_CURSOR IS
      SELECT * FROM UTCATALOGUEID;

   CURSOR L_UTCATALOGUEDETAILS_CURSOR IS
      SELECT * FROM UTCATALOGUEDETAILS;

   CURSOR L_UTCURRENCY_CURSOR IS
      SELECT * FROM UTCURRENCY;

   CURSOR L_UTDBA_CURSOR IS
      SELECT * FROM UTDBA;

   CURSOR L_UTDECODE_CURSOR IS
      SELECT * FROM UTDECODE;

   CURSOR L_UTEDTBL_CURSOR IS
      SELECT * FROM UTEDTBL;

   CURSOR L_UTEDTBLHS_CURSOR IS
      SELECT * FROM UTEDTBLHS;

   CURSOR L_UTEDTBLHSDETAILS_CURSOR IS
      SELECT * FROM UTEDTBLHSDETAILS;

   CURSOR L_UTEVRULES_CURSOR IS
      SELECT * FROM UTEVRULES;

   CURSOR L_UTGKSUPPORTEDEV_CURSOR IS
      SELECT * FROM UTGKSUPPORTEDEV;

   CURSOR L_UTKEYPP_CURSOR IS
      SELECT * FROM UTKEYPP;

   CURSOR L_UTLAB_CURSOR IS
      SELECT * FROM UTLAB;

   CURSOR L_UTLABEL_CURSOR IS
      SELECT * FROM UTLABEL;

   CURSOR L_UTLU_CURSOR IS
      SELECT * FROM UTLU;

   CURSOR L_UTUNIT_CURSOR IS
      SELECT * FROM UTUNIT;

   CURSOR L_UTVFORMAT_CURSOR IS
      SELECT * FROM UTVFORMAT;

   CURSOR L_UTYEARNR_CURSOR IS
      SELECT * FROM UTYEARNR;

   CURSOR L_UTFI_CURSOR IS
      SELECT * FROM UTFI;

   CURSOR L_UTFIHS_CURSOR IS
      SELECT * FROM UTFIHS;

   CURSOR L_UTFIHSDETAILS_CURSOR IS
      SELECT * FROM UTFIHSDETAILS;

   CURSOR L_UTLO_CURSOR IS
      SELECT * FROM UTLO;

   CURSOR L_UTLOAU_CURSOR IS
      SELECT * FROM UTLOAU;

   CURSOR L_UTLOCS_CURSOR IS
      SELECT * FROM UTLOCS;

   CURSOR L_UTCS_CURSOR IS
      SELECT * FROM UTCS;

   CURSOR L_UTCSAU_CURSOR IS
      SELECT * FROM UTCSAU;

   CURSOR L_UTCSCN_CURSOR IS
      SELECT * FROM UTCSCN;

   CURSOR L_UTXSLT_CURSOR IS
      SELECT * FROM UTXSLT;

   CURSOR L_UTCYSTYLE_CURSOR IS
      SELECT * FROM UTCYSTYLE;

   CURSOR L_UTSAPCODE_CURSOR IS
      SELECT * FROM UTSAPCODE;

   CURSOR L_UTSAPUNIT_CURSOR IS
      SELECT * FROM UTSAPUNIT;

   CURSOR L_UTULPEERS_CURSOR IS
      SELECT * FROM UTULPEERS;

   CURSOR L_UTSAPPLANT_CURSOR IS
      SELECT * FROM UTSAPPLANT;

   CURSOR L_UTSAPMETHOD_CURSOR IS
      SELECT * FROM UTSAPMETHOD;

   CURSOR L_UTCYSTYLELIST_CURSOR IS
      SELECT * FROM UTCYSTYLELIST;

   CURSOR L_UTSAPLOCATION_CURSOR IS
      SELECT * FROM UTSAPLOCATION;

   CURSOR L_UTSAPCODEGROUP_CURSOR IS
      SELECT * FROM UTSAPCODEGROUP;

   CURSOR L_UTSAPOPERATION_CURSOR IS
      SELECT * FROM UTSAPOPERATION;

   
   CURSOR L_UTSHORTCUT_CURSOR IS
      SELECT * FROM UTSHORTCUT WHERE KEY_TP <> 'au';

   L_PREAMBLE VARCHAR2(40);
   L_RESULT   VARCHAR2(40);
BEGIN
   L_SQLERRM := NULL;
   UNAPIRA.L_EXCEPTION_STEP :='utad';
   FOR L_REC IN L_UTAD_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utad'||L_SEP||
      L_REC.AD || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.VERSION_IS_CURRENT || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.IS_TEMPLATE || L_SEP || L_REC.IS_USER || L_SEP ||
      L_REC.STRUCT_CREATED || L_SEP || L_REC.AD_TP || L_SEP ||
      L_REC.PERSON || L_SEP || L_REC.TITLE || L_SEP ||
      L_REC.FUNCTION_NAME || L_SEP || L_REC.DEF_UP || L_SEP ||
      L_REC.COMPANY || L_SEP || L_REC.STREET || L_SEP || L_REC.CITY || L_SEP ||
      L_REC.STATE || L_SEP || L_REC.COUNTRY || L_SEP || L_REC.AD_NR || L_SEP ||
      L_REC.PO_BOX || L_SEP || L_REC.ZIP_CODE || L_SEP ||
      L_REC.PHONE_NR || L_SEP || L_REC.EXT_NR || L_SEP || L_REC.FAX_NR || L_SEP ||
      L_REC.EMAIL || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.AD_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utadau';
   FOR L_REC IN L_UTADAU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utadau'||L_SEP||
      L_REC.AD || L_SEP || L_REC.VERSION || L_SEP || L_REC.AU || L_SEP ||
      L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utadhs';
   FOR L_REC IN L_UTADHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utadhs'||L_SEP||
      L_REC.AD || L_SEP || L_REC.VERSION || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utadhsdetails';
   FOR L_REC IN L_UTADHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utadhsdetails'||L_SEP||
      L_REC.AD || L_SEP || L_REC.VERSION || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utdd';
   FOR L_REC IN L_UTDD_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utdd'||L_SEP||
      L_REC.DD || L_SEP || L_REC.DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utup';
   FOR L_REC IN L_UTUP_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utup'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.VERSION_IS_CURRENT || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.DD || L_SEP ||
      L_REC.DESCR_DOC || L_SEP || L_REC.DESCR_DOC_VERSION || L_SEP ||
      L_REC.CHG_PWD || L_SEP || L_REC.DEFINE_MENU || L_SEP ||
      L_REC.CONFIRM_CHG_SS || L_SEP || L_REC.LANGUAGE || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.UP_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupau';
   FOR L_REC IN L_UTUPAU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupau'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.AU || L_SEP ||
      L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupfa';
   FOR L_REC IN L_UTUPFA_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupfa'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.APPLIC || L_SEP ||
      L_REC.TOPIC || L_SEP || L_REC.FA || L_SEP || L_REC.INHERIT_FA;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuphs';
   FOR L_REC IN L_UTUPHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuphs'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuptk';
   FOR L_REC IN L_UTUPTK_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuptk'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP || L_REC.IS_ENABLED;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuppref';
   FOR L_REC IN L_UTUPPREF_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuppref'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.PREF_NAME || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.PREF_VALUE || L_SEP ||
      L_REC.INHERIT_PREF;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuphsdetails';
   FOR L_REC IN L_UTUPHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuphsdetails'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuptkdetails';
   FOR L_REC IN L_UTUPTKDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuptkdetails'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.TK_TP || L_SEP ||
      L_REC.TK || L_SEP || L_REC.COL_ID || L_SEP || L_REC.COL_TP || L_SEP ||
      L_REC.DSP_TITLE || L_SEP || L_REC.SEQ || L_SEP || L_REC.OPERAT || L_SEP ||
      L_REC.DEF_VAL || L_SEP || L_REC.ANDOR || L_SEP || L_REC.HIDDEN || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.MANDATORY || L_SEP ||
      L_REC.AUTO_REFRESH || L_SEP || L_REC.COL_ASC || L_SEP ||
      L_REC.OPERAT_PROTECT || L_SEP || L_REC.ANDOR_PROTECT || L_SEP ||
      L_REC.DSP_LEN || L_SEP || L_REC.INHERIT_TK;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupus';
   FOR L_REC IN L_UTUPUS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupus'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupusel';
   FOR L_REC IN L_UTUPUSEL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupusel'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION || L_SEP || L_REC.EL || L_SEP ||
      L_REC.IS_ENABLED || L_SEP || L_REC.SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupusfa';
   FOR L_REC IN L_UTUPUSFA_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupusfa'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION || L_SEP || L_REC.APPLIC || L_SEP ||
      L_REC.TOPIC || L_SEP || L_REC.FA || L_SEP || L_REC.INHERIT_FA;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupustk';
   FOR L_REC IN L_UTUPUSTK_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupustk'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION || L_SEP || L_REC.SEQ || L_SEP || L_REC.TK_TP || L_SEP ||
      L_REC.TK || L_SEP || L_REC.IS_ENABLED;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupuspref';
   FOR L_REC IN L_UTUPUSPREF_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupuspref'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION || L_SEP || L_REC.PREF_NAME || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.PREF_VALUE || L_SEP ||
      L_REC.INHERIT_PREF;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupustkdetails';
   FOR L_REC IN L_UTUPUSTKDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupustkdetails'||L_SEP||
      L_REC.UP || L_SEP || L_REC.VERSION || L_SEP || L_REC.US || L_SEP ||
      L_REC.US_VERSION || L_SEP || L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP ||
      L_REC.COL_ID || L_SEP || L_REC.COL_TP || L_SEP ||
      L_REC.DSP_TITLE || L_SEP || L_REC.SEQ || L_SEP || L_REC.OPERAT || L_SEP ||
      L_REC.DEF_VAL || L_SEP || L_REC.ANDOR || L_SEP || L_REC.HIDDEN || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.MANDATORY || L_SEP ||
      L_REC.AUTO_REFRESH || L_SEP || L_REC.COL_ASC || L_SEP ||
      L_REC.OPERAT_PROTECT || L_SEP || L_REC.ANDOR_PROTECT || L_SEP ||
      L_REC.DSP_LEN || L_SEP || L_REC.INHERIT_TK;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupusoutlookpages';
   FOR L_REC IN L_UTUPUSOUTLOOKPAGES_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupusoutlookpages'||L_SEP||
      L_REC.UP || L_SEP || L_REC.US || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.PAGE_ID || L_SEP || L_REC.PAGE_DESCRIPTION || L_SEP ||
      L_REC.PAGE_TP || L_SEP || L_REC.ACTIVE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utupusoutlooktasks';
   FOR L_REC IN L_UTUPUSOUTLOOKTASKS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utupusoutlooktasks'||L_SEP||
      L_REC.UP || L_SEP || L_REC.US || L_SEP || L_REC.PAGE_ID || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.TK || L_SEP || L_REC.TK_TP || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.ICON_NAME || L_SEP ||
      L_REC.ICON_NBR || L_SEP || L_REC.CMD_LINE || L_SEP ||
      L_REC.ACTIVE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utfa';
   FOR L_REC IN L_UTFA_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utfa'||L_SEP||
      L_REC.APPLIC || L_SEP || L_REC.DESCRIPTION || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.TOPIC || L_SEP || L_REC.TOPIC_DESCRIPTION || L_SEP ||
      L_REC.FA;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utel';
   FOR L_REC IN L_UTEL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utel'||L_SEP||
      L_REC.EL || L_SEP || L_REC.DESCR_DOC || L_SEP ||
      L_REC.DESCR_DOC_VERSION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttk';
   FOR L_REC IN L_UTTK_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttk'||L_SEP||
      L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.VERSION_IS_CURRENT || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.COL_ID || L_SEP ||
      L_REC.COL_TP || L_SEP || L_REC.DSP_TITLE || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.OPERAT || L_SEP || L_REC.DEF_VAL || L_SEP || L_REC.ANDOR || L_SEP ||
      L_REC.HIDDEN || L_SEP || L_REC.IS_PROTECTED || L_SEP ||
      L_REC.MANDATORY || L_SEP || L_REC.AUTO_REFRESH || L_SEP ||
      L_REC.COL_ASC || L_SEP || L_REC.DSP_LEN || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.TK_CLASS || L_SEP ||
      L_REC.VALUE_LIST_TP || L_SEP || L_REC.OPERAT_PROTECT || L_SEP ||
      L_REC.ANDOR_PROTECT || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttkhs';
   FOR L_REC IN L_UTTKHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttkhs'||L_SEP||
      L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttksql';
   FOR L_REC IN L_UTTKSQL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttksql'||L_SEP||
      L_REC.TK || L_SEP || L_REC.TK_TP || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.COL_ID || L_SEP || L_REC.COL_TP || L_SEP || L_REC.SQLSEQ || L_SEP ||
      L_REC.SQLTEXT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttkpref';
   FOR L_REC IN L_UTTKPREF_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttkpref'||L_SEP||
      L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.PREF_NAME || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.PREF_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttkhsdetails';
   FOR L_REC IN L_UTTKHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttkhsdetails'||L_SEP||
      L_REC.TK_TP || L_SEP || L_REC.TK || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utss';
   FOR L_REC IN L_UTSS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utss'||L_SEP||
      L_REC.SS || L_SEP || L_REC.NAME || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.COLOR || L_SEP || L_REC.SHORTCUT || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP ||
      L_REC.SS_CLASS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsswl';
   FOR L_REC IN L_UTSSWL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsswl'||L_SEP||
      L_REC.SS || L_SEP || L_REC.ENTRY_ACTION || L_SEP ||
      L_REC.GK_ENTRY || L_SEP || L_REC.GK_VERSION || L_SEP ||
      L_REC.ENTRY_TP || L_SEP || L_REC.USE_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuc';
   FOR L_REC IN L_UTUC_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuc'||L_SEP||
      L_REC.UC || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.VERSION_IS_CURRENT || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.UC_STRUCTURE || L_SEP ||
      L_REC.CURR_VAL || L_SEP || L_REC.DEF_MASK_FOR || L_SEP ||
      L_REC.EDIT_ALLOWED || L_SEP || L_REC.VALID_CF || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utucau';
   FOR L_REC IN L_UTUCAU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utucau'||L_SEP||
      L_REC.UC || L_SEP || L_REC.VERSION || L_SEP || L_REC.AU || L_SEP ||
      L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuchs';
   FOR L_REC IN L_UTUCHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuchs'||L_SEP||
      L_REC.UC || L_SEP || L_REC.VERSION || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuchsdetails';
   FOR L_REC IN L_UTUCHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuchsdetails'||L_SEP||
      L_REC.UC || L_SEP || L_REC.VERSION || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utucaudittrail';
   FOR L_REC IN L_UTUCAUDITTRAIL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utucaudittrail'||L_SEP||
      L_REC.UC || L_SEP || L_REC.VERSION || L_SEP || L_REC.CURR_VAL || L_SEP ||
      TO_CHAR(L_REC.REF_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.REF_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.US || L_SEP || L_REC.CLIENT_ID || L_SEP || L_REC.APPLIC || L_SEP ||
      L_REC.SID || L_SEP || L_REC.SERIAL# || L_SEP || L_REC.OSUSER || L_SEP ||
      L_REC.TERMINAL || L_SEP || L_REC.PROGRAM || L_SEP ||
      TO_CHAR(L_REC.LOGON_TIME,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGON_TIME_TZ,UNAPIRA.P_TSTZ_FORMAT);
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utucobjectcounter';
   FOR L_REC IN L_UTUCOBJECTCOUNTER_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utucobjectcounter'||L_SEP||
      L_REC.OBJECT_TP || L_SEP || L_REC.OBJECT_ID || L_SEP ||
      L_REC.OBJECT_COUNTER;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcomment';
   FOR L_REC IN L_UTCOMMENT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcomment'||L_SEP||
      L_REC.COMMENT_GROUP || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.STD_COMMENT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcounter';
   FOR L_REC IN L_UTCOUNTER_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcounter'||L_SEP||
      L_REC.COUNTER || L_SEP || L_REC.CURR_CNT || L_SEP ||
      L_REC.LOW_CNT || L_SEP || L_REC.HIGH_CNT || L_SEP ||
      L_REC.INCR_CNT || L_SEP || L_REC.FIXED_LENGTH || L_SEP ||
      L_REC.CIRCULAR;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utapplic';
   FOR L_REC IN L_UTAPPLIC_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utapplic'||L_SEP||
      L_REC.APPLIC || L_SEP || L_REC.DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcd';
   FOR L_REC IN L_UTCD_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcd'||L_SEP||
      L_REC.CD || L_SEP || L_REC.SETTING_NAME || L_SEP ||
      L_REC.SETTING_VALUE || L_SEP || L_REC.SETTING_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utobjects';
   FOR L_REC IN L_UTOBJECTS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utobjects'||L_SEP||
      L_REC.OBJECT || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.DEF_LC || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.AR;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utotdetails';
   FOR L_REC IN L_UTOTDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utotdetails'||L_SEP||
      L_REC.COL_TP || L_SEP || L_REC.SEQ || L_SEP || L_REC.COL_ID || L_SEP ||
      L_REC.COL_LEN || L_SEP || L_REC.DISP_TP || L_SEP ||
      L_REC.DISP_TITLE || L_SEP || L_REC.DISP_STYLE || L_SEP ||
      L_REC.DISP_WIDTH || L_SEP || L_REC.DISP_FORMAT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utpref';
   FOR L_REC IN L_UTPREF_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utpref'||L_SEP||
      L_REC.PREF_TP || L_SEP || L_REC.PREF_NAME || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.PREF_VALUE || L_SEP || L_REC.APPLICABLE_OBJ || L_SEP ||
      L_REC.CATEGORY || L_SEP || L_REC.DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utpreflist';
   FOR L_REC IN L_UTPREFLIST_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utpreflist'||L_SEP||
      L_REC.PREF_TP || L_SEP || L_REC.PREF_NAME || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.PREF_VALUE || L_SEP || L_REC.IS_DEFAULT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utprintcmds';
   FOR L_REC IN L_UTPRINTCMDS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utprintcmds'||L_SEP||
      L_REC.APPLIC || L_SEP || L_REC.WINDOW || L_SEP ||
      L_REC.PRINT_CURR_LAYOUT || L_SEP || L_REC.PRINT_FULL_DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utqualification';
   FOR L_REC IN L_UTQUALIFICATION_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utqualification'||L_SEP||
      L_REC.QUALIFICATION || L_SEP || L_REC.DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsystem';
   FOR L_REC IN L_UTSYSTEM_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsystem'||L_SEP||
      L_REC.SETTING_NAME || L_SEP || L_REC.SETTING_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);

      
      IF L_REC.SETTING_NAME = 'PREAMBLE' THEN
         
         
         
         L_PREAMBLE := L_REC.SETTING_VALUE;
         IF SUBSTR(L_PREAMBLE, 1, 1) = '=' THEN
            L_SQL_STRING := 'BEGIN :l_preamble:'||L_PREAMBLE ||'; END;';
            L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
            DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
            DBMS_SQL.BIND_VARIABLE (L_DYN_CURSOR, ':l_preamble', L_PREAMBLE);
            L_RESULT := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
            DBMS_SQL.VARIABLE_VALUE(L_DYN_CURSOR, ':l_preamble', L_PREAMBLE);
            DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
         END IF;
      END IF;
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsystemcost';
   FOR L_REC IN L_UTSYSTEMCOST_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsystemcost'||L_SEP||
      L_REC.SETTING_NAME || L_SEP || L_REC.SETTING_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsystemlist';
   FOR L_REC IN L_UTSYSTEMLIST_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsystemlist'||L_SEP||
      L_REC.SETTING_NAME || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.SETTING_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='uttitlefmt';
   FOR L_REC IN L_UTTITLEFMT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'uttitlefmt'||L_SEP||
      L_REC.WINDOW || L_SEP || L_REC.TITLE_FORMAT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utuicomponent';
   FOR L_REC IN L_UTUICOMPONENT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utuicomponent'||L_SEP||
      L_REC.COMPONENT_TP || L_SEP || L_REC.COMPONENT_ID || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.COL_TP || L_SEP || L_REC.DISP_TITLE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utweeknr';
   FOR L_REC IN L_UTWEEKNR_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utweeknr'||L_SEP||
      TO_CHAR(L_REC.DAY_OF_YEAR,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DAY_OF_YEAR_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.DAY_OF_WEEK || L_SEP || L_REC.WEEK_NR || L_SEP ||
      L_REC.YEAR_NR || L_SEP || L_REC.DAY_CNT || L_SEP ||
      L_REC.WEEK_CNT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcatalogueid';
   FOR L_REC IN L_UTCATALOGUEID_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcatalogueid'||L_SEP||
      L_REC.CATALOGUE || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.CATALOGUE_TYPE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcataloguedetails';
   FOR L_REC IN L_UTCATALOGUEDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcataloguedetails'||L_SEP||
      L_REC.CATALOGUE || L_SEP ||
      TO_CHAR(L_REC.FROM_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.FROM_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.TO_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.TO_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.SEQ_NR || L_SEP || L_REC.OBJECT_TP || L_SEP ||
      L_REC.OBJECT_ID || L_SEP || L_REC.OBJECT_VERSION || L_SEP ||
      L_REC.PP_KEY1 || L_SEP || L_REC.PP_KEY2 || L_SEP ||
      L_REC.PP_KEY3 || L_SEP || L_REC.PP_KEY4 || L_SEP ||
      L_REC.PP_KEY5 || L_SEP || L_REC.CRITERIUM1 || L_SEP ||
      L_REC.CRITERIUM2 || L_SEP || L_REC.CRITERIUM3 || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.INPUT_PRICE || L_SEP ||
      L_REC.INPUT_CURR || L_SEP || L_REC.DISC_ABS || L_SEP ||
      L_REC.DISC_REL || L_SEP || L_REC.CALC_DISC || L_SEP ||
      L_REC.NET_PRICE || L_SEP || L_REC.AC_CODE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcurrency';
   FOR L_REC IN L_UTCURRENCY_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcurrency'||L_SEP||
      L_REC.CURRENCY || L_SEP || L_REC.IS_DEFAULT || L_SEP ||
      L_REC.ROUNDING || L_SEP || L_REC.CONVERSION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utdba';
   FOR L_REC IN L_UTDBA_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utdba'||L_SEP||
      L_REC.SETTING_NAME || L_SEP || L_REC.SETTING_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utdecode';
   FOR L_REC IN L_UTDECODE_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utdecode'||L_SEP||
      L_REC.CODE_TP || L_SEP || L_REC.CODE || L_SEP ||
      L_REC.DESCRIPTION1 || L_SEP || L_REC.DESCRIPTION2 || L_SEP ||
      L_REC.DESCRIPTION3 || L_SEP || L_REC.DESCRIPTION4 || L_SEP ||
      L_REC.DESCRIPTION5 || L_SEP || L_REC.DESCRIPTION6 || L_SEP ||
      L_REC.DESCRIPTION7 || L_SEP || L_REC.DESCRIPTION8 || L_SEP ||
      L_REC.DESCRIPTION9 || L_SEP || L_REC.DESCRIPTION10;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utedtbl';
   FOR L_REC IN L_UTEDTBL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utedtbl'||L_SEP||
      L_REC.SEQ || L_SEP || L_REC.TABLE_NAME || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.WHERE_CLAUSE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utedtblhs';
   FOR L_REC IN L_UTEDTBLHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utedtblhs'||L_SEP||
      L_REC.TABLE_NAME || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utedtblhsdetails';
   FOR L_REC IN L_UTEDTBLHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utedtblhsdetails'||L_SEP||
      L_REC.TABLE_NAME || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utevrules';
   FOR L_REC IN L_UTEVRULES_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utevrules'||L_SEP||
      L_REC.RULE_NR || L_SEP || L_REC.APPLIC || L_SEP ||
      L_REC.DBAPI_NAME || L_SEP || L_REC.OBJECT_TP || L_SEP ||
      L_REC.OBJECT_ID || L_SEP || L_REC.OBJECT_LC || L_SEP ||
      L_REC.OBJECT_LC_VERSION || L_SEP || L_REC.OBJECT_SS || L_SEP ||
      L_REC.EV_TP || L_SEP || L_REC.CONDITION || L_SEP || L_REC.AF || L_SEP ||
      L_REC.AF_DELAY || L_SEP || L_REC.AF_DELAY_UNIT || L_SEP ||
      L_REC.CUSTOM;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utgksupportedev';
   FOR L_REC IN L_UTGKSUPPORTEDEV_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utgksupportedev'||L_SEP||
      L_REC.EV_TP;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utkeypp';
   FOR L_REC IN L_UTKEYPP_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utkeypp'||L_SEP||
      L_REC.SEQ || L_SEP || L_REC.KEY_TP || L_SEP || L_REC.KEY_NAME || L_SEP ||
      L_REC.DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utlab';
   FOR L_REC IN L_UTLAB_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utlab'||L_SEP||
      L_REC.LAB;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utlabel';
   FOR L_REC IN L_UTLABEL_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utlabel'||L_SEP||
      L_REC.LABEL_FORMAT || L_SEP || L_REC.SEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utlu';
   FOR L_REC IN L_UTLU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utlu'||L_SEP||
      L_REC.LU || L_SEP || L_REC.SEQ || L_SEP || L_REC.STRING_VAL || L_SEP ||
      L_REC.NUM_VAL || L_SEP || L_REC.SHORTCUT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utunit';
   FOR L_REC IN L_UTUNIT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utunit'||L_SEP||
      L_REC.UNIT || L_SEP || L_REC.UNIT_TP || L_SEP ||
      L_REC.CONV_FACTOR;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utvformat';
   FOR L_REC IN L_UTVFORMAT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utvformat'||L_SEP||
      L_REC.RANGE_NAME || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.RANGE_MIN_BOUNDARY || L_SEP || L_REC.RANGE_MIN || L_SEP ||
      L_REC.RANGE_MAX || L_SEP || L_REC.RANGE_MAX_BOUNDARY || L_SEP ||
      L_REC.FORMAT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utyearnr';
   FOR L_REC IN L_UTYEARNR_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utyearnr'||L_SEP||
      TO_CHAR(L_REC.MONTH_OF_YEAR,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.MONTH_OF_YEAR_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.MONTH_CNT || L_SEP || L_REC.YEAR_CNT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utfi';
   FOR L_REC IN L_UTFI_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utfi'||L_SEP||
      L_REC.FI || L_SEP || L_REC.VERSION || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_FROM_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EFFECTIVE_TILL_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.CREATED_BY || L_SEP || L_REC.DLL_ID || L_SEP ||
      L_REC.CPP_ID || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utfihs';
   FOR L_REC IN L_UTFIHS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utfihs'||L_SEP||
      L_REC.FI || L_SEP || L_REC.VERSION || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utfihsdetails';
   FOR L_REC IN L_UTFIHSDETAILS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utfihsdetails'||L_SEP||
      L_REC.FI || L_SEP || L_REC.VERSION || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utlo';
   FOR L_REC IN L_UTLO_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utlo'||L_SEP||
      L_REC.LO || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.DESCRIPTION2 || L_SEP || L_REC.NR_SC_MAX || L_SEP ||
      L_REC.CURR_NR_SC || L_SEP || L_REC.IS_TEMPLATE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utloau';
   FOR L_REC IN L_UTLOAU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utloau'||L_SEP||
      L_REC.LO || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utlocs';
   FOR L_REC IN L_UTLOCS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utlocs'||L_SEP||
      L_REC.LO || L_SEP || L_REC.CS || L_SEP || L_REC.SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcs';
   FOR L_REC IN L_UTCS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcs'||L_SEP||
      L_REC.CS || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.DESCRIPTION2;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcsau';
   FOR L_REC IN L_UTCSAU_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcsau'||L_SEP||
      L_REC.CS || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcscn';
   FOR L_REC IN L_UTCSCN_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcscn'||L_SEP||
      L_REC.CS || L_SEP || L_REC.CN || L_SEP || L_REC.CNSEQ || L_SEP ||
      L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utxslt';
   FOR L_REC IN L_UTXSLT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utxslt'||L_SEP||
      L_REC.OBJ_ID || L_SEP || L_REC.USAGE_TYPE || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.LINE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcystyle';
   FOR L_REC IN L_UTCYSTYLE_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcystyle'||L_SEP||
      L_REC.VISUAL_CF || L_SEP || L_REC.CY || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.PROP_NAME || L_SEP ||
      L_REC.PROP_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapcode';
   FOR L_REC IN L_UTSAPCODE_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapcode'||L_SEP||
      L_REC.SAP_CODE_GROUP || L_SEP || L_REC.SAP_CODE || L_SEP ||
      L_REC.UL_DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapunit';
   FOR L_REC IN L_UTSAPUNIT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapunit'||L_SEP||
      L_REC.SAP_UNIT_CODE || L_SEP || L_REC.UL_UOM;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utulpeers';
   FOR L_REC IN L_UTULPEERS_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utulpeers'||L_SEP||
      L_REC.SID || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.IMPORT_URL;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapplant';
   FOR L_REC IN L_UTSAPPLANT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapplant'||L_SEP||
      L_REC.SAP_PLANT_CODE || L_SEP || L_REC.UL_PLANTNAME;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapmethod';
   FOR L_REC IN L_UTSAPMETHOD_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapmethod'||L_SEP||
      L_REC.SAP_METHOD_CODE || L_SEP || L_REC.UL_METHOD;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utcystylelist';
   FOR L_REC IN L_UTCYSTYLELIST_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utcystylelist'||L_SEP||
      L_REC.VISUAL_CF || L_SEP || L_REC.CY || L_SEP || L_REC.VERSION || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.PROP_NAME || L_SEP ||
      L_REC.PROP_VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsaplocation';
   FOR L_REC IN L_UTSAPLOCATION_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsaplocation'||L_SEP||
      L_REC.SAP_LOCATION_CODE || L_SEP || L_REC.UL_LOCATION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapcodegroup';
   FOR L_REC IN L_UTSAPCODEGROUP_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapcodegroup'||L_SEP||
      L_REC.SAP_CODE_GROUP || L_SEP || L_REC.UL_DESCRIPTION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utsapoperation';
   FOR L_REC IN L_UTSAPOPERATION_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utsapoperation'||L_SEP||
      L_REC.SAP_OPERATION_NR || L_SEP || L_REC.UL_OPERATION;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   
   UNAPIRA.L_EXCEPTION_STEP :='utshortcut' ||'<>au';
   FOR L_REC IN L_UTSHORTCUT_CURSOR LOOP
      UNAPIRA3.L_PUTTEXT := 'utshortcut' || L_SEP ||
      L_REC.SHORTCUT || L_SEP || L_REC.KEY_TP || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.STORE_DB || L_SEP || L_REC.RUN_MODE || L_SEP ||
      L_REC.SERVICE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

UNAPIRA3.U4DATAPUTLINE( ' ');

RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveTp3ToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVETP3TOFILE;

BEGIN
   L_SEP := UNAPIRA.P_INTERNAL_SEP;
END UNAPIRAT3;