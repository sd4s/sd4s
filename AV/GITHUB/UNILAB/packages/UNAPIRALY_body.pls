PACKAGE BODY unapiraly AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVELYFROMARCHIVE
(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   

   DELETE FROM UAUTLY
   WHERE LY_TP = A_LY_TP
   AND LY = A_LY;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVELYFROMARCHIVE;




FUNCTION COPYLYTOARCHDB(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   

   INSERT INTO UAUTLY
      (LY_TP, LY, SEQ, COL_ID, COL_TP, COL_LEN, DISP_TITLE, DISP_STYLE, DISP_TP,
      DISP_WIDTH, DISP_FORMAT, COL_ORDER, COL_ASC)
   SELECT  LY_TP, LY, SEQ, COL_ID, COL_TP, COL_LEN, DISP_TITLE, DISP_STYLE, DISP_TP,
      DISP_WIDTH, DISP_FORMAT, COL_ORDER, COL_ASC
   FROM UTLY
   WHERE LY_TP = A_LY_TP
   AND LY = A_LY;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVELYFROMARCHIVE(A_LY, A_LY_TP);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYLYTOARCHDB;

FUNCTION ARCHIVELYTODB
(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYLYTOARCHDB(A_LY, A_LY_TP, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYLYTOARCHDB(A_LY, A_LY_TP, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyLyToArchDB#return='||TO_CHAR(L_RET_CODE)||' for ly='||A_LY||'#ly_tp='||A_LY_TP;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveLyToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVELYTODB;

FUNCTION COPYLYFROMARCHDB(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
BEGIN
   

   INSERT INTO UTLY
      (LY_TP, LY, SEQ, COL_ID, COL_TP, COL_LEN, DISP_TITLE, DISP_STYLE, DISP_TP,
      DISP_WIDTH, DISP_FORMAT, COL_ORDER, COL_ASC)
   SELECT  LY_TP, LY, SEQ, COL_ID, COL_TP, COL_LEN, DISP_TITLE, DISP_STYLE, DISP_TP,
      DISP_WIDTH, DISP_FORMAT, COL_ORDER, COL_ASC
   FROM UAUTLY
   WHERE LY_TP = A_LY_TP
   AND LY = A_LY;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVELYFROMDB(A_LY, A_LY_TP);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYLYFROMARCHDB;

FUNCTION RESTORELYFROMDB
(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYLYFROMARCHDB(A_LY, A_LY_TP, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYLYFROMARCHDB(A_LY, A_LY_TP, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyLyFromArchDB#return='||TO_CHAR(L_RET_CODE)||' for ly='||A_LY||'#ly_tp='||A_LY_TP;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreLyFromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTORELYFROMDB;

FUNCTION REMOVELYFROMDB
(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   

   DELETE FROM UTLY
   WHERE LY_TP = A_LY_TP
   AND LY = A_LY;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVELYFROMDB;

FUNCTION ARCHIVELYTOFILE
(A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2)
RETURN NUMBER IS

CURSOR L_UTLY_CURSOR (A_LY IN VARCHAR2, A_LY_TP IN VARCHAR2) IS
   SELECT * FROM UTLY WHERE LY_TP=A_LY_TP AND LY=A_LY;

BEGIN

   L_SQLERRM:=NULL;
   UNAPIRA.L_EXCEPTION_STEP :='utly' ||'ly='||A_LY;
   FOR L_REC IN L_UTLY_CURSOR(A_LY, A_LY_TP) LOOP
      UNAPIRA3.L_PUTTEXT := 'utly' || L_SEP ||
      L_REC.LY_TP || L_SEP || L_REC.LY || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.COL_ID || L_SEP || L_REC.COL_TP || L_SEP || L_REC.COL_LEN || L_SEP ||
      L_REC.DISP_TITLE || L_SEP || L_REC.DISP_STYLE || L_SEP ||
      L_REC.DISP_TP || L_SEP || L_REC.DISP_WIDTH || L_SEP ||
      L_REC.DISP_FORMAT || L_SEP || L_REC.COL_ORDER || L_SEP ||
      L_REC.COL_ASC;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA3.U4DATAPUTLINE( ' ');

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveLyToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVELYTOFILE;

BEGIN
   L_SEP:=UNAPIRA.P_INTERNAL_SEP;
END UNAPIRALY;