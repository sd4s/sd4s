PACKAGE BODY unapirasc AS






STPERROR      EXCEPTION;
L_RET_CODE    INTEGER;
L_SQLERRM     VARCHAR2(255);
L_SQL_STRING  VARCHAR2(2000);
L_DYN_CURSOR  INTEGER;
L_SEP         CHAR(1);

CURSOR L_ALLSCGK_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   DECODE(SUBSTR(TABLE_NAME,1,6),'UTSCGK',1, 2) TABLE_ORDER1,
   LENGTH(TABLE_NAME) TABLE_ORDER2
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'SC'
   AND (TABLE_NAME LIKE 'UTSCGK%')
   ORDER BY 2 ASC, 3 ASC, 1 ASC;

CURSOR L_ALLSCMEGK_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   DECODE(SUBSTR(TABLE_NAME,1,6),'UTSCME',1, 2) TABLE_ORDER1,
   LENGTH(TABLE_NAME) TABLE_ORDER2
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'SC'
   AND (TABLE_NAME LIKE 'UTSCMEGK%')
   ORDER BY 2 ASC, 3 ASC, 1 ASC;

CURSOR L_ALLSCCUSTOM_TABLES_CURSOR IS
   SELECT DISTINCT TABLE_NAME,
   LENGTH(TABLE_NAME) TABLE_ORDER1
   FROM USER_TAB_COLUMNS
   WHERE COLUMN_NAME = 'SC'
   AND TABLE_NAME LIKE 'AT%'
   ORDER BY 2 ASC, 1 ASC;

CURSOR L_ALLSCCUSTOM_NORQ_TAB_CRS IS
   SELECT TABLE_NAME, LENGTH(TABLE_NAME) TABLE_ORDER1
   FROM USER_TAB_COLUMNS
   WHERE TABLE_NAME LIKE 'AT%'
   AND COLUMN_NAME IN ('SC', 'RQ')
   GROUP BY TABLE_NAME
   HAVING COUNT(COLUMN_NAME) = 2
   ORDER BY 2 ASC, 1 ASC;

CURSOR L_ALL_LTSCII_CURSOR(A_SC VARCHAR2) IS
   SELECT II, IIVALUE
   FROM UTSCII
   WHERE SC = A_SC
   AND SUBSTR(IIVALUE,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_ALL_LTSCPG_CURSOR(A_SC VARCHAR2) IS
   SELECT PG, VALUE_S
   FROM UTSCPG
   WHERE SC = A_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_ALL_LTSCPA_CURSOR(A_SC VARCHAR2) IS
   SELECT PA, VALUE_S
   FROM UTSCPA
   WHERE SC = A_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_ALL_LTSCME_CURSOR(A_SC VARCHAR2) IS
   SELECT ME, VALUE_S
   FROM UTSCME
   WHERE SC = A_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_ALL_LTSCMECELL_CURSOR(A_SC VARCHAR2) IS
   SELECT CELL, VALUE_S
   FROM UTSCMECELL
   WHERE SC = A_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG');

CURSOR L_UTLONGTEXT_CURSOR (A_DOC_NAME IN VARCHAR2) IS
   SELECT
    OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
   FROM UTLONGTEXT
   WHERE DOC_NAME = A_DOC_NAME
   ORDER BY LINE_NBR;

FUNCTION GETVERSION
   RETURN VARCHAR2
IS
BEGIN
   RETURN('06.07.00.00_00.13');
EXCEPTION
   WHEN OTHERS THEN
   RETURN (NULL);
END GETVERSION;




PROCEDURE LOGERROR
(A_API IN VARCHAR2, A_ERROR_MSG IN VARCHAR2)
IS
BEGIN
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES (UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
           A_API, A_ERROR_MSG);
END LOGERROR;




FUNCTION REMOVESCFROMARCHIVE
(A_SC IN VARCHAR2)
RETURN NUMBER IS

CURSOR L_ALLLTSCII_CURSOR(L_SC VARCHAR2) IS
   SELECT II, IIVALUE
   FROM UTSCII
   WHERE SC = L_SC
   AND SUBSTR(IIVALUE,-4) IN ('#TXT', '#LNK', '#IMG') ;

CURSOR L_ALLLTSCPG_CURSOR(L_SC VARCHAR2) IS
   SELECT PG, VALUE_S
   FROM UTSCPG
   WHERE SC = L_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG') ;

CURSOR L_ALLLTSCPA_CURSOR(L_SC VARCHAR2) IS
   SELECT PA, VALUE_S
   FROM UTSCPA
   WHERE SC = L_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG') ;

CURSOR L_ALLLTSCME_CURSOR(L_SC VARCHAR2) IS
   SELECT ME, VALUE_S
   FROM UTSCME
   WHERE SC = L_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG') ;

CURSOR L_ALLLTSCMECELL_CURSOR(L_SC VARCHAR2) IS
   SELECT CELL, VALUE_S
   FROM UTSCMECELL
   WHERE SC = L_SC
   AND SUBSTR(VALUE_S,-4) IN ('#TXT', '#LNK', '#IMG') ;

BEGIN
   
 FOR L_ROW IN L_ALLLTSCII_CURSOR(A_SC) LOOP
  DELETE FROM UAUTLONGTEXT
  WHERE DOC_NAME = L_ROW.IIVALUE;
 END LOOP;

   
 FOR L_ROW IN L_ALLLTSCPG_CURSOR(A_SC) LOOP
  DELETE FROM UAUTLONGTEXT
  WHERE DOC_NAME = L_ROW.VALUE_S;
 END LOOP;

 FOR L_ROW IN L_ALLLTSCPA_CURSOR(A_SC) LOOP
  DELETE FROM UAUTLONGTEXT
  WHERE DOC_NAME = L_ROW.VALUE_S;
 END LOOP;

 FOR L_ROW IN L_ALLLTSCME_CURSOR(A_SC) LOOP
  DELETE FROM UAUTLONGTEXT
  WHERE DOC_NAME = L_ROW.VALUE_S;
 END LOOP;

 FOR L_ROW IN L_ALLLTSCMECELL_CURSOR(A_SC) LOOP
  DELETE FROM UAUTLONGTEXT
  WHERE DOC_NAME = L_ROW.VALUE_S;
 END LOOP;

 
 FOR L_TABLE_REC IN L_ALLSCGK_TABLES_CURSOR LOOP
  L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
  L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
        'WHERE sc=:a_sc';
  BEGIN
   DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
   DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
   L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
  EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE <> -942 THEN
    L_SQLERRM := SUBSTR(SQLERRM,1,200);
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);
    L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);





   END IF;
  END;
  DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
 END LOOP;

 
 FOR L_TABLE_REC IN L_ALLSCMEGK_TABLES_CURSOR LOOP
  L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
  L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch ' ||
        'WHERE (sc, pg ,pgnode, pa, panode, me, menode) ' ||
                 'IN (SELECT sc, pg ,pgnode, pa, panode, me, menode ' ||
           'FROM utscme@uniarch '            ||
           'WHERE sc=:a_sc)';

  BEGIN
   DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
   DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
   L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
  EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE <> -942 THEN
    L_SQLERRM := SUBSTR(SQLERRM,1,200);
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);
    L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);





   END IF;
  END;
  DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
 END LOOP;

 
 FOR L_TABLE_REC IN L_ALLSCCUSTOM_TABLES_CURSOR LOOP
  L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
  L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
        'WHERE sc=:a_sc';
  BEGIN
   DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
   DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
   L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
  EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE <> -942 THEN
    L_SQLERRM := SUBSTR(SQLERRM,1,200);
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);
    L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
    LOGERROR ('RemoveScFromArchive',L_SQLERRM);





   END IF;
  END;
  DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
 END LOOP;
   

   DELETE FROM UAUTSC
   WHERE SC = A_SC;

   DELETE FROM UAUTSCAU
   WHERE SC = A_SC;

   DELETE FROM UAUTSCHS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCIC
   WHERE SC = A_SC;

   DELETE FROM UAUTSCICAU
   WHERE SC = A_SC;

   DELETE FROM UAUTSCICHS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCICHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCII
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPG
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPGAU
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPGHS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPGHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPG
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPA
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPAAU
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPAHS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPATD
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPASPA
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPASPB
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPASPC
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPASQC
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPAOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTSCPAHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPA
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPASPA
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPASPB
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPASPC
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPASQC
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCPAOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTRESULTEXCEPTION
   WHERE SC = A_SC;

   DELETE FROM UAUTSCME
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMEAU
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMEHS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMECELL
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMECELLLIST
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMECELLINPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMEHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMECELLOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCME
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCMECELL
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCMECELLLIST
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCMECELLINPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCMECELLOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UAUTSCRD
   WHERE SC = A_SC;

   DELETE FROM UAUTRSCRD
   WHERE SC = A_SC;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVESCFROMARCHIVE;




FUNCTION COPYSCTOARCHDB
(A_SC IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN)
 RETURN NUMBER IS
BEGIN
RETURN COPYSCTOARCHDB(A_SC, A_IGNORE_DUP_VAL_ON_INDEX, '');
END COPYSCTOARCHDB;

FUNCTION ARCHIVESCTODB
(A_SC IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYSCTOARCHDB(A_SC, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYSCTOARCHDB(A_SC, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyScToArchDB#return='||TO_CHAR(L_RET_CODE)||' for sc='||A_SC;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'ArchiveScToDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVESCTODB;




FUNCTION COPYSCTOARCHDB(A_SC IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN, A_PARENT_ARCHIVED_OBJ_TP IN VARCHAR2) RETURN NUMBER IS
L_STEP VARCHAR2(255) ;
BEGIN
   
   L_STEP := 'uautsc->utsc' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautsc' ||
   UNAPIRA.LISTALLCOLUMNS('utsc', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utsc', 'NO_BRACKETS', '1') ||
   ' FROM utsc' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscau->utscau' ;
   INSERT INTO UAUTSCAU
      (SC, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTSCAU
   WHERE SC = A_SC;
   L_STEP := 'uautschs->utschs' ;
   INSERT INTO UAUTSCHS
      (SC, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  SC, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UTSCHS
   WHERE SC = A_SC;
   L_STEP := 'uautschsdetails->utschsdetails' ;
   INSERT INTO UAUTSCHSDETAILS
      (SC, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTSCHSDETAILS
   WHERE SC = A_SC;
   L_STEP := 'uautscic->utscic' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautscic' ||
   UNAPIRA.LISTALLCOLUMNS('utscic', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscic', 'NO_BRACKETS', '1') ||
   ' FROM utscic' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscicau->utscicau' ;
   INSERT INTO UAUTSCICAU
      (SC, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTSCICAU
   WHERE SC = A_SC;
   L_STEP := 'uautscichs->utscichs' ;
   INSERT INTO UAUTSCICHS
      (SC, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTSCICHS
   WHERE SC = A_SC;
   L_STEP := 'uautscichsdetails->utscichsdetails' ;
   INSERT INTO UAUTSCICHSDETAILS
      (SC, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTSCICHSDETAILS
   WHERE SC = A_SC;
   L_STEP := 'uautscii->utscii' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautscii' ||
   UNAPIRA.LISTALLCOLUMNS('utscii', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscii', 'NO_BRACKETS', '1') ||
   ' FROM utscii' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscpg->utscpg' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautscpg' ||
   UNAPIRA.LISTALLCOLUMNS('utscpg', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscpg', 'NO_BRACKETS', '1') ||
   ' FROM utscpg' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscpgau->utscpgau' ;
   INSERT INTO UAUTSCPGAU
      (SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTSCPGAU
   WHERE SC = A_SC;
   L_STEP := 'uautscpghs->utscpghs' ;
   INSERT INTO UAUTSCPGHS
      (SC, PG, PGNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTSCPGHS
   WHERE SC = A_SC;
   L_STEP := 'uautscpghsdetails->utscpghsdetails' ;
   INSERT INTO UAUTSCPGHSDETAILS
      (SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTSCPGHSDETAILS
   WHERE SC = A_SC;
   L_STEP := 'uautrscpg->utrscpg' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautrscpg' ||
   UNAPIRA.LISTALLCOLUMNS('utrscpg', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscpg', 'NO_BRACKETS', '1') ||
   ' FROM utrscpg' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscpa->utscpa' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautscpa' ||
   UNAPIRA.LISTALLCOLUMNS('utscpa', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscpa', 'NO_BRACKETS', '1') ||
   ' FROM utscpa' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscpaau->utscpaau' ;
   INSERT INTO UAUTSCPAAU
      (SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTSCPAAU
   WHERE SC = A_SC;
   L_STEP := 'uautscpahs->utscpahs' ;
   INSERT INTO UAUTSCPAHS
      (SC, PG, PGNODE, PA, PANODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION,
      LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, PA, PANODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION,
      LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTSCPAHS
   WHERE SC = A_SC;
   L_STEP := 'uautscpatd->utscpatd' ;
   INSERT INTO UAUTSCPATD
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, ST, ST_VERSION, EXEC_END_DATE,
      EXEC_END_DATE_TZ, VALUE_F, VALUE_S)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, ST, ST_VERSION, EXEC_END_DATE,
      EXEC_END_DATE_TZ, VALUE_F, VALUE_S
   FROM UTSCPATD
   WHERE SC = A_SC;
   L_STEP := 'uautscpaspa->utscpaspa' ;
   INSERT INTO UAUTSCPASPA
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTSCPASPA
   WHERE SC = A_SC;
   L_STEP := 'uautscpaspb->utscpaspb' ;
   INSERT INTO UAUTSCPASPB
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTSCPASPB
   WHERE SC = A_SC;
   L_STEP := 'uautscpaspc->utscpaspc' ;
   INSERT INTO UAUTSCPASPC
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTSCPASPC
   WHERE SC = A_SC;
   L_STEP := 'uautscpasqc->utscpasqc' ;
   INSERT INTO UAUTSCPASQC
      (SC, PG, PGNODE, PA, PANODE, SQC_AVG, SQC_SIGMA, SQC_AVGR, SQC_UCLR,
      VALID_SQC)
   SELECT  SC, PG, PGNODE, PA, PANODE, SQC_AVG, SQC_SIGMA, SQC_AVGR, SQC_UCLR,
      VALID_SQC
   FROM UTSCPASQC
   WHERE SC = A_SC;
   L_STEP := 'uautscpaoutput->utscpaoutput' ;
   INSERT INTO UAUTSCPAOUTPUT
      (SC, PG, PGNODE, PA, PANODE, SAVE_PG, SAVE_PGNODE, SAVE_PA, SAVE_PANODE)
   SELECT        SC, PG, PGNODE, PA, PANODE, SAVE_PG, SAVE_PGNODE, SAVE_PA, SAVE_PANODE
   FROM UTSCPAOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautscpahsdetails->utscpahsdetails' ;
   INSERT INTO UAUTSCPAHSDETAILS
      (SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTSCPAHSDETAILS
   WHERE SC = A_SC;
   L_STEP := 'uautrscpa->utrscpa' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautrscpa' ||
   UNAPIRA.LISTALLCOLUMNS('utrscpa', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscpa', 'NO_BRACKETS', '1') ||
   ' FROM utrscpa' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautrscpaspa->utrscpaspa' ;
   INSERT INTO UAUTRSCPASPA
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTRSCPASPA
   WHERE SC = A_SC;
   L_STEP := 'uautrscpaspb->utrscpaspb' ;
   INSERT INTO UAUTRSCPASPB
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTRSCPASPB
   WHERE SC = A_SC;
   L_STEP := 'uautrscpaspc->utrscpaspc' ;
   INSERT INTO UAUTRSCPASPC
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UTRSCPASPC
   WHERE SC = A_SC;
   L_STEP := 'uautrscpasqc->utrscpasqc' ;
   INSERT INTO UAUTRSCPASQC
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, SQC_AVG, SQC_SIGMA, SQC_AVGR,
      SQC_UCLR, VALID_SQC)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, SQC_AVG, SQC_SIGMA, SQC_AVGR,
      SQC_UCLR, VALID_SQC
   FROM UTRSCPASQC
   WHERE SC = A_SC;
   L_STEP := 'uautrscpaoutput->utrscpaoutput' ;
   INSERT INTO UAUTRSCPAOUTPUT
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, SAVE_PG, SAVE_PGNODE, SAVE_PA,
      SAVE_PANODE)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, SAVE_PG, SAVE_PGNODE, SAVE_PA,
      SAVE_PANODE
   FROM UTRSCPAOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautresultexception->utresultexception' ;
   INSERT INTO UAUTRESULTEXCEPTION
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS)
   SELECT        SC, PG, PGNODE, PA, PANODE, REANALYSIS
   FROM UTRESULTEXCEPTION
   WHERE SC = A_SC;
   L_STEP := 'uautscme->utscme' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautscme' ||
   UNAPIRA.LISTALLCOLUMNS('utscme', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscme', 'NO_BRACKETS', '1') ||
   ' FROM utscme' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautscmeau->utscmeau' ;
   INSERT INTO UAUTSCMEAU
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UTSCMEAU
   WHERE SC = A_SC;
   L_STEP := 'uautscmehs->utscmehs' ;
   INSERT INTO UAUTSCMEHS
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, WHO, WHO_DESCRIPTION, WHAT,
      WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, WHO, WHO_DESCRIPTION, WHAT,
      WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UTSCMEHS
   WHERE SC = A_SC;
   L_STEP := 'uautscmecell->utscmecell' ;
   INSERT INTO UAUTSCMECELL
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT
   FROM UTSCMECELL
   WHERE SC = A_SC;
   L_STEP := 'uautscmecelllist->utscmecelllist' ;
   INSERT INTO UAUTSCMECELLLIST
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED
   FROM UTSCMECELLLIST
   WHERE SC = A_SC;
   L_STEP := 'uautscmecellinput->utscmecellinput' ;
   INSERT INTO UAUTSCMECELLINPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS
   FROM UTSCMECELLINPUT
   WHERE SC = A_SC;
   L_STEP := 'uautscmehsdetails->utscmehsdetails' ;
   INSERT INTO UAUTSCMEHSDETAILS
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UTSCMEHSDETAILS
   WHERE SC = A_SC;
   L_STEP := 'uautscmecelloutput->utscmecelloutput' ;
   INSERT INTO UAUTSCMECELLOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW
   FROM UTSCMECELLOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautscmecelllistoutput->utscmecelllistoutput' ;
   INSERT INTO UAUTSCMECELLLISTOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW
   FROM UTSCMECELLLISTOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautrscme->utrscme' ;
   EXECUTE IMMEDIATE
   'INSERT INTO uautrscme' ||
   UNAPIRA.LISTALLCOLUMNS('utrscme', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscme', 'NO_BRACKETS', '1') ||
   ' FROM utrscme' ||
   ' WHERE sc = '''||A_SC||'''';
   L_STEP := 'uautrscmecell->utrscmecell' ;
   INSERT INTO UAUTRSCMECELL
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT
   FROM UTRSCMECELL
   WHERE SC = A_SC;
   L_STEP := 'uautrscmecelllist->utrscmecelllist' ;
   INSERT INTO UAUTRSCMECELLLIST
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED
   FROM UTRSCMECELLLIST
   WHERE SC = A_SC;
   L_STEP := 'uautrscmecellinput->utrscmecellinput' ;
   INSERT INTO UAUTRSCMECELLINPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS
   FROM UTRSCMECELLINPUT
   WHERE SC = A_SC;
   L_STEP := 'uautrscmecelloutput->utrscmecelloutput' ;
   INSERT INTO UAUTRSCMECELLOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW
   FROM UTRSCMECELLOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautrscmecelllistoutput->utrscmecelllistoutput' ;
   INSERT INTO UAUTRSCMECELLLISTOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW
   FROM UTRSCMECELLLISTOUTPUT
   WHERE SC = A_SC;
   L_STEP := 'uautscrd->utscrd' ;
   INSERT INTO UAUTSCRD
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS
   FROM UTSCRD
   WHERE SC = A_SC;
   L_STEP := 'uautrscrd->utrscrd' ;
   INSERT INTO UAUTRSCRD
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS
   FROM UTRSCRD
   WHERE SC = A_SC;

   
   FOR L_TABLE_REC IN L_ALLSCGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||
                      ' WHERE sc=:a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScToArchDB',L_SQLERRM);




         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   FOR L_TABLE_REC IN L_ALLSCMEGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||



                      ' WHERE sc = :a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScToArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScToArchDB',L_SQLERRM);




         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
IF (A_PARENT_ARCHIVED_OBJ_TP = '') THEN
FOR L_TABLE_REC IN L_ALLSCCUSTOM_TABLES_CURSOR LOOP
L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
L_SQL_STRING := 'INSERT INTO ' || L_TABLE_REC.TABLE_NAME || '@uniarch' || UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||' SELECT' ||UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') || ' FROM '|| L_TABLE_REC.TABLE_NAME || ' WHERE sc=:a_sc';
BEGIN
   DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
   DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
      L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
 WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
         L_SQLERRM := SUBSTR(SQLERRM,1,200);
         LOGERROR ('CopyScToArchDB',L_SQLERRM);
         L_SQLERRM := 'Error while archiving table '   || L_TABLE_REC.TABLE_NAME;
     LOGERROR ('CopyScToArchDB',L_SQLERRM);
     
     
     
      END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
END IF ;
IF (A_PARENT_ARCHIVED_OBJ_TP = 'rq') THEN
FOR L_TABLE_REC IN L_ALLSCCUSTOM_NORQ_TAB_CRS LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
   L_SQL_STRING := 'INSERT INTO ' || L_TABLE_REC.TABLE_NAME || '@uniarch ' || UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') || ' SELECT '|| UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') || ' FROM ' || L_TABLE_REC.TABLE_NAME || ' WHERE sc=:a_sc';
   BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScToArchDB', L_SQLERRM);
            L_SQLERRM := 'Error while archiving table ' || L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScToArchDB',L_SQLERRM);



END IF;
      END;
DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
END IF;

   

   FOR L_REC IN L_ALL_LTSCII_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scii)->utlongtext' ;
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCPG_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scpg)->utlongtext' ;
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCPA_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scpa)->utlongtext' ;
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCME_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scme)->utlongtext' ;
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCMECELL_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scmecell)->utlongtext' ;
      BEGIN
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
         INSERT INTO UAUTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S ;
      END;
   END LOOP;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVESCFROMARCHIVE(A_SC);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYSCTOARCHDB;

FUNCTION COPYSCFROMARCHDB(A_SC IN VARCHAR2, A_IGNORE_DUP_VAL_ON_INDEX BOOLEAN) RETURN NUMBER IS
L_STEP VARCHAR2(255) ;
BEGIN
   

   EXECUTE IMMEDIATE
   'INSERT INTO utsc' ||
   UNAPIRA.LISTALLCOLUMNS('utsc', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utsc', 'NO_BRACKETS', '1') ||
   ' FROM uautsc' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTSCAU
      (SC, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTSCAU
   WHERE SC = A_SC;

   INSERT INTO UTSCHS
      (SC, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ)
   SELECT  SC, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY,
      TR_SEQ, EV_SEQ
   FROM UAUTSCHS
   WHERE SC = A_SC;

   INSERT INTO UTSCHSDETAILS
      (SC, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTSCHSDETAILS
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utscic' ||
   UNAPIRA.LISTALLCOLUMNS('utscic', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscic', 'NO_BRACKETS', '1') ||
   ' FROM uautscic' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTSCICAU
      (SC, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, IC, ICNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTSCICAU
   WHERE SC = A_SC;

   INSERT INTO UTSCICHS
      (SC, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, IC, ICNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTSCICHS
   WHERE SC = A_SC;

   INSERT INTO UTSCICHSDETAILS
      (SC, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, IC, ICNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTSCICHSDETAILS
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utscii' ||
   UNAPIRA.LISTALLCOLUMNS('utscii', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscii', 'NO_BRACKETS', '1') ||
   ' FROM uautscii' ||
   ' WHERE sc = '''||A_SC||'''';

   EXECUTE IMMEDIATE
   'INSERT INTO utscpg' ||
   UNAPIRA.LISTALLCOLUMNS('utscpg', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscpg', 'NO_BRACKETS', '1') ||
   ' FROM uautscpg' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTSCPGAU
      (SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTSCPGAU
   WHERE SC = A_SC;

   INSERT INTO UTSCPGHS
      (SC, PG, PGNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION, LOGDATE,
      LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTSCPGHS
   WHERE SC = A_SC;

   INSERT INTO UTSCPGHSDETAILS
      (SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTSCPGHSDETAILS
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utrscpg' ||
   UNAPIRA.LISTALLCOLUMNS('utrscpg', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscpg', 'NO_BRACKETS', '1') ||
   ' FROM uautrscpg' ||
   ' WHERE sc = '''||A_SC||'''';

   EXECUTE IMMEDIATE
   'INSERT INTO utscpa' ||
   UNAPIRA.LISTALLCOLUMNS('utscpa', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscpa', 'NO_BRACKETS', '1') ||
   ' FROM uautscpa' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTSCPAAU
      (SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, PA, PANODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTSCPAAU
   WHERE SC = A_SC;

   INSERT INTO UTSCPAHS
      (SC, PG, PGNODE, PA, PANODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION,
      LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, PA, PANODE, WHO, WHO_DESCRIPTION, WHAT, WHAT_DESCRIPTION,
      LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTSCPAHS
   WHERE SC = A_SC;

   INSERT INTO UTSCPATD
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, ST, ST_VERSION, EXEC_END_DATE,
      EXEC_END_DATE_TZ, VALUE_F, VALUE_S)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, ST, ST_VERSION, EXEC_END_DATE,
      EXEC_END_DATE_TZ, VALUE_F, VALUE_S
   FROM UAUTSCPATD
   WHERE SC = A_SC;

   INSERT INTO UTSCPASPA
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTSCPASPA
   WHERE SC = A_SC;

   INSERT INTO UTSCPASPB
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTSCPASPB
   WHERE SC = A_SC;

   INSERT INTO UTSCPASPC
      (SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC, HIGH_SPEC,
      LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTSCPASPC
   WHERE SC = A_SC;

   INSERT INTO UTSCPASQC
      (SC, PG, PGNODE, PA, PANODE, SQC_AVG, SQC_SIGMA, SQC_AVGR, SQC_UCLR,
      VALID_SQC)
   SELECT  SC, PG, PGNODE, PA, PANODE, SQC_AVG, SQC_SIGMA, SQC_AVGR, SQC_UCLR,
      VALID_SQC
   FROM UAUTSCPASQC
   WHERE SC = A_SC;

   INSERT INTO UTSCPAOUTPUT
      (SC, PG, PGNODE, PA, PANODE, SAVE_PG, SAVE_PGNODE, SAVE_PA, SAVE_PANODE)
   SELECT        SC, PG, PGNODE, PA, PANODE, SAVE_PG, SAVE_PGNODE, SAVE_PA, SAVE_PANODE
   FROM UAUTSCPAOUTPUT
   WHERE SC = A_SC;

   INSERT INTO UTSCPAHSDETAILS
      (SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, PA, PANODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTSCPAHSDETAILS
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utrscpa' ||
   UNAPIRA.LISTALLCOLUMNS('utrscpa', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscpa', 'NO_BRACKETS', '1') ||
   ' FROM uautrscpa' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTRSCPASPA
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTRSCPASPA
   WHERE SC = A_SC;

   INSERT INTO UTRSCPASPB
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTRSCPASPB
   WHERE SC = A_SC;

   INSERT INTO UTRSCPASPC
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, LOW_LIMIT, HIGH_LIMIT, LOW_SPEC,
      HIGH_SPEC, LOW_DEV, REL_LOW_DEV, TARGET, HIGH_DEV, REL_HIGH_DEV
   FROM UAUTRSCPASPC
   WHERE SC = A_SC;

   INSERT INTO UTRSCPASQC
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, SQC_AVG, SQC_SIGMA, SQC_AVGR,
      SQC_UCLR, VALID_SQC)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, SQC_AVG, SQC_SIGMA, SQC_AVGR,
      SQC_UCLR, VALID_SQC
   FROM UAUTRSCPASQC
   WHERE SC = A_SC;

   INSERT INTO UTRSCPAOUTPUT
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS, SAVE_PG, SAVE_PGNODE, SAVE_PA,
      SAVE_PANODE)
   SELECT  SC, PG, PGNODE, PA, PANODE, REANALYSIS, SAVE_PG, SAVE_PGNODE, SAVE_PA,
      SAVE_PANODE
   FROM UAUTRSCPAOUTPUT
   WHERE SC = A_SC;

   INSERT INTO UTRESULTEXCEPTION
      (SC, PG, PGNODE, PA, PANODE, REANALYSIS)
   SELECT        SC, PG, PGNODE, PA, PANODE, REANALYSIS
   FROM UAUTRESULTEXCEPTION
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utscme' ||
   UNAPIRA.LISTALLCOLUMNS('utscme', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utscme', 'NO_BRACKETS', '1') ||
   ' FROM uautscme' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTSCMEAU
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE)
   SELECT        SC, PG, PGNODE, PA, PANODE, ME, MENODE, AU, AU_VERSION, AUSEQ, VALUE
   FROM UAUTSCMEAU
   WHERE SC = A_SC;

   INSERT INTO UTSCMEHS
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, WHO, WHO_DESCRIPTION, WHAT,
      WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, WHO, WHO_DESCRIPTION, WHAT,
      WHAT_DESCRIPTION, LOGDATE, LOGDATE_TZ, WHY, TR_SEQ, EV_SEQ
   FROM UAUTSCMEHS
   WHERE SC = A_SC;

   INSERT INTO UTSCMECELL
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT
   FROM UAUTSCMECELL
   WHERE SC = A_SC;

   INSERT INTO UTSCMECELLLIST
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED
   FROM UAUTSCMECELLLIST
   WHERE SC = A_SC;

   INSERT INTO UTSCMECELLINPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS
   FROM UAUTSCMECELLINPUT
   WHERE SC = A_SC;

   INSERT INTO UTSCMEHSDETAILS
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS)
   SELECT        SC, PG, PGNODE, PA, PANODE, ME, MENODE, TR_SEQ, EV_SEQ, SEQ, DETAILS
   FROM UAUTSCMEHSDETAILS
   WHERE SC = A_SC;

   INSERT INTO UTSCMECELLOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW
   FROM UAUTSCMECELLOUTPUT
   WHERE SC = A_SC;

   INSERT INTO UTSCMECELLLISTOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW
   FROM UAUTSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   EXECUTE IMMEDIATE
   'INSERT INTO utrscme' ||
   UNAPIRA.LISTALLCOLUMNS('utrscme', 'BRACKETS', '1') ||
   ' SELECT '||   UNAPIRA.LISTALLCOLUMNS('utrscme', 'NO_BRACKETS', '1') ||
   ' FROM uautrscme' ||
   ' WHERE sc = '''||A_SC||'''';

   INSERT INTO UTRSCMECELL
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, CELLNODE,
      DSP_TITLE, VALUE_F, VALUE_S, CELL_TP, POS_X, POS_Y, ALIGN, WINSIZE_X,
      WINSIZE_Y, IS_PROTECTED, MANDATORY, HIDDEN, UNIT, FORMAT, EQ, EQ_VERSION,
      COMPONENT, CALC_TP, CALC_FORMULA, VALID_CF, MAX_X, MAX_Y, MULTI_SELECT
   FROM UAUTRSCMECELL
   WHERE SC = A_SC;

   INSERT INTO UTRSCMECELLLIST
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_X, INDEX_Y,
      VALUE_F, VALUE_S, SELECTED
   FROM UAUTRSCMECELLLIST
   WHERE SC = A_SC;

   INSERT INTO UTRSCMECELLINPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INPUT_TP,
      INPUT_SOURCE, INPUT_VERSION, INPUT_PG, INPUT_PGNODE, INPUT_PP_VERSION,
      INPUT_PA, INPUT_PANODE, INPUT_PR_VERSION, INPUT_ME, INPUT_MENODE,
      INPUT_MT_VERSION, INPUT_REANALYSIS
   FROM UAUTRSCMECELLINPUT
   WHERE SC = A_SC;

   INSERT INTO UTRSCMECELLOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, SAVE_TP, SAVE_PG,
      SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION, SAVE_ME,
      SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID, SAVE_IDNODE,
      SAVE_REANALYSIS, CREATE_NEW
   FROM UAUTRSCMECELLOUTPUT
   WHERE SC = A_SC;

   INSERT INTO UTRSCMECELLLISTOUTPUT
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, REANALYSIS, CELL, INDEX_Y, SAVE_TP,
      SAVE_PG, SAVE_PGNODE, SAVE_PP_VERSION, SAVE_PA, SAVE_PANODE, SAVE_PR_VERSION,
      SAVE_ME, SAVE_MENODE, SAVE_MT_VERSION, SAVE_EQ, SAVE_EQ_VERSION, SAVE_ID,
      SAVE_IDNODE, SAVE_REANALYSIS, CREATE_NEW
   FROM UAUTRSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   INSERT INTO UTSCRD
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS
   FROM UAUTSCRD
   WHERE SC = A_SC;

   INSERT INTO UTRSCRD
      (SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS)
   SELECT  SC, PG, PGNODE, PA, PANODE, ME, MENODE, RD, RDNODE, VALUE_F, VALUE_S,
      REANALYSIS
   FROM UAUTRSCRD
   WHERE SC = A_SC;
   
   FOR L_TABLE_REC IN L_ALLSCGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO ' || L_TABLE_REC.TABLE_NAME || ' ' ||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT ' ||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE sc=:a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '|| L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLSCMEGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '     ||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT /*+ ORDERED USE_NL(uautscme) */ '     ||
                      'a.'||SUBSTR(REPLACE(UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME,'NO_BRACKETS','0'),', ',', a.'),2) ||
                      ' FROM ua'||L_TABLE_REC.TABLE_NAME||' a, uautscme b '  ||
                      'WHERE b.sc=:a_sc '             ||
                      ' AND a.sc = b.sc'             ||
                      ' AND a.pg = b.pg'             ||
                      ' AND a.pgnode = b.pgnode'          ||
                      ' AND a.pa = b.pa'             ||
                      ' AND a.panode = b.panode'          ||
                      ' AND a.me = b.me'             ||
                      ' AND a.menode = b.menode' ;
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLSCCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'INSERT INTO '||L_TABLE_REC.TABLE_NAME||' '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'BRACKETS', '0') ||
                      ' SELECT '||
                      UNAPIRA.LISTALLCOLUMNS(L_TABLE_REC.TABLE_NAME, 'NO_BRACKETS', '0') ||
                      ' FROM '||L_TABLE_REC.TABLE_NAME||'@uniarch '||
                      ' WHERE sc=:a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('CopyScFromArchDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;


   

   FOR L_REC IN L_ALL_LTSCII_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scii)->utlongtext' ;
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.IIVALUE;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCPG_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scpg)->utlongtext' ;
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCPA_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scpa)->utlongtext' ;
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCME_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scme)->utlongtext' ;
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   FOR L_REC IN L_ALL_LTSCMECELL_CURSOR(A_SC) LOOP
      L_STEP := 'uautlongtext(scmecell)->utlongtext' ;
      BEGIN
         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         DELETE FROM UTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;

         INSERT INTO UTLONGTEXT
         (OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE)
         SELECT
          OBJ_ID, OBJ_TP, OBJ_VERSION, DOC_ID, DOC_TP, DOC_NAME, LINE_NBR, TEXT_LINE
         FROM UAUTLONGTEXT
         WHERE DOC_NAME = L_REC.VALUE_S;
      END;
   END LOOP;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   IF A_IGNORE_DUP_VAL_ON_INDEX THEN
      L_RET_CODE := REMOVESCFROMDB(A_SC);
   END IF;
   RETURN(UNAPIGEN.DBERR_NORECORDS);
END COPYSCFROMARCHDB;

FUNCTION RESTORESCFROMDB
(A_SC IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   L_RET_CODE := COPYSCFROMARCHDB(A_SC, TRUE);
   IF L_RET_CODE = UNAPIGEN.DBERR_NORECORDS THEN
      L_RET_CODE := COPYSCFROMARCHDB(A_SC, FALSE);
      IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
         L_SQLERRM := 'CopyScFromArchDB#return='||TO_CHAR(L_RET_CODE)||' for sc='||A_SC;
         RAISE STPERROR;
      END IF;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SUBSTR(SQLERRM,1,200);
   END IF;
   UNAPIGEN.U4ROLLBACK;
   INSERT INTO UTERROR(CLIENT_ID, APPLIC, WHO, LOGDATE, LOGDATE_TZ, API_NAME, ERROR_MSG)
   VALUES(UNAPIGEN.P_CLIENT_ID, UNAPIGEN.P_APPLIC_NAME, UNAPIGEN.P_USER, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
          'RestoreScFromDB', L_SQLERRM);
   UNAPIGEN.U4COMMIT;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END RESTORESCFROMDB;

FUNCTION REMOVESCFROMDB
(A_SC IN VARCHAR2)
RETURN NUMBER IS
BEGIN
   
   FOR L_REC2 IN L_ALL_LTSCII_CURSOR(A_SC) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_REC2.IIVALUE;
   END LOOP;

   FOR L_REC2 IN L_ALL_LTSCPG_CURSOR(A_SC) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_REC2.VALUE_S;
   END LOOP;

   FOR L_REC2 IN L_ALL_LTSCPA_CURSOR(A_SC) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_REC2.VALUE_S;
   END LOOP;

   FOR L_REC2 IN L_ALL_LTSCME_CURSOR(A_SC) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_REC2.VALUE_S;
   END LOOP;

   FOR L_REC2 IN L_ALL_LTSCMECELL_CURSOR(A_SC) LOOP
      DELETE FROM UTLONGTEXT
      WHERE DOC_NAME = L_REC2.VALUE_S;
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLSCGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE sc=:a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveScFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveScFromDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLSCMEGK_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE (sc, pg ,pgnode, pa, panode, me, menode) ' ||
          ' IN (SELECT sc, pg ,pgnode, pa, panode, me, menode ' ||
                      ' FROM utscme ' ||
                      ' WHERE sc = :a_sc)';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7); 
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveScFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveScFromDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;
   
   FOR L_TABLE_REC IN L_ALLSCCUSTOM_TABLES_CURSOR LOOP
      L_DYN_CURSOR := DBMS_SQL.OPEN_CURSOR;
      L_SQL_STRING := 'DELETE FROM '||L_TABLE_REC.TABLE_NAME ||
                      ' WHERE sc=:a_sc';
      BEGIN
         DBMS_SQL.PARSE(L_DYN_CURSOR, L_SQL_STRING, DBMS_SQL.V7);
         DBMS_SQL.BIND_VARIABLE(L_DYN_CURSOR, ':a_sc', A_SC);
         L_RET_CODE := DBMS_SQL.EXECUTE(L_DYN_CURSOR);
      EXCEPTION
      WHEN OTHERS THEN
         IF SQLCODE <> -942 THEN
            L_SQLERRM := SUBSTR(SQLERRM,1,200);
            LOGERROR ('RemoveScFromDB',L_SQLERRM);
            L_SQLERRM := 'Error while archiving table '||L_TABLE_REC.TABLE_NAME;
            LOGERROR ('RemoveScFromDB',L_SQLERRM);



         END IF;
      END;
      DBMS_SQL.CLOSE_CURSOR(L_DYN_CURSOR);
   END LOOP;

   

   DELETE FROM UTSC
   WHERE SC = A_SC;

   DELETE FROM UTSCAU
   WHERE SC = A_SC;

   DELETE FROM UTSCHS
   WHERE SC = A_SC;

   DELETE FROM UTSCHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UTSCIC
   WHERE SC = A_SC;

   DELETE FROM UTSCICAU
   WHERE SC = A_SC;

   DELETE FROM UTSCICHS
   WHERE SC = A_SC;

   DELETE FROM UTSCICHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UTSCII
   WHERE SC = A_SC;

   DELETE FROM UTSCPG
   WHERE SC = A_SC;

   DELETE FROM UTSCPGAU
   WHERE SC = A_SC;

   DELETE FROM UTSCPGHS
   WHERE SC = A_SC;

   DELETE FROM UTSCPGHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UTRSCPG
   WHERE SC = A_SC;

   DELETE FROM UTSCPA
   WHERE SC = A_SC;

   DELETE FROM UTSCPAAU
   WHERE SC = A_SC;

   DELETE FROM UTSCPAHS
   WHERE SC = A_SC;

   DELETE FROM UTSCPATD
   WHERE SC = A_SC;

   DELETE FROM UTSCPASPA
   WHERE SC = A_SC;

   DELETE FROM UTSCPASPB
   WHERE SC = A_SC;

   DELETE FROM UTSCPASPC
   WHERE SC = A_SC;

   DELETE FROM UTSCPASQC
   WHERE SC = A_SC;

   DELETE FROM UTSCPAOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTSCPAHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UTRSCPA
   WHERE SC = A_SC;

   DELETE FROM UTRSCPASPA
   WHERE SC = A_SC;

   DELETE FROM UTRSCPASPB
   WHERE SC = A_SC;

   DELETE FROM UTRSCPASPC
   WHERE SC = A_SC;

   DELETE FROM UTRSCPASQC
   WHERE SC = A_SC;

   DELETE FROM UTRSCPAOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTRESULTEXCEPTION
   WHERE SC = A_SC;

   DELETE FROM UTSCME
   WHERE SC = A_SC;

   DELETE FROM UTSCMEAU
   WHERE SC = A_SC;

   DELETE FROM UTSCMEHS
   WHERE SC = A_SC;

   DELETE FROM UTSCMECELL
   WHERE SC = A_SC;

   DELETE FROM UTSCMECELLLIST
   WHERE SC = A_SC;

   DELETE FROM UTSCMECELLINPUT
   WHERE SC = A_SC;

   DELETE FROM UTSCMEHSDETAILS
   WHERE SC = A_SC;

   DELETE FROM UTSCMECELLOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTRSCME
   WHERE SC = A_SC;

   DELETE FROM UTRSCMECELL
   WHERE SC = A_SC;

   DELETE FROM UTRSCMECELLLIST
   WHERE SC = A_SC;

   DELETE FROM UTRSCMECELLINPUT
   WHERE SC = A_SC;

   DELETE FROM UTRSCMECELLOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTRSCMECELLLISTOUTPUT
   WHERE SC = A_SC;

   DELETE FROM UTSCRD
   WHERE SC = A_SC;

   DELETE FROM UTRSCRD
   WHERE SC = A_SC;

   
   
   
   
   
   
   
   
   IF TO_NUMBER(UNAPIRA.P_ARCHIVE_ARCHIVER_VERSION,'999D9','NLS_NUMERIC_CHARACTERS=''.,''') < 2.0 THEN
      DELETE FROM UTJOURNALDETAILS
      WHERE SC = A_SC;
   END IF;

   RETURN(UNAPIGEN.DBERR_SUCCESS);
END REMOVESCFROMDB;

FUNCTION ARCHIVESCTOFILE
(A_SC            IN VARCHAR2)
RETURN NUMBER IS

CURSOR L_UTSC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSC WHERE SC=A_SC;

CURSOR L_UTSCAU_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCAU WHERE SC=A_SC;

CURSOR L_UTSCHS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCHS WHERE SC=A_SC;

CURSOR L_UTSCHSDETAILS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCHSDETAILS WHERE SC=A_SC;

CURSOR L_UTSCIC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSCIC WHERE SC=A_SC;

CURSOR L_UTSCICAU_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCICAU WHERE SC=A_SC;

CURSOR L_UTSCICHS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCICHS WHERE SC=A_SC;

CURSOR L_UTSCICHSDETAILS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCICHSDETAILS WHERE SC=A_SC;

CURSOR L_UTSCII_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSCII WHERE SC=A_SC;

CURSOR L_UTSCPG_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSCPG WHERE SC=A_SC;

CURSOR L_UTSCPGAU_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPGAU WHERE SC=A_SC;

CURSOR L_UTSCPGHS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPGHS WHERE SC=A_SC;

CURSOR L_UTSCPGHSDETAILS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPGHSDETAILS WHERE SC=A_SC;

CURSOR L_UTRSCPG_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDRSCPG WHERE SC=A_SC;

CURSOR L_UTSCPA_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSCPA WHERE SC=A_SC;

CURSOR L_UTSCPAAU_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPAAU WHERE SC=A_SC;

CURSOR L_UTSCPAHS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPAHS WHERE SC=A_SC;

CURSOR L_UTSCPATD_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPATD WHERE SC=A_SC;

CURSOR L_UTSCPASPA_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPASPA WHERE SC=A_SC;

CURSOR L_UTSCPASPB_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPASPB WHERE SC=A_SC;

CURSOR L_UTSCPASPC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPASPC WHERE SC=A_SC;

CURSOR L_UTSCPASQC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPASQC WHERE SC=A_SC;

CURSOR L_UTSCPAOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPAOUTPUT WHERE SC=A_SC;

CURSOR L_UTSCPAHSDETAILS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCPAHSDETAILS WHERE SC=A_SC;

CURSOR L_UTRSCPA_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDRSCPA WHERE SC=A_SC;

CURSOR L_UTRSCPASPA_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCPASPA WHERE SC=A_SC;

CURSOR L_UTRSCPASPB_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCPASPB WHERE SC=A_SC;

CURSOR L_UTRSCPASPC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCPASPC WHERE SC=A_SC;

CURSOR L_UTRSCPASQC_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCPASQC WHERE SC=A_SC;

CURSOR L_UTRSCPAOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCPAOUTPUT WHERE SC=A_SC;

CURSOR L_UTRESULTEXCEPTION_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRESULTEXCEPTION WHERE SC=A_SC;

CURSOR L_UTSCME_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDSCME WHERE SC=A_SC;

CURSOR L_UTSCMEAU_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMEAU WHERE SC=A_SC;

CURSOR L_UTSCMEHS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMEHS WHERE SC=A_SC;

CURSOR L_UTSCMECELL_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMECELL WHERE SC=A_SC;

CURSOR L_UTSCMECELLLIST_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMECELLLIST WHERE SC=A_SC;

CURSOR L_UTSCMECELLINPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMECELLINPUT WHERE SC=A_SC;

CURSOR L_UTSCMEHSDETAILS_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMEHSDETAILS WHERE SC=A_SC;

CURSOR L_UTSCMECELLOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMECELLOUTPUT WHERE SC=A_SC;

CURSOR L_UTSCMECELLLISTOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCMECELLLISTOUTPUT WHERE SC=A_SC;

CURSOR L_UTRSCME_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UDRSCME WHERE SC=A_SC;

CURSOR L_UTRSCMECELL_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCMECELL WHERE SC=A_SC;

CURSOR L_UTRSCMECELLLIST_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCMECELLLIST WHERE SC=A_SC;

CURSOR L_UTRSCMECELLINPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCMECELLINPUT WHERE SC=A_SC;

CURSOR L_UTRSCMECELLOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCMECELLOUTPUT WHERE SC=A_SC;

CURSOR L_UTRSCMECELLLISTOUTPUT_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCMECELLLISTOUTPUT WHERE SC=A_SC;

CURSOR L_UTSCRD_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTSCRD WHERE SC=A_SC;

CURSOR L_UTRSCRD_CURSOR (A_SC IN VARCHAR2) IS
   SELECT * FROM UTRSCRD WHERE SC=A_SC;

BEGIN
   L_SQLERRM:=NULL;
   UNAPIRA.L_EXCEPTION_STEP :='scii longtext' ||'sc='||A_SC;
   FOR L_REC2 IN L_ALL_LTSCII_CURSOR(A_SC) LOOP
      FOR L_REC IN L_UTLONGTEXT_CURSOR(L_REC2.IIVALUE) LOOP
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='scpg longtext' ||'sc='||A_SC;
   FOR L_REC2 IN L_ALL_LTSCPG_CURSOR(A_SC) LOOP
      FOR L_REC IN L_UTLONGTEXT_CURSOR(L_REC2.VALUE_S) LOOP
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='scpa longtext' ||'sc='||A_SC;
   FOR L_REC2 IN L_ALL_LTSCPA_CURSOR(A_SC) LOOP
      FOR L_REC IN L_UTLONGTEXT_CURSOR(L_REC2.VALUE_S) LOOP
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='scme longtext' ||'sc='||A_SC;
   FOR L_REC2 IN L_ALL_LTSCME_CURSOR(A_SC) LOOP
      FOR L_REC IN L_UTLONGTEXT_CURSOR(L_REC2.VALUE_S) LOOP
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;
   UNAPIRA.L_EXCEPTION_STEP :='scmecell longtext' ||'sc='||A_SC;
   FOR L_REC2 IN L_ALL_LTSCMECELL_CURSOR(A_SC) LOOP
      FOR L_REC IN L_UTLONGTEXT_CURSOR(L_REC2.VALUE_S) LOOP
         UNAPIRA3.L_PUTTEXT := 'utlongtext' || L_SEP ||
         L_REC.OBJ_ID || L_SEP || L_REC.OBJ_TP || L_SEP ||
         L_REC.OBJ_VERSION || L_SEP || L_REC.DOC_ID || L_SEP ||
         L_REC.DOC_TP || L_SEP || L_REC.DOC_NAME || L_SEP ||
         L_REC.LINE_NBR || L_SEP || L_REC.TEXT_LINE;
         UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
      END LOOP;
   END LOOP;
   UNAPIRA.L_EXCEPTION_STEP :='utsc' ||'sc='||A_SC;
   FOR L_REC IN L_UTSC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utsc' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.ST || L_SEP || L_REC.ST_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.SHELF_LIFE_VAL || L_SEP ||
      L_REC.SHELF_LIFE_UNIT || L_SEP ||
      TO_CHAR(L_REC.SAMPLING_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.SAMPLING_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.CREATION_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.CREATED_BY || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.PRIORITY || L_SEP || L_REC.LABEL_FORMAT || L_SEP ||
      L_REC.DESCR_DOC || L_SEP || L_REC.DESCR_DOC_VERSION || L_SEP ||
      L_REC.RQ || L_SEP || L_REC.SD || L_SEP ||
      TO_CHAR(L_REC.DATE1,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE1_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE2_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE3_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE4,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE4_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE5,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.DATE5_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ALLOW_ANY_PP || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.SC_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS || L_SEP || L_REC.AR1 || L_SEP || L_REC.AR2 || L_SEP ||
      L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP || L_REC.AR5 || L_SEP ||
      L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP || L_REC.AR8 || L_SEP ||
      L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP || L_REC.AR11 || L_SEP ||
      L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP || L_REC.AR14 || L_SEP ||
      L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP || L_REC.AR17 || L_SEP ||
      L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP || L_REC.AR20 || L_SEP ||
      L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP || L_REC.AR23 || L_SEP ||
      L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP || L_REC.AR26 || L_SEP ||
      L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP || L_REC.AR29 || L_SEP ||
      L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP || L_REC.AR32 || L_SEP ||
      L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP || L_REC.AR35 || L_SEP ||
      L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP || L_REC.AR38 || L_SEP ||
      L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP || L_REC.AR41 || L_SEP ||
      L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP || L_REC.AR44 || L_SEP ||
      L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP || L_REC.AR47 || L_SEP ||
      L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP || L_REC.AR50 || L_SEP ||
      L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP || L_REC.AR53 || L_SEP ||
      L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP || L_REC.AR56 || L_SEP ||
      L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP || L_REC.AR59 || L_SEP ||
      L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP || L_REC.AR62 || L_SEP ||
      L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP || L_REC.AR65 || L_SEP ||
      L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP || L_REC.AR68 || L_SEP ||
      L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP || L_REC.AR71 || L_SEP ||
      L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP || L_REC.AR74 || L_SEP ||
      L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP || L_REC.AR77 || L_SEP ||
      L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP || L_REC.AR80 || L_SEP ||
      L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP || L_REC.AR83 || L_SEP ||
      L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP || L_REC.AR86 || L_SEP ||
      L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP || L_REC.AR89 || L_SEP ||
      L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP || L_REC.AR92 || L_SEP ||
      L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP || L_REC.AR95 || L_SEP ||
      L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP || L_REC.AR98 || L_SEP ||
      L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP || L_REC.AR101 || L_SEP ||
      L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP || L_REC.AR104 || L_SEP ||
      L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP || L_REC.AR107 || L_SEP ||
      L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP || L_REC.AR110 || L_SEP ||
      L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP || L_REC.AR113 || L_SEP ||
      L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP || L_REC.AR116 || L_SEP ||
      L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP || L_REC.AR119 || L_SEP ||
      L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP || L_REC.AR122 || L_SEP ||
      L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP || L_REC.AR125 || L_SEP ||
      L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP || L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscau' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCAU_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscau' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utschs' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCHS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utschs' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utschsdetails' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCHSDETAILS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utschsdetails' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscic' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCIC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscic' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.IP_VERSION || L_SEP || L_REC.DESCRIPTION || L_SEP ||
      L_REC.WINSIZE_X || L_SEP || L_REC.WINSIZE_Y || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.HIDDEN || L_SEP ||
      L_REC.MANUALLY_ADDED || L_SEP || L_REC.NEXT_II || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.IC_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscicau' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCICAU_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscicau' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP ||
      L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscichs' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCICHS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscichs' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscichsdetails' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCICHSDETAILS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscichsdetails' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscii' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCII_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscii' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.IC || L_SEP || L_REC.ICNODE || L_SEP ||
      L_REC.II || L_SEP || L_REC.IINODE || L_SEP || L_REC.IE_VERSION || L_SEP ||
      L_REC.IIVALUE || L_SEP || L_REC.POS_X || L_SEP || L_REC.POS_Y || L_SEP ||
      L_REC.IS_PROTECTED || L_SEP || L_REC.MANDATORY || L_SEP ||
      L_REC.HIDDEN || L_SEP || L_REC.DSP_TITLE || L_SEP ||
      L_REC.DSP_LEN || L_SEP || L_REC.DSP_TP || L_SEP ||
      L_REC.DSP_ROWS || L_SEP || L_REC.II_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpg' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPG_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpg' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PP_VERSION || L_SEP || L_REC.PP_KEY1 || L_SEP ||
      L_REC.PP_KEY2 || L_SEP || L_REC.PP_KEY3 || L_SEP ||
      L_REC.PP_KEY4 || L_SEP || L_REC.PP_KEY5 || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.CONFIRM_ASSIGN || L_SEP ||
      L_REC.ALLOW_ANY_PR || L_SEP || L_REC.NEVER_CREATE_METHODS || L_SEP ||
      L_REC.DELAY || L_SEP || L_REC.DELAY_UNIT || L_SEP ||
      L_REC.REANALYSIS || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.PG_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS || L_SEP || L_REC.AR1 || L_SEP || L_REC.AR2 || L_SEP ||
      L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP || L_REC.AR5 || L_SEP ||
      L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP || L_REC.AR8 || L_SEP ||
      L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP || L_REC.AR11 || L_SEP ||
      L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP || L_REC.AR14 || L_SEP ||
      L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP || L_REC.AR17 || L_SEP ||
      L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP || L_REC.AR20 || L_SEP ||
      L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP || L_REC.AR23 || L_SEP ||
      L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP || L_REC.AR26 || L_SEP ||
      L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP || L_REC.AR29 || L_SEP ||
      L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP || L_REC.AR32 || L_SEP ||
      L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP || L_REC.AR35 || L_SEP ||
      L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP || L_REC.AR38 || L_SEP ||
      L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP || L_REC.AR41 || L_SEP ||
      L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP || L_REC.AR44 || L_SEP ||
      L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP || L_REC.AR47 || L_SEP ||
      L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP || L_REC.AR50 || L_SEP ||
      L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP || L_REC.AR53 || L_SEP ||
      L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP || L_REC.AR56 || L_SEP ||
      L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP || L_REC.AR59 || L_SEP ||
      L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP || L_REC.AR62 || L_SEP ||
      L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP || L_REC.AR65 || L_SEP ||
      L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP || L_REC.AR68 || L_SEP ||
      L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP || L_REC.AR71 || L_SEP ||
      L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP || L_REC.AR74 || L_SEP ||
      L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP || L_REC.AR77 || L_SEP ||
      L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP || L_REC.AR80 || L_SEP ||
      L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP || L_REC.AR83 || L_SEP ||
      L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP || L_REC.AR86 || L_SEP ||
      L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP || L_REC.AR89 || L_SEP ||
      L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP || L_REC.AR92 || L_SEP ||
      L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP || L_REC.AR95 || L_SEP ||
      L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP || L_REC.AR98 || L_SEP ||
      L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP || L_REC.AR101 || L_SEP ||
      L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP || L_REC.AR104 || L_SEP ||
      L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP || L_REC.AR107 || L_SEP ||
      L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP || L_REC.AR110 || L_SEP ||
      L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP || L_REC.AR113 || L_SEP ||
      L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP || L_REC.AR116 || L_SEP ||
      L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP || L_REC.AR119 || L_SEP ||
      L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP || L_REC.AR122 || L_SEP ||
      L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP || L_REC.AR125 || L_SEP ||
      L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP || L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpgau' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPGAU_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpgau' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP ||
      L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpghs' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPGHS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpghs' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.WHO || L_SEP || L_REC.WHO_DESCRIPTION || L_SEP ||
      L_REC.WHAT || L_SEP || L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpghsdetails' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPGHSDETAILS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpghsdetails' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP ||
      L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpg' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPG_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpg' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PP_VERSION || L_SEP || L_REC.PP_KEY1 || L_SEP ||
      L_REC.PP_KEY2 || L_SEP || L_REC.PP_KEY3 || L_SEP ||
      L_REC.PP_KEY4 || L_SEP || L_REC.PP_KEY5 || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.CONFIRM_ASSIGN || L_SEP ||
      L_REC.ALLOW_ANY_PR || L_SEP || L_REC.NEVER_CREATE_METHODS || L_SEP ||
      L_REC.DELAY || L_SEP || L_REC.DELAY_UNIT || L_SEP ||
      L_REC.REANALYSIS || L_SEP || L_REC.LAST_COMMENT || L_SEP ||
      L_REC.PG_CLASS || L_SEP || L_REC.LOG_HS || L_SEP ||
      L_REC.LOG_HS_DETAILS || L_SEP || L_REC.ALLOW_MODIFY || L_SEP ||
      L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP || L_REC.LC_VERSION || L_SEP ||
      L_REC.SS || L_SEP || L_REC.AR1 || L_SEP || L_REC.AR2 || L_SEP ||
      L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP || L_REC.AR5 || L_SEP ||
      L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP || L_REC.AR8 || L_SEP ||
      L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP || L_REC.AR11 || L_SEP ||
      L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP || L_REC.AR14 || L_SEP ||
      L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP || L_REC.AR17 || L_SEP ||
      L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP || L_REC.AR20 || L_SEP ||
      L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP || L_REC.AR23 || L_SEP ||
      L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP || L_REC.AR26 || L_SEP ||
      L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP || L_REC.AR29 || L_SEP ||
      L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP || L_REC.AR32 || L_SEP ||
      L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP || L_REC.AR35 || L_SEP ||
      L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP || L_REC.AR38 || L_SEP ||
      L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP || L_REC.AR41 || L_SEP ||
      L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP || L_REC.AR44 || L_SEP ||
      L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP || L_REC.AR47 || L_SEP ||
      L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP || L_REC.AR50 || L_SEP ||
      L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP || L_REC.AR53 || L_SEP ||
      L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP || L_REC.AR56 || L_SEP ||
      L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP || L_REC.AR59 || L_SEP ||
      L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP || L_REC.AR62 || L_SEP ||
      L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP || L_REC.AR65 || L_SEP ||
      L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP || L_REC.AR68 || L_SEP ||
      L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP || L_REC.AR71 || L_SEP ||
      L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP || L_REC.AR74 || L_SEP ||
      L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP || L_REC.AR77 || L_SEP ||
      L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP || L_REC.AR80 || L_SEP ||
      L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP || L_REC.AR83 || L_SEP ||
      L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP || L_REC.AR86 || L_SEP ||
      L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP || L_REC.AR89 || L_SEP ||
      L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP || L_REC.AR92 || L_SEP ||
      L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP || L_REC.AR95 || L_SEP ||
      L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP || L_REC.AR98 || L_SEP ||
      L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP || L_REC.AR101 || L_SEP ||
      L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP || L_REC.AR104 || L_SEP ||
      L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP || L_REC.AR107 || L_SEP ||
      L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP || L_REC.AR110 || L_SEP ||
      L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP || L_REC.AR113 || L_SEP ||
      L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP || L_REC.AR116 || L_SEP ||
      L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP || L_REC.AR119 || L_SEP ||
      L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP || L_REC.AR122 || L_SEP ||
      L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP || L_REC.AR125 || L_SEP ||
      L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP || L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpa' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPA_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpa' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.PR_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.TD_INFO || L_SEP ||
      L_REC.TD_INFO_UNIT || L_SEP || L_REC.CONFIRM_UID || L_SEP ||
      L_REC.ALLOW_ANY_ME || L_SEP || L_REC.DELAY || L_SEP ||
      L_REC.DELAY_UNIT || L_SEP || L_REC.MIN_NR_RESULTS || L_SEP ||
      L_REC.CALC_METHOD || L_SEP || L_REC.CALC_CF || L_SEP ||
      L_REC.ALARM_ORDER || L_SEP || L_REC.VALID_SPECSA || L_SEP ||
      L_REC.VALID_SPECSB || L_SEP || L_REC.VALID_SPECSC || L_SEP ||
      L_REC.VALID_LIMITSA || L_SEP || L_REC.VALID_LIMITSB || L_SEP ||
      L_REC.VALID_LIMITSC || L_SEP || L_REC.VALID_TARGETA || L_SEP ||
      L_REC.VALID_TARGETB || L_SEP || L_REC.VALID_TARGETC || L_SEP ||
      L_REC.LOG_EXCEPTIONS || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.PA_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpaau' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPAAU_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpaau' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.AU || L_SEP ||
      L_REC.AU_VERSION || L_SEP || L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpahs' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPAHS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpahs' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpatd' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPATD_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpatd' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.ST || L_SEP || L_REC.ST_VERSION || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpaspa' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPASPA_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpaspa' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.LOW_LIMIT || L_SEP ||
      L_REC.HIGH_LIMIT || L_SEP || L_REC.LOW_SPEC || L_SEP ||
      L_REC.HIGH_SPEC || L_SEP || L_REC.LOW_DEV || L_SEP ||
      L_REC.REL_LOW_DEV || L_SEP || L_REC.TARGET || L_SEP ||
      L_REC.HIGH_DEV || L_SEP || L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpaspb' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPASPB_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpaspb' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.LOW_LIMIT || L_SEP ||
      L_REC.HIGH_LIMIT || L_SEP || L_REC.LOW_SPEC || L_SEP ||
      L_REC.HIGH_SPEC || L_SEP || L_REC.LOW_DEV || L_SEP ||
      L_REC.REL_LOW_DEV || L_SEP || L_REC.TARGET || L_SEP ||
      L_REC.HIGH_DEV || L_SEP || L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpaspc' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPASPC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpaspc' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.LOW_LIMIT || L_SEP ||
      L_REC.HIGH_LIMIT || L_SEP || L_REC.LOW_SPEC || L_SEP ||
      L_REC.HIGH_SPEC || L_SEP || L_REC.LOW_DEV || L_SEP ||
      L_REC.REL_LOW_DEV || L_SEP || L_REC.TARGET || L_SEP ||
      L_REC.HIGH_DEV || L_SEP || L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpasqc' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPASQC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpasqc' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.SQC_AVG || L_SEP ||
      L_REC.SQC_SIGMA || L_SEP || L_REC.SQC_AVGR || L_SEP ||
      L_REC.SQC_UCLR || L_SEP || L_REC.VALID_SQC;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpaoutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPAOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpaoutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.SAVE_PG || L_SEP ||
      L_REC.SAVE_PGNODE || L_SEP || L_REC.SAVE_PA || L_SEP ||
      L_REC.SAVE_PANODE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscpahsdetails' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCPAHSDETAILS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscpahsdetails' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.TR_SEQ || L_SEP ||
      L_REC.EV_SEQ || L_SEP || L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpa' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPA_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpa' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.PR_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.TD_INFO || L_SEP ||
      L_REC.TD_INFO_UNIT || L_SEP || L_REC.CONFIRM_UID || L_SEP ||
      L_REC.ALLOW_ANY_ME || L_SEP || L_REC.DELAY || L_SEP ||
      L_REC.DELAY_UNIT || L_SEP || L_REC.MIN_NR_RESULTS || L_SEP ||
      L_REC.CALC_METHOD || L_SEP || L_REC.CALC_CF || L_SEP ||
      L_REC.ALARM_ORDER || L_SEP || L_REC.VALID_SPECSA || L_SEP ||
      L_REC.VALID_SPECSB || L_SEP || L_REC.VALID_SPECSC || L_SEP ||
      L_REC.VALID_LIMITSA || L_SEP || L_REC.VALID_LIMITSB || L_SEP ||
      L_REC.VALID_LIMITSC || L_SEP || L_REC.VALID_TARGETA || L_SEP ||
      L_REC.VALID_TARGETB || L_SEP || L_REC.VALID_TARGETC || L_SEP ||
      L_REC.LOG_EXCEPTIONS || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.PA_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpaspa' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPASPA_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpaspa' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LOW_LIMIT || L_SEP || L_REC.HIGH_LIMIT || L_SEP ||
      L_REC.LOW_SPEC || L_SEP || L_REC.HIGH_SPEC || L_SEP ||
      L_REC.LOW_DEV || L_SEP || L_REC.REL_LOW_DEV || L_SEP ||
      L_REC.TARGET || L_SEP || L_REC.HIGH_DEV || L_SEP ||
      L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpaspb' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPASPB_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpaspb' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LOW_LIMIT || L_SEP || L_REC.HIGH_LIMIT || L_SEP ||
      L_REC.LOW_SPEC || L_SEP || L_REC.HIGH_SPEC || L_SEP ||
      L_REC.LOW_DEV || L_SEP || L_REC.REL_LOW_DEV || L_SEP ||
      L_REC.TARGET || L_SEP || L_REC.HIGH_DEV || L_SEP ||
      L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpaspc' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPASPC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpaspc' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LOW_LIMIT || L_SEP || L_REC.HIGH_LIMIT || L_SEP ||
      L_REC.LOW_SPEC || L_SEP || L_REC.HIGH_SPEC || L_SEP ||
      L_REC.LOW_DEV || L_SEP || L_REC.REL_LOW_DEV || L_SEP ||
      L_REC.TARGET || L_SEP || L_REC.HIGH_DEV || L_SEP ||
      L_REC.REL_HIGH_DEV;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpasqc' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPASQC_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpasqc' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.SQC_AVG || L_SEP || L_REC.SQC_SIGMA || L_SEP ||
      L_REC.SQC_AVGR || L_SEP || L_REC.SQC_UCLR || L_SEP ||
      L_REC.VALID_SQC;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscpaoutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCPAOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscpaoutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.SAVE_PG || L_SEP || L_REC.SAVE_PGNODE || L_SEP ||
      L_REC.SAVE_PA || L_SEP || L_REC.SAVE_PANODE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utresultexception' ||'sc='||A_SC;
   FOR L_REC IN L_UTRESULTEXCEPTION_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utresultexception' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.REANALYSIS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscme' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCME_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscme' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.MT_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.LAB || L_SEP || L_REC.EQ || L_SEP ||
      L_REC.EQ_VERSION || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.PLANNED_EQ || L_SEP || L_REC.PLANNED_EQ_VERSION || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP || L_REC.ALLOW_ADD || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.DELAY || L_SEP || L_REC.DELAY_UNIT || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.ACCURACY || L_SEP ||
      L_REC.REAL_COST || L_SEP || L_REC.REAL_TIME || L_SEP ||
      L_REC.CALIBRATION || L_SEP || L_REC.CONFIRM_COMPLETE || L_SEP ||
      L_REC.AUTORECALC || L_SEP || L_REC.ME_RESULT_EDITABLE || L_SEP ||
      L_REC.NEXT_CELL || L_SEP || L_REC.SOP || L_SEP ||
      L_REC.SOP_VERSION || L_SEP || L_REC.PLAUS_LOW || L_SEP ||
      L_REC.PLAUS_HIGH || L_SEP || L_REC.WINSIZE_X || L_SEP ||
      L_REC.WINSIZE_Y || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.ME_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmeau' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMEAU_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmeau' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.AU || L_SEP || L_REC.AU_VERSION || L_SEP ||
      L_REC.AUSEQ || L_SEP || L_REC.VALUE;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmehs' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMEHS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmehs' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.WHO || L_SEP ||
      L_REC.WHO_DESCRIPTION || L_SEP || L_REC.WHAT || L_SEP ||
      L_REC.WHAT_DESCRIPTION || L_SEP ||
      TO_CHAR(L_REC.LOGDATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.LOGDATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.WHY || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmecell' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMECELL_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmecell' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.CELLNODE || L_SEP || L_REC.DSP_TITLE || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.CELL_TP || L_SEP || L_REC.POS_X || L_SEP || L_REC.POS_Y || L_SEP ||
      L_REC.ALIGN || L_SEP || L_REC.WINSIZE_X || L_SEP ||
      L_REC.WINSIZE_Y || L_SEP || L_REC.IS_PROTECTED || L_SEP ||
      L_REC.MANDATORY || L_SEP || L_REC.HIDDEN || L_SEP || L_REC.UNIT || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.EQ || L_SEP || L_REC.EQ_VERSION || L_SEP ||
      L_REC.COMPONENT || L_SEP || L_REC.CALC_TP || L_SEP ||
      L_REC.CALC_FORMULA || L_SEP || L_REC.VALID_CF || L_SEP ||
      L_REC.MAX_X || L_SEP || L_REC.MAX_Y || L_SEP ||
      L_REC.MULTI_SELECT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmecelllist' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMECELLLIST_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmecelllist' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INDEX_X || L_SEP || L_REC.INDEX_Y || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.SELECTED;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmecellinput' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMECELLINPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmecellinput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INPUT_TP || L_SEP || L_REC.INPUT_SOURCE || L_SEP ||
      L_REC.INPUT_VERSION || L_SEP || L_REC.INPUT_PG || L_SEP ||
      L_REC.INPUT_PGNODE || L_SEP || L_REC.INPUT_PP_VERSION || L_SEP ||
      L_REC.INPUT_PA || L_SEP || L_REC.INPUT_PANODE || L_SEP ||
      L_REC.INPUT_PR_VERSION || L_SEP || L_REC.INPUT_ME || L_SEP ||
      L_REC.INPUT_MENODE || L_SEP || L_REC.INPUT_MT_VERSION || L_SEP ||
      L_REC.INPUT_REANALYSIS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmehsdetails' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMEHSDETAILS_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmehsdetails' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.TR_SEQ || L_SEP || L_REC.EV_SEQ || L_SEP ||
      L_REC.SEQ || L_SEP || L_REC.DETAILS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmecelloutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMECELLOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmecelloutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.SAVE_TP || L_SEP || L_REC.SAVE_PG || L_SEP ||
      L_REC.SAVE_PGNODE || L_SEP || L_REC.SAVE_PP_VERSION || L_SEP ||
      L_REC.SAVE_PA || L_SEP || L_REC.SAVE_PANODE || L_SEP ||
      L_REC.SAVE_PR_VERSION || L_SEP || L_REC.SAVE_ME || L_SEP ||
      L_REC.SAVE_MENODE || L_SEP || L_REC.SAVE_MT_VERSION || L_SEP ||
      L_REC.SAVE_EQ || L_SEP || L_REC.SAVE_EQ_VERSION || L_SEP ||
      L_REC.SAVE_ID || L_SEP || L_REC.SAVE_IDNODE || L_SEP ||
      L_REC.SAVE_REANALYSIS || L_SEP || L_REC.CREATE_NEW;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscmecelllistoutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCMECELLLISTOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscmecelllistoutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INDEX_Y || L_SEP || L_REC.SAVE_TP || L_SEP ||
      L_REC.SAVE_PG || L_SEP || L_REC.SAVE_PGNODE || L_SEP ||
      L_REC.SAVE_PP_VERSION || L_SEP || L_REC.SAVE_PA || L_SEP ||
      L_REC.SAVE_PANODE || L_SEP || L_REC.SAVE_PR_VERSION || L_SEP ||
      L_REC.SAVE_ME || L_SEP || L_REC.SAVE_MENODE || L_SEP ||
      L_REC.SAVE_MT_VERSION || L_SEP || L_REC.SAVE_EQ || L_SEP ||
      L_REC.SAVE_EQ_VERSION || L_SEP || L_REC.SAVE_ID || L_SEP ||
      L_REC.SAVE_IDNODE || L_SEP || L_REC.SAVE_REANALYSIS || L_SEP ||
      L_REC.CREATE_NEW;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscme' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCME_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscme' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.MT_VERSION || L_SEP ||
      L_REC.DESCRIPTION || L_SEP || L_REC.VALUE_F || L_SEP ||
      L_REC.VALUE_S || L_SEP || L_REC.UNIT || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_START_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.EXEC_END_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.EXECUTOR || L_SEP || L_REC.LAB || L_SEP || L_REC.EQ || L_SEP ||
      L_REC.EQ_VERSION || L_SEP || L_REC.PLANNED_EXECUTOR || L_SEP ||
      L_REC.PLANNED_EQ || L_SEP || L_REC.PLANNED_EQ_VERSION || L_SEP ||
      L_REC.MANUALLY_ENTERED || L_SEP || L_REC.ALLOW_ADD || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      TO_CHAR(L_REC.ASSIGN_DATE_TZ,UNAPIRA.P_TSTZ_FORMAT) || L_SEP ||
      L_REC.ASSIGNED_BY || L_SEP || L_REC.MANUALLY_ADDED || L_SEP ||
      L_REC.DELAY || L_SEP || L_REC.DELAY_UNIT || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.ACCURACY || L_SEP ||
      L_REC.REAL_COST || L_SEP || L_REC.REAL_TIME || L_SEP ||
      L_REC.CALIBRATION || L_SEP || L_REC.CONFIRM_COMPLETE || L_SEP ||
      L_REC.AUTORECALC || L_SEP || L_REC.ME_RESULT_EDITABLE || L_SEP ||
      L_REC.NEXT_CELL || L_SEP || L_REC.SOP || L_SEP ||
      L_REC.SOP_VERSION || L_SEP || L_REC.PLAUS_LOW || L_SEP ||
      L_REC.PLAUS_HIGH || L_SEP || L_REC.WINSIZE_X || L_SEP ||
      L_REC.WINSIZE_Y || L_SEP || L_REC.REANALYSIS || L_SEP ||
      L_REC.LAST_COMMENT || L_SEP || L_REC.ME_CLASS || L_SEP ||
      L_REC.LOG_HS || L_SEP || L_REC.LOG_HS_DETAILS || L_SEP ||
      L_REC.ALLOW_MODIFY || L_SEP || L_REC.ACTIVE || L_SEP || L_REC.LC || L_SEP ||
      L_REC.LC_VERSION || L_SEP || L_REC.SS || L_SEP || L_REC.AR1 || L_SEP ||
      L_REC.AR2 || L_SEP || L_REC.AR3 || L_SEP || L_REC.AR4 || L_SEP ||
      L_REC.AR5 || L_SEP || L_REC.AR6 || L_SEP || L_REC.AR7 || L_SEP ||
      L_REC.AR8 || L_SEP || L_REC.AR9 || L_SEP || L_REC.AR10 || L_SEP ||
      L_REC.AR11 || L_SEP || L_REC.AR12 || L_SEP || L_REC.AR13 || L_SEP ||
      L_REC.AR14 || L_SEP || L_REC.AR15 || L_SEP || L_REC.AR16 || L_SEP ||
      L_REC.AR17 || L_SEP || L_REC.AR18 || L_SEP || L_REC.AR19 || L_SEP ||
      L_REC.AR20 || L_SEP || L_REC.AR21 || L_SEP || L_REC.AR22 || L_SEP ||
      L_REC.AR23 || L_SEP || L_REC.AR24 || L_SEP || L_REC.AR25 || L_SEP ||
      L_REC.AR26 || L_SEP || L_REC.AR27 || L_SEP || L_REC.AR28 || L_SEP ||
      L_REC.AR29 || L_SEP || L_REC.AR30 || L_SEP || L_REC.AR31 || L_SEP ||
      L_REC.AR32 || L_SEP || L_REC.AR33 || L_SEP || L_REC.AR34 || L_SEP ||
      L_REC.AR35 || L_SEP || L_REC.AR36 || L_SEP || L_REC.AR37 || L_SEP ||
      L_REC.AR38 || L_SEP || L_REC.AR39 || L_SEP || L_REC.AR40 || L_SEP ||
      L_REC.AR41 || L_SEP || L_REC.AR42 || L_SEP || L_REC.AR43 || L_SEP ||
      L_REC.AR44 || L_SEP || L_REC.AR45 || L_SEP || L_REC.AR46 || L_SEP ||
      L_REC.AR47 || L_SEP || L_REC.AR48 || L_SEP || L_REC.AR49 || L_SEP ||
      L_REC.AR50 || L_SEP || L_REC.AR51 || L_SEP || L_REC.AR52 || L_SEP ||
      L_REC.AR53 || L_SEP || L_REC.AR54 || L_SEP || L_REC.AR55 || L_SEP ||
      L_REC.AR56 || L_SEP || L_REC.AR57 || L_SEP || L_REC.AR58 || L_SEP ||
      L_REC.AR59 || L_SEP || L_REC.AR60 || L_SEP || L_REC.AR61 || L_SEP ||
      L_REC.AR62 || L_SEP || L_REC.AR63 || L_SEP || L_REC.AR64 || L_SEP ||
      L_REC.AR65 || L_SEP || L_REC.AR66 || L_SEP || L_REC.AR67 || L_SEP ||
      L_REC.AR68 || L_SEP || L_REC.AR69 || L_SEP || L_REC.AR70 || L_SEP ||
      L_REC.AR71 || L_SEP || L_REC.AR72 || L_SEP || L_REC.AR73 || L_SEP ||
      L_REC.AR74 || L_SEP || L_REC.AR75 || L_SEP || L_REC.AR76 || L_SEP ||
      L_REC.AR77 || L_SEP || L_REC.AR78 || L_SEP || L_REC.AR79 || L_SEP ||
      L_REC.AR80 || L_SEP || L_REC.AR81 || L_SEP || L_REC.AR82 || L_SEP ||
      L_REC.AR83 || L_SEP || L_REC.AR84 || L_SEP || L_REC.AR85 || L_SEP ||
      L_REC.AR86 || L_SEP || L_REC.AR87 || L_SEP || L_REC.AR88 || L_SEP ||
      L_REC.AR89 || L_SEP || L_REC.AR90 || L_SEP || L_REC.AR91 || L_SEP ||
      L_REC.AR92 || L_SEP || L_REC.AR93 || L_SEP || L_REC.AR94 || L_SEP ||
      L_REC.AR95 || L_SEP || L_REC.AR96 || L_SEP || L_REC.AR97 || L_SEP ||
      L_REC.AR98 || L_SEP || L_REC.AR99 || L_SEP || L_REC.AR100 || L_SEP ||
      L_REC.AR101 || L_SEP || L_REC.AR102 || L_SEP || L_REC.AR103 || L_SEP ||
      L_REC.AR104 || L_SEP || L_REC.AR105 || L_SEP || L_REC.AR106 || L_SEP ||
      L_REC.AR107 || L_SEP || L_REC.AR108 || L_SEP || L_REC.AR109 || L_SEP ||
      L_REC.AR110 || L_SEP || L_REC.AR111 || L_SEP || L_REC.AR112 || L_SEP ||
      L_REC.AR113 || L_SEP || L_REC.AR114 || L_SEP || L_REC.AR115 || L_SEP ||
      L_REC.AR116 || L_SEP || L_REC.AR117 || L_SEP || L_REC.AR118 || L_SEP ||
      L_REC.AR119 || L_SEP || L_REC.AR120 || L_SEP || L_REC.AR121 || L_SEP ||
      L_REC.AR122 || L_SEP || L_REC.AR123 || L_SEP || L_REC.AR124 || L_SEP ||
      L_REC.AR125 || L_SEP || L_REC.AR126 || L_SEP || L_REC.AR127 || L_SEP ||
      L_REC.AR128;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscmecell' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCMECELL_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscmecell' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.CELLNODE || L_SEP || L_REC.DSP_TITLE || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.CELL_TP || L_SEP || L_REC.POS_X || L_SEP || L_REC.POS_Y || L_SEP ||
      L_REC.ALIGN || L_SEP || L_REC.WINSIZE_X || L_SEP ||
      L_REC.WINSIZE_Y || L_SEP || L_REC.IS_PROTECTED || L_SEP ||
      L_REC.MANDATORY || L_SEP || L_REC.HIDDEN || L_SEP || L_REC.UNIT || L_SEP ||
      L_REC.FORMAT || L_SEP || L_REC.EQ || L_SEP || L_REC.EQ_VERSION || L_SEP ||
      L_REC.COMPONENT || L_SEP || L_REC.CALC_TP || L_SEP ||
      L_REC.CALC_FORMULA || L_SEP || L_REC.VALID_CF || L_SEP ||
      L_REC.MAX_X || L_SEP || L_REC.MAX_Y || L_SEP ||
      L_REC.MULTI_SELECT;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscmecelllist' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCMECELLLIST_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscmecelllist' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INDEX_X || L_SEP || L_REC.INDEX_Y || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.SELECTED;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscmecellinput' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCMECELLINPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscmecellinput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INPUT_TP || L_SEP || L_REC.INPUT_SOURCE || L_SEP ||
      L_REC.INPUT_VERSION || L_SEP || L_REC.INPUT_PG || L_SEP ||
      L_REC.INPUT_PGNODE || L_SEP || L_REC.INPUT_PP_VERSION || L_SEP ||
      L_REC.INPUT_PA || L_SEP || L_REC.INPUT_PANODE || L_SEP ||
      L_REC.INPUT_PR_VERSION || L_SEP || L_REC.INPUT_ME || L_SEP ||
      L_REC.INPUT_MENODE || L_SEP || L_REC.INPUT_MT_VERSION || L_SEP ||
      L_REC.INPUT_REANALYSIS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscmecelloutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCMECELLOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscmecelloutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.SAVE_TP || L_SEP || L_REC.SAVE_PG || L_SEP ||
      L_REC.SAVE_PGNODE || L_SEP || L_REC.SAVE_PP_VERSION || L_SEP ||
      L_REC.SAVE_PA || L_SEP || L_REC.SAVE_PANODE || L_SEP ||
      L_REC.SAVE_PR_VERSION || L_SEP || L_REC.SAVE_ME || L_SEP ||
      L_REC.SAVE_MENODE || L_SEP || L_REC.SAVE_MT_VERSION || L_SEP ||
      L_REC.SAVE_EQ || L_SEP || L_REC.SAVE_EQ_VERSION || L_SEP ||
      L_REC.SAVE_ID || L_SEP || L_REC.SAVE_IDNODE || L_SEP ||
      L_REC.SAVE_REANALYSIS || L_SEP || L_REC.CREATE_NEW;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscmecelllistoutput' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCMECELLLISTOUTPUT_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscmecelllistoutput' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.REANALYSIS || L_SEP || L_REC.CELL || L_SEP ||
      L_REC.INDEX_Y || L_SEP || L_REC.SAVE_TP || L_SEP ||
      L_REC.SAVE_PG || L_SEP || L_REC.SAVE_PGNODE || L_SEP ||
      L_REC.SAVE_PP_VERSION || L_SEP || L_REC.SAVE_PA || L_SEP ||
      L_REC.SAVE_PANODE || L_SEP || L_REC.SAVE_PR_VERSION || L_SEP ||
      L_REC.SAVE_ME || L_SEP || L_REC.SAVE_MENODE || L_SEP ||
      L_REC.SAVE_MT_VERSION || L_SEP || L_REC.SAVE_EQ || L_SEP ||
      L_REC.SAVE_EQ_VERSION || L_SEP || L_REC.SAVE_ID || L_SEP ||
      L_REC.SAVE_IDNODE || L_SEP || L_REC.SAVE_REANALYSIS || L_SEP ||
      L_REC.CREATE_NEW;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utscrd' ||'sc='||A_SC;
   FOR L_REC IN L_UTSCRD_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utscrd' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.RD || L_SEP || L_REC.RDNODE || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.REANALYSIS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   UNAPIRA.L_EXCEPTION_STEP :='utrscrd' ||'sc='||A_SC;
   FOR L_REC IN L_UTRSCRD_CURSOR(A_SC) LOOP
      UNAPIRA3.L_PUTTEXT := 'utrscrd' || L_SEP ||
      L_REC.SC || L_SEP || L_REC.PG || L_SEP || L_REC.PGNODE || L_SEP ||
      L_REC.PA || L_SEP || L_REC.PANODE || L_SEP || L_REC.ME || L_SEP ||
      L_REC.MENODE || L_SEP || L_REC.RD || L_SEP || L_REC.RDNODE || L_SEP ||
      L_REC.VALUE_F || L_SEP || L_REC.VALUE_S || L_SEP ||
      L_REC.REANALYSIS;
      UNAPIRA3.U4DATAPUTLINE(UNAPIRA3.L_PUTTEXT);
   END LOOP;

   
   
   UNAPIRA.L_EXCEPTION_STEP :='ArchiveScGkToFile#sc='||A_SC;
   L_RET_CODE := UNAPIRA3.ARCHIVESCGKTOFILE(A_SC);
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'ArchiveScGkToFile return='||L_RET_CODE||'for sc '||A_SC;
      RAISE STPERROR;
   END IF;

   
   
   UNAPIRA.L_EXCEPTION_STEP :='ArchiveScCustomToFile#sc='||A_SC;
   L_RET_CODE := UNAPIRA3.ARCHIVESCCUSTOMTOFILE(A_SC);
   IF L_RET_CODE <> UNAPIGEN.DBERR_SUCCESS THEN
      L_SQLERRM := 'ArchiveScCustomToFile return='||L_RET_CODE||'for sc '||A_SC;
      RAISE STPERROR;
   END IF;

   UNAPIRA3.U4DATAPUTLINE( ' ');

   RETURN(UNAPIGEN.DBERR_SUCCESS);
EXCEPTION
WHEN UTL_FILE.INVALID_PATH THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid path';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INVALID_PATH',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.INVALID_MODE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid mode';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INVALID_MODE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_FILEHANDLE THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid filehandle';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INVALID_FILEHANDLE',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INVALID_OPERATION THEN
   
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Invalid operation';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INVALID_OPERATION',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_NOOBJECT);

WHEN UTL_FILE.READ_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Read error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.READ_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.WRITE_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Write error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.WRITE_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN UTL_FILE.INTERNAL_ERROR THEN
   L_SQLERRM := 'directory='||UNAPIRA.P_FILE_DIR||'#file='||UNAPIRA.P_FILE_NAME ||':Internal error';
   UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   RETURN(UNAPIGEN.DBERR_GENFAIL);

WHEN OTHERS THEN
   IF SQLCODE <> 1 THEN
      L_SQLERRM := SQLERRM;
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   ELSIF L_SQLERRM IS NOT NULL THEN
      UNAPIRA.UTLFILEEXCEPTIONHANDLER('ArchiveScToFile', L_SQLERRM, 'UTL_FILE.INTERNAL_ERROR',UNAPIRA.P_CLOSE_CURSOR);
   END IF;
   RETURN(UNAPIGEN.DBERR_GENFAIL);
END ARCHIVESCTOFILE;

BEGIN
   L_SEP:=UNAPIRA.P_INTERNAL_SEP;
END UNAPIRASC;