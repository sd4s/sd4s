--DUKO-opmerking:
--Mijn advies is om een van de twee root certificaten in Oracle beschikbaar te maken; dan hoef je niet elk jaar het *.vredestein.com cert bij te werken.
--Het *.vredestein.com cert is uitgegeven voor RapidSSL, wat weer uitegegeven is door DigiCert.
--DigiCert is dus de 'Global root' ; dat is het hoogste certifier en is gelig tot 2031.

--aanmaken van oracle-wallet-directory in UNILAB-DB
mkdir -p  C:\oracle\admin\U611\wallet\watson

--aanmaken van de oracle-wallet
orapki wallet create -wallet C:\oracle\admin\U611\wallet\watson -pwd U611WalletPW001 -auto_login

--Add certificate to wallet
orapki wallet add -wallet C:\oracle\admin\U611\wallet\watson -trusted_cert   -cert "E:\DBA\wallet\Certificaten\DigiCertGlobalRootCA.crt"   -pwd U611WalletPW001

/*
03/08/2021  02:54 PM             4,621 cwallet.sso
03/08/2021  02:54 PM             4,544 ewallet.p12
*/			   


--provide UTL_HTTP-package with wallet-watson-details
sqlplus system/moonflower@u611
SET SERVEROUTPUT ON
--UTL_HTTP.set_wallet('file:' || p_wallet_path, p_wallet_password);
EXEC UTL_HTTP.set_wallet('file:C:\oracle\admin\U611\wallet\watson', 'U611WalletPW001');
--UTL_HTTP.set_authentication(l_http_request, p_username, p_password);
UTL_HTTP.set_authentication(UTL_HTTP.begin_request(p_url), 'Unilab', 'unilab');
--
--TEST-AANROEP WATSON:
-- http://ensidoc.vredestein.com/docova/zzz_development.nsf/WhoAmi?openpage
-- https://ensidoc.vredestein.com/docova/zzz_development.nsf/WhoAmi?openpage
--en inclu. user:
-- https://Unilab:unilab@ensidoc.vredestein.com/docova/zzz_development.nsf/WhoAmi?openpage
--
--EXEC show_html_from_url('https://gb.redhat.com/');
EXEC show_html_from_url('https://Unilab:unilab@ensidoc.vredestein.com/docova/zzz_development.nsf/WhoAmi?openpage');



--oplossen ACL-issue:
begin
DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(acl => 'httpacl.xml',
principal => 'UNILAB',
is_grant => true,
privilege => 'connect');
end;
/
commit;

--assign ACL voor een HOST TEST-OMGEVING (zie PORTNR afwijkend!!!)
BEGIN
dbms_network_acl_admin.assign_acl (
acl => 'httpacl.xml',
host => 'ensidoc.vredestein.com', 
lower_port => null,
upper_port => null
);
END;
commit;


--assign ACL voor een HOST PRODUKTIE-OMGEVING
BEGIN
dbms_network_acl_admin.assign_acl (
acl => 'httpacl.xml',
host => 'ensidoc.vredestein.com', 
lower_port => 80,
upper_port => 8080
);
END;
commit;


--controle ACL
select * from dba_network_acls;
SELECT * FROM dba_network_acl_privileges where principal='UNILAB';





/*
p_url = https://ensidoc.vredestein.com/docova/zzz_development.nsf/WhoAmi?openpage
p_username = 'Unilab'
p_password = 'unilab'
p_wallet_path = 'C:\oracle\admin\U611\wallet\watson'
p_wallet_password = 'U611WalletPW001'

CREATE OR REPLACE PROCEDURE show_html_from_url (
  p_url              IN  VARCHAR2,
  p_username         IN  VARCHAR2 DEFAULT NULL,
  p_password         IN  VARCHAR2 DEFAULT NULL,
  p_wallet_path      IN  VARCHAR2 DEFAULT NULL,
  p_wallet_password  IN  VARCHAR2 DEFAULT NULL
) AS
  l_http_request   UTL_HTTP.req;
  l_http_response  UTL_HTTP.resp;
  l_text           VARCHAR2(32767);
BEGIN
  -- If using HTTPS, open a wallet containing the trusted root certificate.
  IF p_wallet_path IS NOT NULL 
  AND p_wallet_password IS NOT NULL 
  THEN
    UTL_HTTP.set_wallet('file:' || p_wallet_path, p_wallet_password);
  END IF;
  -- Make a HTTP request and get the response.
  l_http_request  := UTL_HTTP.begin_request(p_url);
  -- Use basic authentication if required.
  IF p_username IS NOT NULL 
  and p_password IS NOT NULL 
  THEN
    UTL_HTTP.set_authentication(l_http_request, p_username, p_password);
  END IF;
  --
  l_http_response := UTL_HTTP.get_response(l_http_request);
  --
  -- Loop through the response.
  BEGIN
    LOOP
      UTL_HTTP.read_text(l_http_response, l_text, 32766);
      DBMS_OUTPUT.put_line (l_text);
    END LOOP;
  EXCEPTION
    WHEN UTL_HTTP.end_of_body THEN
      UTL_HTTP.end_response(l_http_response);
  END;
  --
EXCEPTION
  WHEN OTHERS 
  THEN
    UTL_HTTP.end_response(l_http_response);
    RAISE;
END show_html_from_url;
/
*/





--eind script


