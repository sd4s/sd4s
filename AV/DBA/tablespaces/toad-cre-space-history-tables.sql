-- This script must be run by the schema which will own the objects.

begin
  execute immediate 'drop table TOAD_FILESTAT';
exception
  when others then
    null;
end;
/
begin
  execute immediate 'drop table TOAD_FREE_SPACE';
exception
  when others then
    null;
end;
/
begin
  execute immediate 'drop table TOAD_DATA_FILES';
exception
  when others then
    null;
end;
/
begin
  execute immediate 'drop table TOAD_TABLESPACES';
exception
  when others then
    null;
end;
/
begin
  execute immediate 'drop table TOAD_REF';
exception
  when others then
    null;
end;
/

CREATE TABLE TOAD_REF (Name Varchar2(30), Value Number);

INSERT INTO TOAD_REF VALUES ('Space Manager History Limit', 350);
INSERT INTO TOAD_REF VALUES ('Space Manager History Unit', 1);
INSERT INTO TOAD_REF VALUES ('Space Manager JobID', -1);
CREATE TABLE TOAD_TABLESPACES (
  TABLESPACE_NAME      VARCHAR2(30) NOT NULL,
  MON_DATE             DATE NOT NULL,
  CONSTRAINT TOAD_TABLESPACES_PK PRIMARY KEY (TABLESPACE_NAME, MON_DATE)
  USING INDEX PCTFREE 5)
  PCTFREE 5 PCTUSED 94;

CREATE TABLE TOAD_DATA_FILES (
  FILE_ID              NUMBER NOT NULL,
  MON_DATE             DATE NOT NULL,
  TABLESPACE_NAME      VARCHAR2(30) NOT NULL,
  FILE_NAME            VARCHAR2(257) NOT NULL,
  BYTES                NUMBER,
  CONSTRAINT TOAD_DATA_FILES_PK PRIMARY KEY (FILE_ID, MON_DATE)
  USING INDEX PCTFREE 5,
  CONSTRAINT TOAD_DATA_FILES_FK FOREIGN KEY (TABLESPACE_NAME, MON_DATE)
  REFERENCES TOAD_TABLESPACES ON DELETE CASCADE)
  PCTFREE 5 PCTUSED 94;

CREATE UNIQUE INDEX TOAD_DATA_FILES_UK ON TOAD_DATA_FILES (TABLESPACE_NAME, FILE_NAME, MON_DATE) PCTFREE 5;

CREATE TABLE TOAD_FILESTAT (
  FILE_ID              NUMBER NOT NULL,
  MON_DATE             DATE NOT NULL,
  PHYRDS               CHAR(18) NOT NULL,
  PHYWRTS              CHAR(18) NOT NULL,
  PHYBLKRD             CHAR(18) NOT NULL,
  PHYBLKWRT            CHAR(18) NOT NULL,
  READTIM              CHAR(18) NOT NULL,
  WRITETIM             CHAR(18) NOT NULL,
  CONSTRAINT TOAD_FILESTAT_PK PRIMARY KEY (FILE_ID, MON_DATE)
  USING INDEX PCTFREE 5,
CONSTRAINT TOAD_FILESTAT_FK FOREIGN KEY (FILE_ID, MON_DATE)
REFERENCES TOAD_DATA_FILES ON DELETE CASCADE
) PCTFREE 5 PCTUSED 94;

CREATE TABLE TOAD_FREE_SPACE (
  FILE_ID              NUMBER NOT NULL,
  MON_DATE             DATE NOT NULL,
  BYTES                NUMBER NOT NULL,
  CONSTRAINT TOAD_FREE_SPACE_PK PRIMARY KEY (FILE_ID, MON_DATE)
  USING INDEX PCTFREE 5,
  CONSTRAINT TOAD_FREE_SPACE_FK FOREIGN KEY (FILE_ID, MON_DATE)
REFERENCES TOAD_DATA_FILES ON DELETE CASCADE
) PCTFREE 5 PCTUSED 94;

CREATE OR REPLACE FORCE VIEW TOAD_SPACE
  (TABLESPACE, FREE_MEGS, USED_MEGS, ALLOC_MEGS, PCT_FREE, PCT_USED)
  AS
SELECT tdf.tablespace_name,
       ROUND(SUM(NVL(tfs.bytes,0))/1048576),
       ROUND((SUM(tdf.bytes)-SUM(NVL(tfs.bytes,0)))/1048576),
       SUM(tdf.BYTES)/1048576,
       ROUND(SUM(NVL(tfs.bytes,0))/SUM(tdf.bytes),2),
       1-ROUND(SUM(NVL(tfs.bytes,0))/SUM(tdf.bytes),2)
FROM   toad_data_files tdf, toad_free_space tfs
WHERE  tdf.file_id  = tfs.file_id (+)
AND    tdf.mon_date = tfs.mon_date (+)
AND    tdf.mon_date <= SYSDATE
GROUP BY tdf.tablespace_name;

CREATE OR REPLACE FORCE VIEW TOAD_SPACE_HIST
  (file_id, tablespace, mdate, usedspace)
  AS
SELECT a.file_id, a.tsp, a.mdate, GREATEST(ROUND(SUM(a.space)/1048576), 0)
FROM (SELECT   tdf.file_id file_id,
               tdf.tablespace_name tsp,
               tdf.mon_date mdate,
               SUM(tdf.bytes) - SUM(NVL(tfs.bytes,0)) space
      FROM     toad_data_files tdf, toad_free_space tfs
      WHERE    tdf.file_id  = tfs.file_id (+)
      AND      tdf.mon_date = tfs.mon_date (+)
      GROUP BY tdf.file_id,
               tdf.tablespace_name,
               tdf.mon_date ) a
GROUP BY file_id, tsp, mdate;

CREATE OR REPLACE PUBLIC SYNONYM TOAD_FILESTAT    FOR TOAD_FILESTAT;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_FREE_SPACE  FOR TOAD_FREE_SPACE;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_DATA_FILES  FOR TOAD_DATA_FILES;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_TABLESPACES FOR TOAD_TABLESPACES;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_REF         FOR TOAD_REF;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_SPACE_HIST  FOR TOAD_SPACE_HIST;
CREATE OR REPLACE PUBLIC SYNONYM TOAD_SPACE       FOR TOAD_SPACE;

GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_FILESTAT TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_FREE_SPACE TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_DATA_FILES TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_TABLESPACES TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_SPACE_HIST TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_SPACE TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON TOAD_REF TO PUBLIC;
CREATE OR REPLACE PACKAGE TOAD_SPACEMAN IS
  PROCEDURE CAPTURE;
  PROCEDURE RESET;
END;
/
CREATE OR REPLACE PACKAGE BODY TOAD_SPACEMAN IS
PROCEDURE RESET AS
BEGIN
  /* DELETE DATA FROM ALL TABLES */
  DELETE FROM TOAD_TABLESPACES;

  /* LOAD REAL DATA FOR TODAY */
  TOAD_SPACEMAN.CAPTURE;

  /* LOAD DUMMY DATA FOR 60 DAYS */
  FOR I IN 1..60 LOOP
    INSERT INTO TOAD_TABLESPACES
    SELECT TABLESPACE_NAME, TRUNC(MON_DATE-I)
    FROM TOAD_TABLESPACES WHERE TRUNC(MON_DATE) = TRUNC(SYSDATE);

    INSERT INTO TOAD_DATA_FILES
    SELECT FILE_ID, TRUNC(MON_DATE-I), TABLESPACE_NAME, FILE_NAME, ROUND(BYTES*(1-I/100))
    FROM TOAD_DATA_FILES WHERE TRUNC(MON_DATE) = TRUNC(SYSDATE);

    INSERT INTO TOAD_FREE_SPACE
    SELECT FILE_ID, TRUNC(MON_DATE-I), ROUND(BYTES*(1+I/100))
    FROM TOAD_FREE_SPACE WHERE TRUNC(MON_DATE) = TRUNC(SYSDATE);

    INSERT INTO TOAD_FILESTAT
    SELECT FILE_ID, TRUNC(MON_DATE-I), PHYRDS, PHYWRTS,
    PHYBLKRD, PHYBLKWRT, READTIM, WRITETIM
    FROM TOAD_FILESTAT WHERE TRUNC(MON_DATE) = TRUNC(SYSDATE);

  END LOOP;
  COMMIT;
END RESET;

PROCEDURE CAPTURE AS
  V_MON_DATE    DATE    := NULL;
  V_ROW_SIZE    INTEGER := 100000;
  NumDaysToRemove NUMBER;
  CURSOR History_Cur IS
    SELECT Value
      FROM TOAD_REF
     WHERE Name = 'Space Manager History Limit';
BEGIN
  /* SAVE TODAYS DATE */
  V_MON_DATE := SYSDATE; -- removed Trunc() to allow interval less than one day
  /* RETRIEVE THE NUMBER OF DAYS TO REMOVE */
  OPEN History_Cur;
  FETCH History_Cur INTO NumDaysToRemove;

  /* DELETE DATA OLDER THAN USER SPECIFIED DAYS */
  DELETE FROM TOAD_TABLESPACES WHERE MON_DATE < V_MON_DATE - NumDaysToRemove;
  /* DELETE PRE-EXISTING DATA FOR CURRENT DATE AND TIME */
  DELETE FROM TOAD_TABLESPACES WHERE MON_DATE = V_MON_DATE;
  /* DELETE DATA FOR NONEXISTENT TABLESPACES */
  DELETE FROM TOAD_TABLESPACES X
  WHERE NOT EXISTS (SELECT 1 FROM DBA_TABLESPACES D
  WHERE X.TABLESPACE_NAME = D.TABLESPACE_NAME);
  --/* DELETE DATA FOR NONEXISTENT DATA FILES */
  --DELETE FROM TOAD_DATA_FILES X
  -- WHERE NOT EXISTS (SELECT 1 FROM DBA_DATA_FILES D
  --                    WHERE X.TABLESPACE_NAME = D.TABLESPACE_NAME
  --                      AND X.FILE_NAME       = D.FILE_NAME);
  /* INSERT NEW TABLESPACES FOUND */
  INSERT INTO TOAD_TABLESPACES
  SELECT TABLESPACE_NAME, V_MON_DATE
    FROM DBA_TABLESPACES;

  /* INSERT NEW DATA FILES FOUND */
  INSERT INTO TOAD_DATA_FILES
  SELECT FILE_ID, V_MON_DATE, TABLESPACE_NAME, FILE_NAME, BYTES
    FROM DBA_DATA_FILES;

  /* COLLECT CURRENT FREE SPACE DATA */
  INSERT INTO TOAD_FREE_SPACE
  SELECT FILE_ID, V_MON_DATE, SUM(BYTES)
    FROM DBA_FREE_SPACE
   GROUP BY FILE_ID, TRUNC(SYSDATE);

  /* COLLECT CURRENT IO RATE DATA */
  INSERT INTO TOAD_FILESTAT
  SELECT FILE#, V_MON_DATE, PHYRDS, PHYWRTS,
         PHYBLKRD, PHYBLKWRT, READTIM, WRITETIM
    FROM V$FILESTAT;
  COMMIT;

END CAPTURE;

END TOAD_SPACEMAN;
/
CREATE OR REPLACE PUBLIC SYNONYM TOAD_SPACEMAN FOR TOAD_SPACEMAN;
GRANT EXECUTE ON TOAD_SPACEMAN TO PUBLIC;
UPDATE TOAD_REF SET Value = 1
WHERE Name = 'Space Manager History Unit';
UPDATE TOAD_REF SET Value = 350
WHERE Name = 'Space Manager History Limit';
DECLARE
  X NUMBER;
BEGIN
  SYS.DBMS_JOB.SUBMIT
    (
      job        => X
     ,what       => 'BEGIN
  TOAD_SPACEMAN.CAPTURE;
END;'
     ,next_date  => to_date('16/02/2021 10:00:43','dd/mm/yyyy hh24:mi:ss')
     ,interval   => 'TRUNC(SYSDATE+1)'
     ,no_parse   => TRUE
    );
UPDATE TOAD_REF SET Value = to_char(x)
WHERE Name = 'Space Manager JobID';
END;
/
COMMIT;
